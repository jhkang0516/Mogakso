{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/jhkang0516/Mogakso/blob/main/pycaret%20%2B%20IQR%20%2B%20StandardScaler\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "baqxuij3v6R_",
        "outputId": "69772590-0b7f-4609-9ca4-36fd47488ea6"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: pycaret in /usr/local/lib/python3.10/dist-packages (3.0.4)\n",
            "Requirement already satisfied: ipython>=5.5.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (7.34.0)\n",
            "Requirement already satisfied: ipywidgets>=7.6.5 in /usr/local/lib/python3.10/dist-packages (from pycaret) (7.7.1)\n",
            "Requirement already satisfied: tqdm>=4.62.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (4.65.0)\n",
            "Requirement already satisfied: numpy<1.24,>=1.21 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.22.4)\n",
            "Requirement already satisfied: pandas<2.0.0,>=1.3.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.5.3)\n",
            "Requirement already satisfied: jinja2>=1.2 in /usr/local/lib/python3.10/dist-packages (from pycaret) (3.1.2)\n",
            "Requirement already satisfied: scipy<2.0.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.10.1)\n",
            "Requirement already satisfied: joblib>=1.2.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.3.1)\n",
            "Requirement already satisfied: scikit-learn<1.3.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.2.2)\n",
            "Requirement already satisfied: pyod>=1.0.8 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.1.0)\n",
            "Requirement already satisfied: imbalanced-learn>=0.8.1 in /usr/local/lib/python3.10/dist-packages (from pycaret) (0.10.1)\n",
            "Requirement already satisfied: category-encoders>=2.4.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (2.6.1)\n",
            "Requirement already satisfied: lightgbm>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (3.3.5)\n",
            "Requirement already satisfied: numba>=0.55.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (0.56.4)\n",
            "Requirement already satisfied: requests>=2.27.1 in /usr/local/lib/python3.10/dist-packages (from pycaret) (2.27.1)\n",
            "Requirement already satisfied: psutil>=5.9.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (5.9.5)\n",
            "Requirement already satisfied: markupsafe>=2.0.1 in /usr/local/lib/python3.10/dist-packages (from pycaret) (2.1.3)\n",
            "Requirement already satisfied: importlib-metadata>=4.12.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (5.2.0)\n",
            "Requirement already satisfied: nbformat>=4.2.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (5.9.1)\n",
            "Requirement already satisfied: cloudpickle in /usr/local/lib/python3.10/dist-packages (from pycaret) (2.2.1)\n",
            "Requirement already satisfied: deprecation>=2.1.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (2.1.0)\n",
            "Requirement already satisfied: xxhash in /usr/local/lib/python3.10/dist-packages (from pycaret) (3.2.0)\n",
            "Requirement already satisfied: matplotlib>=3.3.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (3.7.1)\n",
            "Requirement already satisfied: scikit-plot>=0.3.7 in /usr/local/lib/python3.10/dist-packages (from pycaret) (0.3.7)\n",
            "Requirement already satisfied: yellowbrick>=1.4 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.5)\n",
            "Requirement already satisfied: plotly>=5.0.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (5.13.1)\n",
            "Requirement already satisfied: kaleido>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from pycaret) (0.2.1)\n",
            "Requirement already satisfied: schemdraw==0.15 in /usr/local/lib/python3.10/dist-packages (from pycaret) (0.15)\n",
            "Requirement already satisfied: plotly-resampler>=0.8.3.1 in /usr/local/lib/python3.10/dist-packages (from pycaret) (0.9.1)\n",
            "Requirement already satisfied: statsmodels>=0.12.1 in /usr/local/lib/python3.10/dist-packages (from pycaret) (0.13.5)\n",
            "Requirement already satisfied: sktime!=0.17.1,!=0.17.2,!=0.18.0,>=0.16.1 in /usr/local/lib/python3.10/dist-packages (from pycaret) (0.21.0)\n",
            "Requirement already satisfied: tbats>=1.1.3 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.1.3)\n",
            "Requirement already satisfied: pmdarima!=1.8.1,<3.0.0,>=1.8.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (2.0.3)\n",
            "Requirement already satisfied: wurlitzer in /usr/local/lib/python3.10/dist-packages (from pycaret) (3.0.3)\n",
            "Requirement already satisfied: patsy>=0.5.1 in /usr/local/lib/python3.10/dist-packages (from category-encoders>=2.4.0->pycaret) (0.5.3)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from deprecation>=2.1.0->pycaret) (21.3)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from imbalanced-learn>=0.8.1->pycaret) (3.2.0)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.10/dist-packages (from importlib-metadata>=4.12.0->pycaret) (3.16.2)\n",
            "Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (67.7.2)\n",
            "Requirement already satisfied: jedi>=0.16 in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (0.18.2)\n",
            "Requirement already satisfied: decorator in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (4.4.2)\n",
            "Requirement already satisfied: pickleshare in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (0.7.5)\n",
            "Requirement already satisfied: traitlets>=4.2 in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (5.7.1)\n",
            "Requirement already satisfied: prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (3.0.39)\n",
            "Requirement already satisfied: pygments in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (2.14.0)\n",
            "Requirement already satisfied: backcall in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (0.2.0)\n",
            "Requirement already satisfied: matplotlib-inline in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (0.1.6)\n",
            "Requirement already satisfied: pexpect>4.3 in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (4.8.0)\n",
            "Requirement already satisfied: ipykernel>=4.5.1 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.6.5->pycaret) (5.5.6)\n",
            "Requirement already satisfied: ipython-genutils~=0.2.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.6.5->pycaret) (0.2.0)\n",
            "Requirement already satisfied: widgetsnbextension~=3.6.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.6.5->pycaret) (3.6.4)\n",
            "Requirement already satisfied: jupyterlab-widgets>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.6.5->pycaret) (3.0.8)\n",
            "Requirement already satisfied: wheel in /usr/local/lib/python3.10/dist-packages (from lightgbm>=3.0.0->pycaret) (0.40.0)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret) (1.1.0)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret) (0.11.0)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret) (4.41.0)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret) (1.4.4)\n",
            "Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret) (8.4.0)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret) (3.1.0)\n",
            "Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret) (2.8.2)\n",
            "Requirement already satisfied: fastjsonschema in /usr/local/lib/python3.10/dist-packages (from nbformat>=4.2.0->pycaret) (2.17.1)\n",
            "Requirement already satisfied: jsonschema>=2.6 in /usr/local/lib/python3.10/dist-packages (from nbformat>=4.2.0->pycaret) (4.3.3)\n",
            "Requirement already satisfied: jupyter-core in /usr/local/lib/python3.10/dist-packages (from nbformat>=4.2.0->pycaret) (5.3.1)\n",
            "Requirement already satisfied: llvmlite<0.40,>=0.39.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba>=0.55.0->pycaret) (0.39.1)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas<2.0.0,>=1.3.0->pycaret) (2022.7.1)\n",
            "Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from plotly>=5.0.0->pycaret) (8.2.2)\n",
            "Requirement already satisfied: dash<3.0.0,>=2.11.0 in /usr/local/lib/python3.10/dist-packages (from plotly-resampler>=0.8.3.1->pycaret) (2.11.1)\n",
            "Requirement already satisfied: orjson<4.0.0,>=3.8.0 in /usr/local/lib/python3.10/dist-packages (from plotly-resampler>=0.8.3.1->pycaret) (3.9.2)\n",
            "Requirement already satisfied: trace-updater>=0.0.8 in /usr/local/lib/python3.10/dist-packages (from plotly-resampler>=0.8.3.1->pycaret) (0.0.9.1)\n",
            "Requirement already satisfied: tsdownsample==0.1.2 in /usr/local/lib/python3.10/dist-packages (from plotly-resampler>=0.8.3.1->pycaret) (0.1.2)\n",
            "Requirement already satisfied: Cython!=0.29.18,!=0.29.31,>=0.29 in /usr/local/lib/python3.10/dist-packages (from pmdarima!=1.8.1,<3.0.0,>=1.8.0->pycaret) (0.29.36)\n",
            "Requirement already satisfied: urllib3 in /usr/local/lib/python3.10/dist-packages (from pmdarima!=1.8.1,<3.0.0,>=1.8.0->pycaret) (1.26.16)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from pyod>=1.0.8->pycaret) (1.16.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.27.1->pycaret) (2023.5.7)\n",
            "Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.10/dist-packages (from requests>=2.27.1->pycaret) (2.0.12)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.27.1->pycaret) (3.4)\n",
            "Requirement already satisfied: deprecated>=1.2.13 in /usr/local/lib/python3.10/dist-packages (from sktime!=0.17.1,!=0.17.2,!=0.18.0,>=0.16.1->pycaret) (1.2.14)\n",
            "Requirement already satisfied: scikit-base<0.6.0 in /usr/local/lib/python3.10/dist-packages (from sktime!=0.17.1,!=0.17.2,!=0.18.0,>=0.16.1->pycaret) (0.5.0)\n",
            "Requirement already satisfied: Flask<2.3.0,>=1.0.4 in /usr/local/lib/python3.10/dist-packages (from dash<3.0.0,>=2.11.0->plotly-resampler>=0.8.3.1->pycaret) (2.2.3)\n",
            "Requirement already satisfied: Werkzeug<2.3.0 in /usr/local/lib/python3.10/dist-packages (from dash<3.0.0,>=2.11.0->plotly-resampler>=0.8.3.1->pycaret) (2.2.3)\n",
            "Requirement already satisfied: dash-html-components==2.0.0 in /usr/local/lib/python3.10/dist-packages (from dash<3.0.0,>=2.11.0->plotly-resampler>=0.8.3.1->pycaret) (2.0.0)\n",
            "Requirement already satisfied: dash-core-components==2.0.0 in /usr/local/lib/python3.10/dist-packages (from dash<3.0.0,>=2.11.0->plotly-resampler>=0.8.3.1->pycaret) (2.0.0)\n",
            "Requirement already satisfied: dash-table==5.0.0 in /usr/local/lib/python3.10/dist-packages (from dash<3.0.0,>=2.11.0->plotly-resampler>=0.8.3.1->pycaret) (5.0.0)\n",
            "Requirement already satisfied: typing-extensions>=4.1.1 in /usr/local/lib/python3.10/dist-packages (from dash<3.0.0,>=2.11.0->plotly-resampler>=0.8.3.1->pycaret) (4.7.1)\n",
            "Requirement already satisfied: retrying in /usr/local/lib/python3.10/dist-packages (from dash<3.0.0,>=2.11.0->plotly-resampler>=0.8.3.1->pycaret) (1.3.4)\n",
            "Requirement already satisfied: ansi2html in /usr/local/lib/python3.10/dist-packages (from dash<3.0.0,>=2.11.0->plotly-resampler>=0.8.3.1->pycaret) (1.8.0)\n",
            "Requirement already satisfied: nest-asyncio in /usr/local/lib/python3.10/dist-packages (from dash<3.0.0,>=2.11.0->plotly-resampler>=0.8.3.1->pycaret) (1.5.6)\n",
            "Requirement already satisfied: wrapt<2,>=1.10 in /usr/local/lib/python3.10/dist-packages (from deprecated>=1.2.13->sktime!=0.17.1,!=0.17.2,!=0.18.0,>=0.16.1->pycaret) (1.14.1)\n",
            "Requirement already satisfied: jupyter-client in /usr/local/lib/python3.10/dist-packages (from ipykernel>=4.5.1->ipywidgets>=7.6.5->pycaret) (6.1.12)\n",
            "Requirement already satisfied: tornado>=4.2 in /usr/local/lib/python3.10/dist-packages (from ipykernel>=4.5.1->ipywidgets>=7.6.5->pycaret) (6.3.1)\n",
            "Requirement already satisfied: parso<0.9.0,>=0.8.0 in /usr/local/lib/python3.10/dist-packages (from jedi>=0.16->ipython>=5.5.0->pycaret) (0.8.3)\n",
            "Requirement already satisfied: attrs>=17.4.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=2.6->nbformat>=4.2.0->pycaret) (23.1.0)\n",
            "Requirement already satisfied: pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=2.6->nbformat>=4.2.0->pycaret) (0.19.3)\n",
            "Requirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.10/dist-packages (from pexpect>4.3->ipython>=5.5.0->pycaret) (0.7.0)\n",
            "Requirement already satisfied: wcwidth in /usr/local/lib/python3.10/dist-packages (from prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0->ipython>=5.5.0->pycaret) (0.2.6)\n",
            "Requirement already satisfied: notebook>=4.4.1 in /usr/local/lib/python3.10/dist-packages (from widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (6.4.8)\n",
            "Requirement already satisfied: platformdirs>=2.5 in /usr/local/lib/python3.10/dist-packages (from jupyter-core->nbformat>=4.2.0->pycaret) (3.9.1)\n",
            "Requirement already satisfied: itsdangerous>=2.0 in /usr/local/lib/python3.10/dist-packages (from Flask<2.3.0,>=1.0.4->dash<3.0.0,>=2.11.0->plotly-resampler>=0.8.3.1->pycaret) (2.1.2)\n",
            "Requirement already satisfied: click>=8.0 in /usr/local/lib/python3.10/dist-packages (from Flask<2.3.0,>=1.0.4->dash<3.0.0,>=2.11.0->plotly-resampler>=0.8.3.1->pycaret) (8.1.6)\n",
            "Requirement already satisfied: pyzmq>=17 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (23.2.1)\n",
            "Requirement already satisfied: argon2-cffi in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (21.3.0)\n",
            "Requirement already satisfied: nbconvert in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (6.5.4)\n",
            "Requirement already satisfied: Send2Trash>=1.8.0 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.8.2)\n",
            "Requirement already satisfied: terminado>=0.8.3 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.17.1)\n",
            "Requirement already satisfied: prometheus-client in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.17.1)\n",
            "Requirement already satisfied: argon2-cffi-bindings in /usr/local/lib/python3.10/dist-packages (from argon2-cffi->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (21.2.0)\n",
            "Requirement already satisfied: lxml in /usr/local/lib/python3.10/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (4.9.3)\n",
            "Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.10/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (4.11.2)\n",
            "Requirement already satisfied: bleach in /usr/local/lib/python3.10/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (6.0.0)\n",
            "Requirement already satisfied: defusedxml in /usr/local/lib/python3.10/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.7.1)\n",
            "Requirement already satisfied: entrypoints>=0.2.2 in /usr/local/lib/python3.10/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.4)\n",
            "Requirement already satisfied: jupyterlab-pygments in /usr/local/lib/python3.10/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.2.2)\n",
            "Requirement already satisfied: mistune<2,>=0.8.1 in /usr/local/lib/python3.10/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.8.4)\n",
            "Requirement already satisfied: nbclient>=0.5.0 in /usr/local/lib/python3.10/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.8.0)\n",
            "Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.10/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.5.0)\n",
            "Requirement already satisfied: tinycss2 in /usr/local/lib/python3.10/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.2.1)\n",
            "Requirement already satisfied: cffi>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from argon2-cffi-bindings->argon2-cffi->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.15.1)\n",
            "Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.10/dist-packages (from beautifulsoup4->nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (2.4.1)\n",
            "Requirement already satisfied: webencodings in /usr/local/lib/python3.10/dist-packages (from bleach->nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.5.1)\n",
            "Requirement already satisfied: pycparser in /usr/local/lib/python3.10/dist-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (2.21)\n"
          ]
        }
      ],
      "source": [
        "!pip install pycaret"
      ],
      "id": "baqxuij3v6R_"
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NKi-6yBM1O9p",
        "outputId": "fa3e2da7-b11e-4e71-8ede-aca6b46baef4"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: pycaret[full] in /usr/local/lib/python3.10/dist-packages (3.0.4)\n",
            "Requirement already satisfied: ipython>=5.5.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (7.34.0)\n",
            "Requirement already satisfied: ipywidgets>=7.6.5 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (7.7.1)\n",
            "Requirement already satisfied: tqdm>=4.62.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (4.65.0)\n",
            "Requirement already satisfied: numpy<1.24,>=1.21 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (1.22.4)\n",
            "Requirement already satisfied: pandas<2.0.0,>=1.3.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (1.5.3)\n",
            "Requirement already satisfied: jinja2>=1.2 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (3.1.2)\n",
            "Requirement already satisfied: scipy<2.0.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (1.10.1)\n",
            "Requirement already satisfied: joblib>=1.2.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (1.3.1)\n",
            "Requirement already satisfied: scikit-learn<1.3.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (1.2.2)\n",
            "Requirement already satisfied: pyod>=1.0.8 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (1.1.0)\n",
            "Requirement already satisfied: imbalanced-learn>=0.8.1 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.10.1)\n",
            "Requirement already satisfied: category-encoders>=2.4.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (2.6.1)\n",
            "Requirement already satisfied: lightgbm>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (3.3.5)\n",
            "Requirement already satisfied: numba>=0.55.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.56.4)\n",
            "Requirement already satisfied: requests>=2.27.1 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (2.27.1)\n",
            "Requirement already satisfied: psutil>=5.9.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (5.9.5)\n",
            "Requirement already satisfied: markupsafe>=2.0.1 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (2.1.3)\n",
            "Requirement already satisfied: importlib-metadata>=4.12.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (5.2.0)\n",
            "Requirement already satisfied: nbformat>=4.2.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (5.9.1)\n",
            "Requirement already satisfied: cloudpickle in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (2.2.1)\n",
            "Requirement already satisfied: deprecation>=2.1.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (2.1.0)\n",
            "Requirement already satisfied: xxhash in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (3.2.0)\n",
            "Requirement already satisfied: matplotlib>=3.3.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (3.7.1)\n",
            "Requirement already satisfied: scikit-plot>=0.3.7 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.3.7)\n",
            "Requirement already satisfied: yellowbrick>=1.4 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (1.5)\n",
            "Requirement already satisfied: plotly>=5.0.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (5.13.1)\n",
            "Requirement already satisfied: kaleido>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.2.1)\n",
            "Requirement already satisfied: schemdraw==0.15 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.15)\n",
            "Requirement already satisfied: plotly-resampler>=0.8.3.1 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.9.1)\n",
            "Requirement already satisfied: statsmodels>=0.12.1 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.13.5)\n",
            "Requirement already satisfied: sktime!=0.17.1,!=0.17.2,!=0.18.0,>=0.16.1 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.21.0)\n",
            "Requirement already satisfied: tbats>=1.1.3 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (1.1.3)\n",
            "Requirement already satisfied: pmdarima!=1.8.1,<3.0.0,>=1.8.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (2.0.3)\n",
            "Requirement already satisfied: wurlitzer in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (3.0.3)\n",
            "Requirement already satisfied: shap>=0.38.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.42.1)\n",
            "Requirement already satisfied: interpret>=0.2.7 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.4.2)\n",
            "Requirement already satisfied: umap-learn>=0.5.2 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.5.3)\n",
            "Requirement already satisfied: pandas-profiling>=3.1.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (3.6.6)\n",
            "Requirement already satisfied: explainerdashboard>=0.3.8 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.4.2.2)\n",
            "Requirement already satisfied: Flask==2.2.3 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (2.2.3)\n",
            "Requirement already satisfied: bokeh<3.0.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (2.4.3)\n",
            "Requirement already satisfied: autoviz>=0.1.36 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.1.730)\n",
            "Requirement already satisfied: fairlearn==0.7.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.7.0)\n",
            "Requirement already satisfied: deepchecks>=0.9.2 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.17.3)\n",
            "Requirement already satisfied: xgboost>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (1.7.6)\n",
            "Requirement already satisfied: kmodes>=0.11.1 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.12.2)\n",
            "Requirement already satisfied: mlxtend>=0.19.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.22.0)\n",
            "Requirement already satisfied: statsforecast>=0.5.5 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (1.5.0)\n",
            "Requirement already satisfied: tune-sklearn>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.4.6)\n",
            "Requirement already satisfied: ray[tune]>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (2.6.1)\n",
            "Requirement already satisfied: hyperopt>=0.2.7 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.2.7)\n",
            "Requirement already satisfied: optuna>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (3.2.0)\n",
            "Requirement already satisfied: scikit-optimize>=0.9.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.9.0)\n",
            "Requirement already satisfied: mlflow<2.0.0,>=1.24.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (1.30.1)\n",
            "Requirement already satisfied: gradio>=2.8.10 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (3.38.0)\n",
            "Requirement already satisfied: boto3>=1.24.56 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (1.28.10)\n",
            "Requirement already satisfied: fastapi>=0.75.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.100.0)\n",
            "Requirement already satisfied: uvicorn>=0.17.6 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.23.1)\n",
            "Requirement already satisfied: m2cgen>=0.9.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.10.0)\n",
            "Requirement already satisfied: evidently<0.3,>=0.1.45.dev0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.2.8)\n",
            "Requirement already satisfied: fugue>=0.8.0 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (0.8.5)\n",
            "Requirement already satisfied: pytest>=7.0.1 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (7.2.2)\n",
            "Requirement already satisfied: moto>=3.0.7 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (4.1.13)\n",
            "Requirement already satisfied: dash[testing] in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (2.11.1)\n",
            "Requirement already satisfied: scikit-learn-intelex>=2023.0.1 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (2023.2.1)\n",
            "Requirement already satisfied: catboost>=0.23.2 in /usr/local/lib/python3.10/dist-packages (from pycaret[full]) (1.2)\n",
            "Requirement already satisfied: Werkzeug>=2.2.2 in /usr/local/lib/python3.10/dist-packages (from Flask==2.2.3->pycaret[full]) (2.2.3)\n",
            "Requirement already satisfied: itsdangerous>=2.0 in /usr/local/lib/python3.10/dist-packages (from Flask==2.2.3->pycaret[full]) (2.1.2)\n",
            "Requirement already satisfied: click>=8.0 in /usr/local/lib/python3.10/dist-packages (from Flask==2.2.3->pycaret[full]) (8.1.6)\n",
            "Requirement already satisfied: emoji in /usr/local/lib/python3.10/dist-packages (from autoviz>=0.1.36->pycaret[full]) (2.6.0)\n",
            "Requirement already satisfied: fsspec>=0.8.3 in /usr/local/lib/python3.10/dist-packages (from autoviz>=0.1.36->pycaret[full]) (2023.6.0)\n",
            "Requirement already satisfied: holoviews~=1.14.9 in /usr/local/lib/python3.10/dist-packages (from autoviz>=0.1.36->pycaret[full]) (1.14.9)\n",
            "Requirement already satisfied: hvplot~=0.7.3 in /usr/local/lib/python3.10/dist-packages (from autoviz>=0.1.36->pycaret[full]) (0.7.3)\n",
            "Requirement already satisfied: jupyter in /usr/local/lib/python3.10/dist-packages (from autoviz>=0.1.36->pycaret[full]) (1.0.0)\n",
            "Requirement already satisfied: nltk in /usr/local/lib/python3.10/dist-packages (from autoviz>=0.1.36->pycaret[full]) (3.8.1)\n",
            "Requirement already satisfied: pandas-dq==1.28 in /usr/local/lib/python3.10/dist-packages (from autoviz>=0.1.36->pycaret[full]) (1.28)\n",
            "Requirement already satisfied: panel>=0.12.6 in /usr/local/lib/python3.10/dist-packages (from autoviz>=0.1.36->pycaret[full]) (0.14.4)\n",
            "Requirement already satisfied: pyamg in /usr/local/lib/python3.10/dist-packages (from autoviz>=0.1.36->pycaret[full]) (5.0.1)\n",
            "Requirement already satisfied: seaborn>=0.11.1 in /usr/local/lib/python3.10/dist-packages (from autoviz>=0.1.36->pycaret[full]) (0.12.2)\n",
            "Requirement already satisfied: textblob in /usr/local/lib/python3.10/dist-packages (from autoviz>=0.1.36->pycaret[full]) (0.17.1)\n",
            "Requirement already satisfied: typing-extensions>=4.1.1 in /usr/local/lib/python3.10/dist-packages (from autoviz>=0.1.36->pycaret[full]) (4.7.1)\n",
            "Requirement already satisfied: wordcloud in /usr/local/lib/python3.10/dist-packages (from autoviz>=0.1.36->pycaret[full]) (1.9.2)\n",
            "Requirement already satisfied: xlrd in /usr/local/lib/python3.10/dist-packages (from autoviz>=0.1.36->pycaret[full]) (2.0.1)\n",
            "Requirement already satisfied: packaging>=16.8 in /usr/local/lib/python3.10/dist-packages (from bokeh<3.0.0->pycaret[full]) (21.3)\n",
            "Requirement already satisfied: pillow>=7.1.0 in /usr/local/lib/python3.10/dist-packages (from bokeh<3.0.0->pycaret[full]) (8.4.0)\n",
            "Requirement already satisfied: PyYAML>=3.10 in /usr/local/lib/python3.10/dist-packages (from bokeh<3.0.0->pycaret[full]) (6.0.1)\n",
            "Requirement already satisfied: tornado>=5.1 in /usr/local/lib/python3.10/dist-packages (from bokeh<3.0.0->pycaret[full]) (6.3.1)\n",
            "Requirement already satisfied: botocore<1.32.0,>=1.31.10 in /usr/local/lib/python3.10/dist-packages (from boto3>=1.24.56->pycaret[full]) (1.31.10)\n",
            "Requirement already satisfied: jmespath<2.0.0,>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from boto3>=1.24.56->pycaret[full]) (1.0.1)\n",
            "Requirement already satisfied: s3transfer<0.7.0,>=0.6.0 in /usr/local/lib/python3.10/dist-packages (from boto3>=1.24.56->pycaret[full]) (0.6.1)\n",
            "Requirement already satisfied: graphviz in /usr/local/lib/python3.10/dist-packages (from catboost>=0.23.2->pycaret[full]) (0.20.1)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from catboost>=0.23.2->pycaret[full]) (1.16.0)\n",
            "Requirement already satisfied: patsy>=0.5.1 in /usr/local/lib/python3.10/dist-packages (from category-encoders>=2.4.0->pycaret[full]) (0.5.3)\n",
            "Requirement already satisfied: jsonpickle>=2 in /usr/local/lib/python3.10/dist-packages (from deepchecks>=0.9.2->pycaret[full]) (3.0.1)\n",
            "Requirement already satisfied: PyNomaly>=0.3.3 in /usr/local/lib/python3.10/dist-packages (from deepchecks>=0.9.2->pycaret[full]) (0.3.3)\n",
            "Requirement already satisfied: pyzmq<24.0.0 in /usr/local/lib/python3.10/dist-packages (from deepchecks>=0.9.2->pycaret[full]) (23.2.1)\n",
            "Requirement already satisfied: beautifulsoup4>=4.11.1 in /usr/local/lib/python3.10/dist-packages (from deepchecks>=0.9.2->pycaret[full]) (4.11.2)\n",
            "Requirement already satisfied: ipykernel>=5.3.0 in /usr/local/lib/python3.10/dist-packages (from deepchecks>=0.9.2->pycaret[full]) (5.5.6)\n",
            "Requirement already satisfied: pydantic<2 in /usr/local/lib/python3.10/dist-packages (from evidently<0.3,>=0.1.45.dev0->pycaret[full]) (1.10.11)\n",
            "Requirement already satisfied: dash-auth in /usr/local/lib/python3.10/dist-packages (from explainerdashboard>=0.3.8->pycaret[full]) (2.0.0)\n",
            "Requirement already satisfied: dash-bootstrap-components>=1 in /usr/local/lib/python3.10/dist-packages (from explainerdashboard>=0.3.8->pycaret[full]) (1.4.2)\n",
            "Requirement already satisfied: dtreeviz>=2.1 in /usr/local/lib/python3.10/dist-packages (from explainerdashboard>=0.3.8->pycaret[full]) (2.2.2)\n",
            "Requirement already satisfied: flask-simplelogin in /usr/local/lib/python3.10/dist-packages (from explainerdashboard>=0.3.8->pycaret[full]) (0.1.2)\n",
            "Requirement already satisfied: Flask-WTF>=1.1 in /usr/local/lib/python3.10/dist-packages (from explainerdashboard>=0.3.8->pycaret[full]) (1.1.1)\n",
            "Requirement already satisfied: jupyter-dash>=0.4.1 in /usr/local/lib/python3.10/dist-packages (from explainerdashboard>=0.3.8->pycaret[full]) (0.4.2)\n",
            "Requirement already satisfied: oyaml in /usr/local/lib/python3.10/dist-packages (from explainerdashboard>=0.3.8->pycaret[full]) (1.0)\n",
            "Requirement already satisfied: waitress in /usr/local/lib/python3.10/dist-packages (from explainerdashboard>=0.3.8->pycaret[full]) (2.1.2)\n",
            "Requirement already satisfied: starlette<0.28.0,>=0.27.0 in /usr/local/lib/python3.10/dist-packages (from fastapi>=0.75.0->pycaret[full]) (0.27.0)\n",
            "Requirement already satisfied: triad>=0.9.0 in /usr/local/lib/python3.10/dist-packages (from fugue>=0.8.0->pycaret[full]) (0.9.1)\n",
            "Requirement already satisfied: adagio>=0.2.4 in /usr/local/lib/python3.10/dist-packages (from fugue>=0.8.0->pycaret[full]) (0.2.4)\n",
            "Requirement already satisfied: pyarrow>=0.15.1 in /usr/local/lib/python3.10/dist-packages (from fugue>=0.8.0->pycaret[full]) (9.0.0)\n",
            "Requirement already satisfied: qpd>=0.4.3 in /usr/local/lib/python3.10/dist-packages (from fugue>=0.8.0->pycaret[full]) (0.4.4)\n",
            "Requirement already satisfied: fugue-sql-antlr>=0.1.6 in /usr/local/lib/python3.10/dist-packages (from fugue>=0.8.0->pycaret[full]) (0.1.6)\n",
            "Requirement already satisfied: sqlglot in /usr/local/lib/python3.10/dist-packages (from fugue>=0.8.0->pycaret[full]) (17.8.0)\n",
            "Requirement already satisfied: dask[dataframe,distributed]>=2022.9.0 in /usr/local/lib/python3.10/dist-packages (from fugue>=0.8.0->pycaret[full]) (2022.12.1)\n",
            "Requirement already satisfied: aiofiles<24.0,>=22.0 in /usr/local/lib/python3.10/dist-packages (from gradio>=2.8.10->pycaret[full]) (23.1.0)\n",
            "Requirement already satisfied: aiohttp~=3.0 in /usr/local/lib/python3.10/dist-packages (from gradio>=2.8.10->pycaret[full]) (3.8.4)\n",
            "Requirement already satisfied: altair<6.0,>=4.2.0 in /usr/local/lib/python3.10/dist-packages (from gradio>=2.8.10->pycaret[full]) (4.2.2)\n",
            "Requirement already satisfied: ffmpy in /usr/local/lib/python3.10/dist-packages (from gradio>=2.8.10->pycaret[full]) (0.3.1)\n",
            "Requirement already satisfied: gradio-client>=0.2.10 in /usr/local/lib/python3.10/dist-packages (from gradio>=2.8.10->pycaret[full]) (0.2.10)\n",
            "Requirement already satisfied: httpx in /usr/local/lib/python3.10/dist-packages (from gradio>=2.8.10->pycaret[full]) (0.24.1)\n",
            "Requirement already satisfied: huggingface-hub>=0.14.0 in /usr/local/lib/python3.10/dist-packages (from gradio>=2.8.10->pycaret[full]) (0.16.4)\n",
            "Requirement already satisfied: markdown-it-py[linkify]>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from gradio>=2.8.10->pycaret[full]) (2.2.0)\n",
            "Requirement already satisfied: mdit-py-plugins<=0.3.3 in /usr/local/lib/python3.10/dist-packages (from gradio>=2.8.10->pycaret[full]) (0.3.3)\n",
            "Requirement already satisfied: orjson~=3.0 in /usr/local/lib/python3.10/dist-packages (from gradio>=2.8.10->pycaret[full]) (3.9.2)\n",
            "Requirement already satisfied: pydub in /usr/local/lib/python3.10/dist-packages (from gradio>=2.8.10->pycaret[full]) (0.25.1)\n",
            "Requirement already satisfied: python-multipart in /usr/local/lib/python3.10/dist-packages (from gradio>=2.8.10->pycaret[full]) (0.0.6)\n",
            "Requirement already satisfied: semantic-version~=2.0 in /usr/local/lib/python3.10/dist-packages (from gradio>=2.8.10->pycaret[full]) (2.10.0)\n",
            "Requirement already satisfied: websockets<12.0,>=10.0 in /usr/local/lib/python3.10/dist-packages (from gradio>=2.8.10->pycaret[full]) (11.0.3)\n",
            "Requirement already satisfied: networkx>=2.2 in /usr/local/lib/python3.10/dist-packages (from hyperopt>=0.2.7->pycaret[full]) (3.1)\n",
            "Requirement already satisfied: future in /usr/local/lib/python3.10/dist-packages (from hyperopt>=0.2.7->pycaret[full]) (0.18.3)\n",
            "Requirement already satisfied: py4j in /usr/local/lib/python3.10/dist-packages (from hyperopt>=0.2.7->pycaret[full]) (0.10.9.7)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from imbalanced-learn>=0.8.1->pycaret[full]) (3.2.0)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.10/dist-packages (from importlib-metadata>=4.12.0->pycaret[full]) (3.16.2)\n",
            "Requirement already satisfied: interpret-core[dash,debug,decisiontree,ebm,lime,linear,notebook,plotly,required,sensitivity,shap,skoperules,treeinterpreter]==0.4.2 in /usr/local/lib/python3.10/dist-packages (from interpret>=0.2.7->pycaret[full]) (0.4.2)\n",
            "Requirement already satisfied: dash-core-components>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from interpret-core[dash,debug,decisiontree,ebm,lime,linear,notebook,plotly,required,sensitivity,shap,skoperules,treeinterpreter]==0.4.2->interpret>=0.2.7->pycaret[full]) (2.0.0)\n",
            "Requirement already satisfied: dash-html-components>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from interpret-core[dash,debug,decisiontree,ebm,lime,linear,notebook,plotly,required,sensitivity,shap,skoperules,treeinterpreter]==0.4.2->interpret>=0.2.7->pycaret[full]) (2.0.0)\n",
            "Requirement already satisfied: dash-table>=4.1.0 in /usr/local/lib/python3.10/dist-packages (from interpret-core[dash,debug,decisiontree,ebm,lime,linear,notebook,plotly,required,sensitivity,shap,skoperules,treeinterpreter]==0.4.2->interpret>=0.2.7->pycaret[full]) (5.0.0)\n",
            "Requirement already satisfied: dash-cytoscape>=0.1.1 in /usr/local/lib/python3.10/dist-packages (from interpret-core[dash,debug,decisiontree,ebm,lime,linear,notebook,plotly,required,sensitivity,shap,skoperules,treeinterpreter]==0.4.2->interpret>=0.2.7->pycaret[full]) (0.3.0)\n",
            "Requirement already satisfied: gevent>=1.3.6 in /usr/local/lib/python3.10/dist-packages (from interpret-core[dash,debug,decisiontree,ebm,lime,linear,notebook,plotly,required,sensitivity,shap,skoperules,treeinterpreter]==0.4.2->interpret>=0.2.7->pycaret[full]) (23.7.0)\n",
            "Requirement already satisfied: SALib>=1.3.3 in /usr/local/lib/python3.10/dist-packages (from interpret-core[dash,debug,decisiontree,ebm,lime,linear,notebook,plotly,required,sensitivity,shap,skoperules,treeinterpreter]==0.4.2->interpret>=0.2.7->pycaret[full]) (1.4.7)\n",
            "Requirement already satisfied: treeinterpreter>=0.2.2 in /usr/local/lib/python3.10/dist-packages (from interpret-core[dash,debug,decisiontree,ebm,lime,linear,notebook,plotly,required,sensitivity,shap,skoperules,treeinterpreter]==0.4.2->interpret>=0.2.7->pycaret[full]) (0.2.3)\n",
            "Requirement already satisfied: lime>=0.1.1.33 in /usr/local/lib/python3.10/dist-packages (from interpret-core[dash,debug,decisiontree,ebm,lime,linear,notebook,plotly,required,sensitivity,shap,skoperules,treeinterpreter]==0.4.2->interpret>=0.2.7->pycaret[full]) (0.2.0.1)\n",
            "Requirement already satisfied: skope-rules>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from interpret-core[dash,debug,decisiontree,ebm,lime,linear,notebook,plotly,required,sensitivity,shap,skoperules,treeinterpreter]==0.4.2->interpret>=0.2.7->pycaret[full]) (1.0.1)\n",
            "Requirement already satisfied: dill>=0.2.5 in /usr/local/lib/python3.10/dist-packages (from interpret-core[dash,debug,decisiontree,ebm,lime,linear,notebook,plotly,required,sensitivity,shap,skoperules,treeinterpreter]==0.4.2->interpret>=0.2.7->pycaret[full]) (0.3.7)\n",
            "Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret[full]) (67.7.2)\n",
            "Requirement already satisfied: jedi>=0.16 in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret[full]) (0.18.2)\n",
            "Requirement already satisfied: decorator in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret[full]) (4.4.2)\n",
            "Requirement already satisfied: pickleshare in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret[full]) (0.7.5)\n",
            "Requirement already satisfied: traitlets>=4.2 in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret[full]) (5.7.1)\n",
            "Requirement already satisfied: prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret[full]) (3.0.39)\n",
            "Requirement already satisfied: pygments in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret[full]) (2.14.0)\n",
            "Requirement already satisfied: backcall in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret[full]) (0.2.0)\n",
            "Requirement already satisfied: matplotlib-inline in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret[full]) (0.1.6)\n",
            "Requirement already satisfied: pexpect>4.3 in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret[full]) (4.8.0)\n",
            "Requirement already satisfied: ipython-genutils~=0.2.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.6.5->pycaret[full]) (0.2.0)\n",
            "Requirement already satisfied: widgetsnbextension~=3.6.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.6.5->pycaret[full]) (3.6.4)\n",
            "Requirement already satisfied: jupyterlab-widgets>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.6.5->pycaret[full]) (3.0.8)\n",
            "Requirement already satisfied: wheel in /usr/local/lib/python3.10/dist-packages (from lightgbm>=3.0.0->pycaret[full]) (0.40.0)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret[full]) (1.1.0)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret[full]) (0.11.0)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret[full]) (4.41.0)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret[full]) (1.4.4)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret[full]) (3.1.0)\n",
            "Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret[full]) (2.8.2)\n",
            "Requirement already satisfied: databricks-cli<1,>=0.8.7 in /usr/local/lib/python3.10/dist-packages (from mlflow<2.0.0,>=1.24.0->pycaret[full]) (0.17.7)\n",
            "Requirement already satisfied: entrypoints<1 in /usr/local/lib/python3.10/dist-packages (from mlflow<2.0.0,>=1.24.0->pycaret[full]) (0.4)\n",
            "Requirement already satisfied: gitpython<4,>=2.1.0 in /usr/local/lib/python3.10/dist-packages (from mlflow<2.0.0,>=1.24.0->pycaret[full]) (3.1.32)\n",
            "Requirement already satisfied: protobuf<5,>=3.12.0 in /usr/local/lib/python3.10/dist-packages (from mlflow<2.0.0,>=1.24.0->pycaret[full]) (4.23.4)\n",
            "Requirement already satisfied: pytz<2023 in /usr/local/lib/python3.10/dist-packages (from mlflow<2.0.0,>=1.24.0->pycaret[full]) (2022.7.1)\n",
            "Requirement already satisfied: sqlparse<1,>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from mlflow<2.0.0,>=1.24.0->pycaret[full]) (0.4.4)\n",
            "Requirement already satisfied: alembic<2 in /usr/local/lib/python3.10/dist-packages (from mlflow<2.0.0,>=1.24.0->pycaret[full]) (1.11.1)\n",
            "Requirement already satisfied: docker<7,>=4.0.0 in /usr/local/lib/python3.10/dist-packages (from mlflow<2.0.0,>=1.24.0->pycaret[full]) (6.1.3)\n",
            "Requirement already satisfied: prometheus-flask-exporter<1 in /usr/local/lib/python3.10/dist-packages (from mlflow<2.0.0,>=1.24.0->pycaret[full]) (0.22.4)\n",
            "Requirement already satisfied: querystring-parser<2 in /usr/local/lib/python3.10/dist-packages (from mlflow<2.0.0,>=1.24.0->pycaret[full]) (1.2.4)\n",
            "Requirement already satisfied: sqlalchemy<2,>=1.4.0 in /usr/local/lib/python3.10/dist-packages (from mlflow<2.0.0,>=1.24.0->pycaret[full]) (1.4.49)\n",
            "Requirement already satisfied: gunicorn<21 in /usr/local/lib/python3.10/dist-packages (from mlflow<2.0.0,>=1.24.0->pycaret[full]) (20.1.0)\n",
            "Requirement already satisfied: cryptography>=3.3.1 in /usr/local/lib/python3.10/dist-packages (from moto>=3.0.7->pycaret[full]) (41.0.2)\n",
            "Requirement already satisfied: xmltodict in /usr/local/lib/python3.10/dist-packages (from moto>=3.0.7->pycaret[full]) (0.13.0)\n",
            "Requirement already satisfied: responses>=0.13.0 in /usr/local/lib/python3.10/dist-packages (from moto>=3.0.7->pycaret[full]) (0.23.1)\n",
            "Requirement already satisfied: fastjsonschema in /usr/local/lib/python3.10/dist-packages (from nbformat>=4.2.0->pycaret[full]) (2.17.1)\n",
            "Requirement already satisfied: jsonschema>=2.6 in /usr/local/lib/python3.10/dist-packages (from nbformat>=4.2.0->pycaret[full]) (4.3.3)\n",
            "Requirement already satisfied: jupyter-core in /usr/local/lib/python3.10/dist-packages (from nbformat>=4.2.0->pycaret[full]) (5.3.1)\n",
            "Requirement already satisfied: llvmlite<0.40,>=0.39.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba>=0.55.0->pycaret[full]) (0.39.1)\n",
            "Requirement already satisfied: cmaes>=0.9.1 in /usr/local/lib/python3.10/dist-packages (from optuna>=3.0.0->pycaret[full]) (0.10.0)\n",
            "Requirement already satisfied: colorlog in /usr/local/lib/python3.10/dist-packages (from optuna>=3.0.0->pycaret[full]) (6.7.0)\n",
            "Requirement already satisfied: ydata-profiling in /usr/local/lib/python3.10/dist-packages (from pandas-profiling>=3.1.0->pycaret[full]) (4.3.2)\n",
            "Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from plotly>=5.0.0->pycaret[full]) (8.2.2)\n",
            "Requirement already satisfied: trace-updater>=0.0.8 in /usr/local/lib/python3.10/dist-packages (from plotly-resampler>=0.8.3.1->pycaret[full]) (0.0.9.1)\n",
            "Requirement already satisfied: tsdownsample==0.1.2 in /usr/local/lib/python3.10/dist-packages (from plotly-resampler>=0.8.3.1->pycaret[full]) (0.1.2)\n",
            "Requirement already satisfied: Cython!=0.29.18,!=0.29.31,>=0.29 in /usr/local/lib/python3.10/dist-packages (from pmdarima!=1.8.1,<3.0.0,>=1.8.0->pycaret[full]) (0.29.36)\n",
            "Requirement already satisfied: urllib3 in /usr/local/lib/python3.10/dist-packages (from pmdarima!=1.8.1,<3.0.0,>=1.8.0->pycaret[full]) (1.26.16)\n",
            "Requirement already satisfied: attrs>=19.2.0 in /usr/local/lib/python3.10/dist-packages (from pytest>=7.0.1->pycaret[full]) (23.1.0)\n",
            "Requirement already satisfied: iniconfig in /usr/local/lib/python3.10/dist-packages (from pytest>=7.0.1->pycaret[full]) (2.0.0)\n",
            "Requirement already satisfied: pluggy<2.0,>=0.12 in /usr/local/lib/python3.10/dist-packages (from pytest>=7.0.1->pycaret[full]) (1.2.0)\n",
            "Requirement already satisfied: exceptiongroup>=1.0.0rc8 in /usr/local/lib/python3.10/dist-packages (from pytest>=7.0.1->pycaret[full]) (1.1.2)\n",
            "Requirement already satisfied: tomli>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from pytest>=7.0.1->pycaret[full]) (2.0.1)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from ray[tune]>=1.0.0->pycaret[full]) (3.12.2)\n",
            "Requirement already satisfied: msgpack<2.0.0,>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from ray[tune]>=1.0.0->pycaret[full]) (1.0.5)\n",
            "Requirement already satisfied: aiosignal in /usr/local/lib/python3.10/dist-packages (from ray[tune]>=1.0.0->pycaret[full]) (1.3.1)\n",
            "Requirement already satisfied: frozenlist in /usr/local/lib/python3.10/dist-packages (from ray[tune]>=1.0.0->pycaret[full]) (1.4.0)\n",
            "Requirement already satisfied: grpcio>=1.42.0 in /usr/local/lib/python3.10/dist-packages (from ray[tune]>=1.0.0->pycaret[full]) (1.56.0)\n",
            "Requirement already satisfied: tensorboardX>=1.9 in /usr/local/lib/python3.10/dist-packages (from ray[tune]>=1.0.0->pycaret[full]) (2.6.1)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.27.1->pycaret[full]) (2023.5.7)\n",
            "Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.10/dist-packages (from requests>=2.27.1->pycaret[full]) (2.0.12)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.27.1->pycaret[full]) (3.4)\n",
            "Requirement already satisfied: daal4py==2023.2.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn-intelex>=2023.0.1->pycaret[full]) (2023.2.1)\n",
            "Requirement already satisfied: daal==2023.2.1 in /usr/local/lib/python3.10/dist-packages (from daal4py==2023.2.1->scikit-learn-intelex>=2023.0.1->pycaret[full]) (2023.2.1)\n",
            "Requirement already satisfied: tbb==2021.* in /usr/local/lib/python3.10/dist-packages (from daal==2023.2.1->daal4py==2023.2.1->scikit-learn-intelex>=2023.0.1->pycaret[full]) (2021.10.0)\n",
            "Requirement already satisfied: pyaml>=16.9 in /usr/local/lib/python3.10/dist-packages (from scikit-optimize>=0.9.0->pycaret[full]) (23.7.0)\n",
            "Requirement already satisfied: slicer==0.0.7 in /usr/local/lib/python3.10/dist-packages (from shap>=0.38.0->pycaret[full]) (0.0.7)\n",
            "Requirement already satisfied: deprecated>=1.2.13 in /usr/local/lib/python3.10/dist-packages (from sktime!=0.17.1,!=0.17.2,!=0.18.0,>=0.16.1->pycaret[full]) (1.2.14)\n",
            "Requirement already satisfied: scikit-base<0.6.0 in /usr/local/lib/python3.10/dist-packages (from sktime!=0.17.1,!=0.17.2,!=0.18.0,>=0.16.1->pycaret[full]) (0.5.0)\n",
            "Requirement already satisfied: pynndescent>=0.5 in /usr/local/lib/python3.10/dist-packages (from umap-learn>=0.5.2->pycaret[full]) (0.5.10)\n",
            "Requirement already satisfied: h11>=0.8 in /usr/local/lib/python3.10/dist-packages (from uvicorn>=0.17.6->pycaret[full]) (0.14.0)\n",
            "Requirement already satisfied: retrying in /usr/local/lib/python3.10/dist-packages (from dash[testing]->pycaret[full]) (1.3.4)\n",
            "Requirement already satisfied: ansi2html in /usr/local/lib/python3.10/dist-packages (from dash[testing]->pycaret[full]) (1.8.0)\n",
            "Requirement already satisfied: nest-asyncio in /usr/local/lib/python3.10/dist-packages (from dash[testing]->pycaret[full]) (1.5.6)\n",
            "Requirement already satisfied: lxml>=4.6.2 in /usr/local/lib/python3.10/dist-packages (from dash[testing]->pycaret[full]) (4.9.3)\n",
            "Requirement already satisfied: percy>=2.0.2 in /usr/local/lib/python3.10/dist-packages (from dash[testing]->pycaret[full]) (2.0.2)\n",
            "Requirement already satisfied: selenium<=4.2.0,>=3.141.0 in /usr/local/lib/python3.10/dist-packages (from dash[testing]->pycaret[full]) (4.2.0)\n",
            "Requirement already satisfied: multiprocess>=0.70.12 in /usr/local/lib/python3.10/dist-packages (from dash[testing]->pycaret[full]) (0.70.15)\n",
            "Requirement already satisfied: dash-testing-stub>=0.0.2 in /usr/local/lib/python3.10/dist-packages (from dash[testing]->pycaret[full]) (0.0.2)\n",
            "Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp~=3.0->gradio>=2.8.10->pycaret[full]) (6.0.4)\n",
            "Requirement already satisfied: async-timeout<5.0,>=4.0.0a3 in /usr/local/lib/python3.10/dist-packages (from aiohttp~=3.0->gradio>=2.8.10->pycaret[full]) (4.0.2)\n",
            "Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp~=3.0->gradio>=2.8.10->pycaret[full]) (1.9.2)\n",
            "Requirement already satisfied: Mako in /usr/local/lib/python3.10/dist-packages (from alembic<2->mlflow<2.0.0,>=1.24.0->pycaret[full]) (1.2.4)\n",
            "Requirement already satisfied: toolz in /usr/local/lib/python3.10/dist-packages (from altair<6.0,>=4.2.0->gradio>=2.8.10->pycaret[full]) (0.12.0)\n",
            "Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.10/dist-packages (from beautifulsoup4>=4.11.1->deepchecks>=0.9.2->pycaret[full]) (2.4.1)\n",
            "Requirement already satisfied: cffi>=1.12 in /usr/local/lib/python3.10/dist-packages (from cryptography>=3.3.1->moto>=3.0.7->pycaret[full]) (1.15.1)\n",
            "Requirement already satisfied: partd>=0.3.10 in /usr/local/lib/python3.10/dist-packages (from dask[dataframe,distributed]>=2022.9.0->fugue>=0.8.0->pycaret[full]) (1.4.0)\n",
            "Requirement already satisfied: distributed==2022.12.1 in /usr/local/lib/python3.10/dist-packages (from dask[dataframe,distributed]>=2022.9.0->fugue>=0.8.0->pycaret[full]) (2022.12.1)\n",
            "Requirement already satisfied: locket>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from distributed==2022.12.1->dask[dataframe,distributed]>=2022.9.0->fugue>=0.8.0->pycaret[full]) (1.0.0)\n",
            "Requirement already satisfied: sortedcontainers!=2.0.0,!=2.0.1 in /usr/local/lib/python3.10/dist-packages (from distributed==2022.12.1->dask[dataframe,distributed]>=2022.9.0->fugue>=0.8.0->pycaret[full]) (2.4.0)\n",
            "Requirement already satisfied: tblib>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from distributed==2022.12.1->dask[dataframe,distributed]>=2022.9.0->fugue>=0.8.0->pycaret[full]) (2.0.0)\n",
            "Requirement already satisfied: zict>=0.1.3 in /usr/local/lib/python3.10/dist-packages (from distributed==2022.12.1->dask[dataframe,distributed]>=2022.9.0->fugue>=0.8.0->pycaret[full]) (3.0.0)\n",
            "Requirement already satisfied: pyjwt>=1.7.0 in /usr/lib/python3/dist-packages (from databricks-cli<1,>=0.8.7->mlflow<2.0.0,>=1.24.0->pycaret[full]) (2.3.0)\n",
            "Requirement already satisfied: oauthlib>=3.1.0 in /usr/local/lib/python3.10/dist-packages (from databricks-cli<1,>=0.8.7->mlflow<2.0.0,>=1.24.0->pycaret[full]) (3.2.2)\n",
            "Requirement already satisfied: tabulate>=0.7.7 in /usr/local/lib/python3.10/dist-packages (from databricks-cli<1,>=0.8.7->mlflow<2.0.0,>=1.24.0->pycaret[full]) (0.9.0)\n",
            "Requirement already satisfied: wrapt<2,>=1.10 in /usr/local/lib/python3.10/dist-packages (from deprecated>=1.2.13->sktime!=0.17.1,!=0.17.2,!=0.18.0,>=0.16.1->pycaret[full]) (1.14.1)\n",
            "Requirement already satisfied: websocket-client>=0.32.0 in /usr/local/lib/python3.10/dist-packages (from docker<7,>=4.0.0->mlflow<2.0.0,>=1.24.0->pycaret[full]) (1.6.1)\n",
            "Requirement already satisfied: colour in /usr/local/lib/python3.10/dist-packages (from dtreeviz>=2.1->explainerdashboard>=0.3.8->pycaret[full]) (0.1.5)\n",
            "Requirement already satisfied: WTForms in /usr/local/lib/python3.10/dist-packages (from Flask-WTF>=1.1->explainerdashboard>=0.3.8->pycaret[full]) (3.0.1)\n",
            "Requirement already satisfied: antlr4-python3-runtime<4.12,>=4.11.1 in /usr/local/lib/python3.10/dist-packages (from fugue-sql-antlr>=0.1.6->fugue>=0.8.0->pycaret[full]) (4.11.1)\n",
            "Requirement already satisfied: gitdb<5,>=4.0.1 in /usr/local/lib/python3.10/dist-packages (from gitpython<4,>=2.1.0->mlflow<2.0.0,>=1.24.0->pycaret[full]) (4.0.10)\n",
            "Requirement already satisfied: param<2.0,>=1.9.3 in /usr/local/lib/python3.10/dist-packages (from holoviews~=1.14.9->autoviz>=0.1.36->pycaret[full]) (1.13.0)\n",
            "Requirement already satisfied: pyviz-comms>=0.7.4 in /usr/local/lib/python3.10/dist-packages (from holoviews~=1.14.9->autoviz>=0.1.36->pycaret[full]) (2.3.2)\n",
            "Requirement already satisfied: colorcet in /usr/local/lib/python3.10/dist-packages (from holoviews~=1.14.9->autoviz>=0.1.36->pycaret[full]) (3.0.1)\n",
            "Requirement already satisfied: jupyter-client in /usr/local/lib/python3.10/dist-packages (from ipykernel>=5.3.0->deepchecks>=0.9.2->pycaret[full]) (6.1.12)\n",
            "Requirement already satisfied: parso<0.9.0,>=0.8.0 in /usr/local/lib/python3.10/dist-packages (from jedi>=0.16->ipython>=5.5.0->pycaret[full]) (0.8.3)\n",
            "Requirement already satisfied: pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=2.6->nbformat>=4.2.0->pycaret[full]) (0.19.3)\n",
            "Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py[linkify]>=2.0.0->gradio>=2.8.10->pycaret[full]) (0.1.2)\n",
            "Requirement already satisfied: linkify-it-py<3,>=1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py[linkify]>=2.0.0->gradio>=2.8.10->pycaret[full]) (2.0.2)\n",
            "Requirement already satisfied: regex>=2021.8.3 in /usr/local/lib/python3.10/dist-packages (from nltk->autoviz>=0.1.36->pycaret[full]) (2022.10.31)\n",
            "Requirement already satisfied: markdown in /usr/local/lib/python3.10/dist-packages (from panel>=0.12.6->autoviz>=0.1.36->pycaret[full]) (3.4.3)\n",
            "Requirement already satisfied: pyct>=0.4.4 in /usr/local/lib/python3.10/dist-packages (from panel>=0.12.6->autoviz>=0.1.36->pycaret[full]) (0.5.0)\n",
            "Requirement already satisfied: bleach in /usr/local/lib/python3.10/dist-packages (from panel>=0.12.6->autoviz>=0.1.36->pycaret[full]) (6.0.0)\n",
            "Requirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.10/dist-packages (from pexpect>4.3->ipython>=5.5.0->pycaret[full]) (0.7.0)\n",
            "Requirement already satisfied: prometheus-client in /usr/local/lib/python3.10/dist-packages (from prometheus-flask-exporter<1->mlflow<2.0.0,>=1.24.0->pycaret[full]) (0.17.1)\n",
            "Requirement already satisfied: wcwidth in /usr/local/lib/python3.10/dist-packages (from prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0->ipython>=5.5.0->pycaret[full]) (0.2.6)\n",
            "Requirement already satisfied: python-utils in /usr/local/lib/python3.10/dist-packages (from PyNomaly>=0.3.3->deepchecks>=0.9.2->pycaret[full]) (3.7.0)\n",
            "Requirement already satisfied: types-PyYAML in /usr/local/lib/python3.10/dist-packages (from responses>=0.13.0->moto>=3.0.7->pycaret[full]) (6.0.12.11)\n",
            "Requirement already satisfied: trio~=0.17 in /usr/local/lib/python3.10/dist-packages (from selenium<=4.2.0,>=3.141.0->dash[testing]->pycaret[full]) (0.22.2)\n",
            "Requirement already satisfied: trio-websocket~=0.9 in /usr/local/lib/python3.10/dist-packages (from selenium<=4.2.0,>=3.141.0->dash[testing]->pycaret[full]) (0.10.3)\n",
            "Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.10/dist-packages (from sqlalchemy<2,>=1.4.0->mlflow<2.0.0,>=1.24.0->pycaret[full]) (2.0.2)\n",
            "Requirement already satisfied: anyio<5,>=3.4.0 in /usr/local/lib/python3.10/dist-packages (from starlette<0.28.0,>=0.27.0->fastapi>=0.75.0->pycaret[full]) (3.7.1)\n",
            "Requirement already satisfied: fs in /usr/local/lib/python3.10/dist-packages (from triad>=0.9.0->fugue>=0.8.0->pycaret[full]) (2.4.16)\n",
            "Requirement already satisfied: notebook>=4.4.1 in /usr/local/lib/python3.10/dist-packages (from widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret[full]) (6.4.8)\n",
            "Requirement already satisfied: httpcore<0.18.0,>=0.15.0 in /usr/local/lib/python3.10/dist-packages (from httpx->gradio>=2.8.10->pycaret[full]) (0.17.3)\n",
            "Requirement already satisfied: sniffio in /usr/local/lib/python3.10/dist-packages (from httpx->gradio>=2.8.10->pycaret[full]) (1.3.0)\n",
            "Requirement already satisfied: qtconsole in /usr/local/lib/python3.10/dist-packages (from jupyter->autoviz>=0.1.36->pycaret[full]) (5.4.3)\n",
            "Requirement already satisfied: jupyter-console in /usr/local/lib/python3.10/dist-packages (from jupyter->autoviz>=0.1.36->pycaret[full]) (6.1.0)\n",
            "Requirement already satisfied: nbconvert in /usr/local/lib/python3.10/dist-packages (from jupyter->autoviz>=0.1.36->pycaret[full]) (6.5.4)\n",
            "Requirement already satisfied: platformdirs>=2.5 in /usr/local/lib/python3.10/dist-packages (from jupyter-core->nbformat>=4.2.0->pycaret[full]) (3.9.1)\n",
            "Requirement already satisfied: visions[type_image_path]==0.7.5 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling>=3.1.0->pycaret[full]) (0.7.5)\n",
            "Requirement already satisfied: htmlmin==0.1.12 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling>=3.1.0->pycaret[full]) (0.1.12)\n",
            "Requirement already satisfied: phik<0.13,>=0.11.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling>=3.1.0->pycaret[full]) (0.12.3)\n",
            "Requirement already satisfied: multimethod<2,>=1.4 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling>=3.1.0->pycaret[full]) (1.9.1)\n",
            "Requirement already satisfied: typeguard<3,>=2.13.2 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling>=3.1.0->pycaret[full]) (2.13.3)\n",
            "Requirement already satisfied: imagehash==4.3.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling>=3.1.0->pycaret[full]) (4.3.1)\n",
            "Requirement already satisfied: dacite>=1.8 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling>=3.1.0->pycaret[full]) (1.8.1)\n",
            "Requirement already satisfied: PyWavelets in /usr/local/lib/python3.10/dist-packages (from imagehash==4.3.1->ydata-profiling->pandas-profiling>=3.1.0->pycaret[full]) (1.4.1)\n",
            "Requirement already satisfied: tangled-up-in-unicode>=0.0.4 in /usr/local/lib/python3.10/dist-packages (from visions[type_image_path]==0.7.5->ydata-profiling->pandas-profiling>=3.1.0->pycaret[full]) (0.2.0)\n",
            "Requirement already satisfied: pycparser in /usr/local/lib/python3.10/dist-packages (from cffi>=1.12->cryptography>=3.3.1->moto>=3.0.7->pycaret[full]) (2.21)\n",
            "Requirement already satisfied: zope.event in /usr/local/lib/python3.10/dist-packages (from gevent>=1.3.6->interpret-core[dash,debug,decisiontree,ebm,lime,linear,notebook,plotly,required,sensitivity,shap,skoperules,treeinterpreter]==0.4.2->interpret>=0.2.7->pycaret[full]) (5.0)\n",
            "Requirement already satisfied: zope.interface in /usr/local/lib/python3.10/dist-packages (from gevent>=1.3.6->interpret-core[dash,debug,decisiontree,ebm,lime,linear,notebook,plotly,required,sensitivity,shap,skoperules,treeinterpreter]==0.4.2->interpret>=0.2.7->pycaret[full]) (6.0)\n",
            "Requirement already satisfied: smmap<6,>=3.0.1 in /usr/local/lib/python3.10/dist-packages (from gitdb<5,>=4.0.1->gitpython<4,>=2.1.0->mlflow<2.0.0,>=1.24.0->pycaret[full]) (5.0.0)\n",
            "Requirement already satisfied: scikit-image>=0.12 in /usr/local/lib/python3.10/dist-packages (from lime>=0.1.1.33->interpret-core[dash,debug,decisiontree,ebm,lime,linear,notebook,plotly,required,sensitivity,shap,skoperules,treeinterpreter]==0.4.2->interpret>=0.2.7->pycaret[full]) (0.19.3)\n",
            "Requirement already satisfied: uc-micro-py in /usr/local/lib/python3.10/dist-packages (from linkify-it-py<3,>=1->markdown-it-py[linkify]>=2.0.0->gradio>=2.8.10->pycaret[full]) (1.0.2)\n",
            "Requirement already satisfied: argon2-cffi in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret[full]) (21.3.0)\n",
            "Requirement already satisfied: Send2Trash>=1.8.0 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret[full]) (1.8.2)\n",
            "Requirement already satisfied: terminado>=0.8.3 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret[full]) (0.17.1)\n",
            "Requirement already satisfied: outcome in /usr/local/lib/python3.10/dist-packages (from trio~=0.17->selenium<=4.2.0,>=3.141.0->dash[testing]->pycaret[full]) (1.2.0)\n",
            "Requirement already satisfied: wsproto>=0.14 in /usr/local/lib/python3.10/dist-packages (from trio-websocket~=0.9->selenium<=4.2.0,>=3.141.0->dash[testing]->pycaret[full]) (1.2.0)\n",
            "Requirement already satisfied: PySocks!=1.5.7,<2.0,>=1.5.6 in /usr/local/lib/python3.10/dist-packages (from urllib3->pmdarima!=1.8.1,<3.0.0,>=1.8.0->pycaret[full]) (1.7.1)\n",
            "Requirement already satisfied: pyOpenSSL>=0.14 in /usr/local/lib/python3.10/dist-packages (from urllib3->pmdarima!=1.8.1,<3.0.0,>=1.8.0->pycaret[full]) (23.2.0)\n",
            "Requirement already satisfied: urllib3-secure-extra in /usr/local/lib/python3.10/dist-packages (from urllib3->pmdarima!=1.8.1,<3.0.0,>=1.8.0->pycaret[full]) (0.1.0)\n",
            "Requirement already satisfied: webencodings in /usr/local/lib/python3.10/dist-packages (from bleach->panel>=0.12.6->autoviz>=0.1.36->pycaret[full]) (0.5.1)\n",
            "Requirement already satisfied: appdirs~=1.4.3 in /usr/local/lib/python3.10/dist-packages (from fs->triad>=0.9.0->fugue>=0.8.0->pycaret[full]) (1.4.4)\n",
            "Requirement already satisfied: defusedxml in /usr/local/lib/python3.10/dist-packages (from nbconvert->jupyter->autoviz>=0.1.36->pycaret[full]) (0.7.1)\n",
            "Requirement already satisfied: jupyterlab-pygments in /usr/local/lib/python3.10/dist-packages (from nbconvert->jupyter->autoviz>=0.1.36->pycaret[full]) (0.2.2)\n",
            "Requirement already satisfied: mistune<2,>=0.8.1 in /usr/local/lib/python3.10/dist-packages (from nbconvert->jupyter->autoviz>=0.1.36->pycaret[full]) (0.8.4)\n",
            "Requirement already satisfied: nbclient>=0.5.0 in /usr/local/lib/python3.10/dist-packages (from nbconvert->jupyter->autoviz>=0.1.36->pycaret[full]) (0.8.0)\n",
            "Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.10/dist-packages (from nbconvert->jupyter->autoviz>=0.1.36->pycaret[full]) (1.5.0)\n",
            "Requirement already satisfied: tinycss2 in /usr/local/lib/python3.10/dist-packages (from nbconvert->jupyter->autoviz>=0.1.36->pycaret[full]) (1.2.1)\n",
            "Requirement already satisfied: qtpy>=2.0.1 in /usr/local/lib/python3.10/dist-packages (from qtconsole->jupyter->autoviz>=0.1.36->pycaret[full]) (2.3.1)\n",
            "Requirement already satisfied: imageio>=2.4.1 in /usr/local/lib/python3.10/dist-packages (from scikit-image>=0.12->lime>=0.1.1.33->interpret-core[dash,debug,decisiontree,ebm,lime,linear,notebook,plotly,required,sensitivity,shap,skoperules,treeinterpreter]==0.4.2->interpret>=0.2.7->pycaret[full]) (2.25.1)\n",
            "Requirement already satisfied: tifffile>=2019.7.26 in /usr/local/lib/python3.10/dist-packages (from scikit-image>=0.12->lime>=0.1.1.33->interpret-core[dash,debug,decisiontree,ebm,lime,linear,notebook,plotly,required,sensitivity,shap,skoperules,treeinterpreter]==0.4.2->interpret>=0.2.7->pycaret[full]) (2023.7.10)\n",
            "Requirement already satisfied: argon2-cffi-bindings in /usr/local/lib/python3.10/dist-packages (from argon2-cffi->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret[full]) (21.2.0)\n"
          ]
        }
      ],
      "source": [
        "!pip install pycaret[full]"
      ],
      "id": "NKi-6yBM1O9p"
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "74195739"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import random\n",
        "import os\n",
        "from pycaret.regression import *"
      ],
      "id": "74195739"
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ka3cmkKVwG5N",
        "outputId": "15119e6f-90f3-477f-8f95-3676e849f5a7"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "id": "ka3cmkKVwG5N"
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "id": "ccecbf01"
      },
      "outputs": [],
      "source": [
        "SEED = 42\n",
        "def seed_everything(seed):\n",
        "    random.seed(seed)\n",
        "    os.environ['PYTHONHASHSEED'] = str(seed)\n",
        "    np.random.seed(seed)\n",
        "\n",
        "seed_everything(SEED) # Seed 고정"
      ],
      "id": "ccecbf01"
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "id": "9fd0d8a7"
      },
      "outputs": [],
      "source": [
        "train = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/데이콘 풍속 예측/train.csv')\n",
        "test = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/데이콘 풍속 예측/test.csv')"
      ],
      "id": "9fd0d8a7"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "5837adfc",
        "outputId": "4f241c84-995f-45ba-cdd7-9b4bf61dd04b"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>월</th>\n",
              "      <th>일</th>\n",
              "      <th>측정 시간대</th>\n",
              "      <th>섭씨 온도(°⁣C)</th>\n",
              "      <th>절대 온도(K)</th>\n",
              "      <th>이슬점 온도(°C)</th>\n",
              "      <th>상대 습도 (%)</th>\n",
              "      <th>대기압(mbar)</th>\n",
              "      <th>포화 증기압(mbar)</th>\n",
              "      <th>실제 증기압(mbar)</th>\n",
              "      <th>증기압 부족량(mbar)</th>\n",
              "      <th>수증기 함량 (g/kg)</th>\n",
              "      <th>공기 밀도 (g/m**3)</th>\n",
              "      <th>풍향 (deg)</th>\n",
              "      <th>풍속 (m/s)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>TRAIN_00000</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>저녁</td>\n",
              "      <td>13.97</td>\n",
              "      <td>287.78</td>\n",
              "      <td>9.84</td>\n",
              "      <td>76.1</td>\n",
              "      <td>992.08</td>\n",
              "      <td>15.98</td>\n",
              "      <td>12.16</td>\n",
              "      <td>3.82</td>\n",
              "      <td>7.66</td>\n",
              "      <td>1198.06</td>\n",
              "      <td>155.60</td>\n",
              "      <td>1.61</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>TRAIN_00001</td>\n",
              "      <td>8</td>\n",
              "      <td>21</td>\n",
              "      <td>오전</td>\n",
              "      <td>16.94</td>\n",
              "      <td>290.85</td>\n",
              "      <td>12.14</td>\n",
              "      <td>73.3</td>\n",
              "      <td>991.07</td>\n",
              "      <td>19.33</td>\n",
              "      <td>14.17</td>\n",
              "      <td>5.16</td>\n",
              "      <td>8.94</td>\n",
              "      <td>1183.67</td>\n",
              "      <td>177.00</td>\n",
              "      <td>1.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>TRAIN_00002</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>저녁</td>\n",
              "      <td>9.76</td>\n",
              "      <td>283.84</td>\n",
              "      <td>5.40</td>\n",
              "      <td>74.2</td>\n",
              "      <td>988.71</td>\n",
              "      <td>12.10</td>\n",
              "      <td>8.98</td>\n",
              "      <td>3.12</td>\n",
              "      <td>5.67</td>\n",
              "      <td>1213.22</td>\n",
              "      <td>146.20</td>\n",
              "      <td>0.73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>TRAIN_00003</td>\n",
              "      <td>12</td>\n",
              "      <td>28</td>\n",
              "      <td>오전</td>\n",
              "      <td>5.27</td>\n",
              "      <td>277.30</td>\n",
              "      <td>2.71</td>\n",
              "      <td>83.5</td>\n",
              "      <td>1014.25</td>\n",
              "      <td>8.89</td>\n",
              "      <td>7.43</td>\n",
              "      <td>1.47</td>\n",
              "      <td>4.57</td>\n",
              "      <td>1265.48</td>\n",
              "      <td>264.50</td>\n",
              "      <td>2.71</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>TRAIN_00004</td>\n",
              "      <td>9</td>\n",
              "      <td>26</td>\n",
              "      <td>오후</td>\n",
              "      <td>17.35</td>\n",
              "      <td>290.86</td>\n",
              "      <td>12.68</td>\n",
              "      <td>74.0</td>\n",
              "      <td>995.77</td>\n",
              "      <td>19.84</td>\n",
              "      <td>14.68</td>\n",
              "      <td>5.16</td>\n",
              "      <td>9.22</td>\n",
              "      <td>1187.40</td>\n",
              "      <td>19.34</td>\n",
              "      <td>1.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "            ID   월   일 측정 시간대  섭씨 온도(°⁣C)  절대 온도(K)  이슬점 온도(°C)  상대 습도 (%)  \\\n",
              "0  TRAIN_00000   7   2     저녁       13.97    287.78        9.84       76.1   \n",
              "1  TRAIN_00001   8  21     오전       16.94    290.85       12.14       73.3   \n",
              "2  TRAIN_00002  11   1     저녁        9.76    283.84        5.40       74.2   \n",
              "3  TRAIN_00003  12  28     오전        5.27    277.30        2.71       83.5   \n",
              "4  TRAIN_00004   9  26     오후       17.35    290.86       12.68       74.0   \n",
              "\n",
              "   대기압(mbar)  포화 증기압(mbar)  실제 증기압(mbar)  증기압 부족량(mbar)  수증기 함량 (g/kg)  \\\n",
              "0     992.08         15.98         12.16           3.82           7.66   \n",
              "1     991.07         19.33         14.17           5.16           8.94   \n",
              "2     988.71         12.10          8.98           3.12           5.67   \n",
              "3    1014.25          8.89          7.43           1.47           4.57   \n",
              "4     995.77         19.84         14.68           5.16           9.22   \n",
              "\n",
              "   공기 밀도 (g/m**3)  풍향 (deg)  풍속 (m/s)  \n",
              "0         1198.06    155.60      1.61  \n",
              "1         1183.67    177.00      1.68  \n",
              "2         1213.22    146.20      0.73  \n",
              "3         1265.48    264.50      2.71  \n",
              "4         1187.40     19.34      1.00  "
            ]
          },
          "execution_count": 55,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "train.head()"
      ],
      "id": "5837adfc"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "a579248f",
        "outputId": "63d3d5ae-3448-45bc-d52e-967e08217340"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>월</th>\n",
              "      <th>일</th>\n",
              "      <th>측정 시간대</th>\n",
              "      <th>섭씨 온도(°⁣C)</th>\n",
              "      <th>절대 온도(K)</th>\n",
              "      <th>이슬점 온도(°C)</th>\n",
              "      <th>상대 습도 (%)</th>\n",
              "      <th>대기압(mbar)</th>\n",
              "      <th>포화 증기압(mbar)</th>\n",
              "      <th>실제 증기압(mbar)</th>\n",
              "      <th>증기압 부족량(mbar)</th>\n",
              "      <th>수증기 함량 (g/kg)</th>\n",
              "      <th>공기 밀도 (g/m**3)</th>\n",
              "      <th>풍향 (deg)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>TEST_00000</td>\n",
              "      <td>3</td>\n",
              "      <td>24</td>\n",
              "      <td>새벽</td>\n",
              "      <td>4.28</td>\n",
              "      <td>278.68</td>\n",
              "      <td>-0.21</td>\n",
              "      <td>72.5</td>\n",
              "      <td>984.48</td>\n",
              "      <td>8.30</td>\n",
              "      <td>6.02</td>\n",
              "      <td>2.28</td>\n",
              "      <td>3.81</td>\n",
              "      <td>1233.29</td>\n",
              "      <td>251.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>TEST_00001</td>\n",
              "      <td>9</td>\n",
              "      <td>24</td>\n",
              "      <td>저녁</td>\n",
              "      <td>13.40</td>\n",
              "      <td>286.81</td>\n",
              "      <td>10.36</td>\n",
              "      <td>81.8</td>\n",
              "      <td>996.98</td>\n",
              "      <td>15.40</td>\n",
              "      <td>12.59</td>\n",
              "      <td>2.80</td>\n",
              "      <td>7.89</td>\n",
              "      <td>1206.20</td>\n",
              "      <td>225.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>TEST_00002</td>\n",
              "      <td>5</td>\n",
              "      <td>28</td>\n",
              "      <td>저녁</td>\n",
              "      <td>19.89</td>\n",
              "      <td>294.33</td>\n",
              "      <td>14.95</td>\n",
              "      <td>73.2</td>\n",
              "      <td>984.83</td>\n",
              "      <td>23.26</td>\n",
              "      <td>17.03</td>\n",
              "      <td>6.23</td>\n",
              "      <td>10.82</td>\n",
              "      <td>1163.06</td>\n",
              "      <td>10.39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>TEST_00003</td>\n",
              "      <td>1</td>\n",
              "      <td>17</td>\n",
              "      <td>저녁</td>\n",
              "      <td>-2.88</td>\n",
              "      <td>270.44</td>\n",
              "      <td>-4.47</td>\n",
              "      <td>88.7</td>\n",
              "      <td>998.02</td>\n",
              "      <td>4.94</td>\n",
              "      <td>4.38</td>\n",
              "      <td>0.56</td>\n",
              "      <td>2.73</td>\n",
              "      <td>1284.19</td>\n",
              "      <td>260.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>TEST_00004</td>\n",
              "      <td>10</td>\n",
              "      <td>22</td>\n",
              "      <td>오후</td>\n",
              "      <td>6.97</td>\n",
              "      <td>281.18</td>\n",
              "      <td>4.36</td>\n",
              "      <td>83.4</td>\n",
              "      <td>987.00</td>\n",
              "      <td>10.01</td>\n",
              "      <td>8.35</td>\n",
              "      <td>1.66</td>\n",
              "      <td>5.28</td>\n",
              "      <td>1223.47</td>\n",
              "      <td>262.50</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           ID   월   일 측정 시간대  섭씨 온도(°⁣C)  절대 온도(K)  이슬점 온도(°C)  상대 습도 (%)  \\\n",
              "0  TEST_00000   3  24     새벽        4.28    278.68       -0.21       72.5   \n",
              "1  TEST_00001   9  24     저녁       13.40    286.81       10.36       81.8   \n",
              "2  TEST_00002   5  28     저녁       19.89    294.33       14.95       73.2   \n",
              "3  TEST_00003   1  17     저녁       -2.88    270.44       -4.47       88.7   \n",
              "4  TEST_00004  10  22     오후        6.97    281.18        4.36       83.4   \n",
              "\n",
              "   대기압(mbar)  포화 증기압(mbar)  실제 증기압(mbar)  증기압 부족량(mbar)  수증기 함량 (g/kg)  \\\n",
              "0     984.48          8.30          6.02           2.28           3.81   \n",
              "1     996.98         15.40         12.59           2.80           7.89   \n",
              "2     984.83         23.26         17.03           6.23          10.82   \n",
              "3     998.02          4.94          4.38           0.56           2.73   \n",
              "4     987.00         10.01          8.35           1.66           5.28   \n",
              "\n",
              "   공기 밀도 (g/m**3)  풍향 (deg)  \n",
              "0         1233.29    251.80  \n",
              "1         1206.20    225.60  \n",
              "2         1163.06     10.39  \n",
              "3         1284.19    260.20  \n",
              "4         1223.47    262.50  "
            ]
          },
          "execution_count": 56,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "test.head()"
      ],
      "id": "a579248f"
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "id": "a5bb9873"
      },
      "outputs": [],
      "source": [
        "# train_x는 독립변수이므로 종속변수(풍속 (m/s))를 제거합니다.\n",
        "# 또한 target 이외의 분석에 활용하지 않는 데이터(id)를 제거합니다.\n",
        "train_x = train.drop(columns=['ID', '풍속 (m/s)', '섭씨 온도(°⁣C)','실제 증기압(mbar)'], axis = 1)\n",
        "\n",
        "# train_y는 종속변수로 값을 설정합니다.\n",
        "train_y = train['풍속 (m/s)']"
      ],
      "id": "a5bb9873"
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "id": "6af37aba"
      },
      "outputs": [],
      "source": [
        "# train에서와 마찬가지로 분석에 활용하지 않는 데이터(id)를 제거합니다.\n",
        "test_x = test.drop(columns=['ID', '섭씨 온도(°⁣C)','실제 증기압(mbar)'])"
      ],
      "id": "6af37aba"
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "id": "a33e7a64"
      },
      "outputs": [],
      "source": [
        "from sklearn.preprocessing import LabelEncoder\n",
        "\n",
        "le = LabelEncoder()\n",
        "le = le.fit(train_x['측정 시간대'])\n",
        "train_x['측정 시간대'] = le.transform(train_x['측정 시간대'])\n",
        "test_x['측정 시간대'] = le.transform(test_x['측정 시간대'])"
      ],
      "id": "a33e7a64"
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "KFLi3i1FWzIs",
        "outputId": "077075cf-cb2a-4ab4-c0c5-2a8149280551"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    월   일  측정 시간대  절대 온도(K)  이슬점 온도(°C)  상대 습도 (%)  대기압(mbar)  포화 증기압(mbar)  \\\n",
              "0   7   2       3    287.78        9.84       76.1     992.08         15.98   \n",
              "1   8  21       1    290.85       12.14       73.3     991.07         19.33   \n",
              "2  11   1       3    283.84        5.40       74.2     988.71         12.10   \n",
              "3  12  28       1    277.30        2.71       83.5    1014.25          8.89   \n",
              "4   9  26       2    290.86       12.68       74.0     995.77         19.84   \n",
              "\n",
              "   증기압 부족량(mbar)  수증기 함량 (g/kg)  공기 밀도 (g/m**3)  풍향 (deg)  \n",
              "0           3.82           7.66         1198.06    155.60  \n",
              "1           5.16           8.94         1183.67    177.00  \n",
              "2           3.12           5.67         1213.22    146.20  \n",
              "3           1.47           4.57         1265.48    264.50  \n",
              "4           5.16           9.22         1187.40     19.34  "
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-8e8354c5-e29b-48c3-acef-74318fd0f6cf\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>월</th>\n",
              "      <th>일</th>\n",
              "      <th>측정 시간대</th>\n",
              "      <th>절대 온도(K)</th>\n",
              "      <th>이슬점 온도(°C)</th>\n",
              "      <th>상대 습도 (%)</th>\n",
              "      <th>대기압(mbar)</th>\n",
              "      <th>포화 증기압(mbar)</th>\n",
              "      <th>증기압 부족량(mbar)</th>\n",
              "      <th>수증기 함량 (g/kg)</th>\n",
              "      <th>공기 밀도 (g/m**3)</th>\n",
              "      <th>풍향 (deg)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>287.78</td>\n",
              "      <td>9.84</td>\n",
              "      <td>76.1</td>\n",
              "      <td>992.08</td>\n",
              "      <td>15.98</td>\n",
              "      <td>3.82</td>\n",
              "      <td>7.66</td>\n",
              "      <td>1198.06</td>\n",
              "      <td>155.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>21</td>\n",
              "      <td>1</td>\n",
              "      <td>290.85</td>\n",
              "      <td>12.14</td>\n",
              "      <td>73.3</td>\n",
              "      <td>991.07</td>\n",
              "      <td>19.33</td>\n",
              "      <td>5.16</td>\n",
              "      <td>8.94</td>\n",
              "      <td>1183.67</td>\n",
              "      <td>177.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>283.84</td>\n",
              "      <td>5.40</td>\n",
              "      <td>74.2</td>\n",
              "      <td>988.71</td>\n",
              "      <td>12.10</td>\n",
              "      <td>3.12</td>\n",
              "      <td>5.67</td>\n",
              "      <td>1213.22</td>\n",
              "      <td>146.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>12</td>\n",
              "      <td>28</td>\n",
              "      <td>1</td>\n",
              "      <td>277.30</td>\n",
              "      <td>2.71</td>\n",
              "      <td>83.5</td>\n",
              "      <td>1014.25</td>\n",
              "      <td>8.89</td>\n",
              "      <td>1.47</td>\n",
              "      <td>4.57</td>\n",
              "      <td>1265.48</td>\n",
              "      <td>264.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>9</td>\n",
              "      <td>26</td>\n",
              "      <td>2</td>\n",
              "      <td>290.86</td>\n",
              "      <td>12.68</td>\n",
              "      <td>74.0</td>\n",
              "      <td>995.77</td>\n",
              "      <td>19.84</td>\n",
              "      <td>5.16</td>\n",
              "      <td>9.22</td>\n",
              "      <td>1187.40</td>\n",
              "      <td>19.34</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8e8354c5-e29b-48c3-acef-74318fd0f6cf')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-28db7199-209c-4041-8d48-4c65554b33ee\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-28db7199-209c-4041-8d48-4c65554b33ee')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-28db7199-209c-4041-8d48-4c65554b33ee button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8e8354c5-e29b-48c3-acef-74318fd0f6cf button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8e8354c5-e29b-48c3-acef-74318fd0f6cf');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ],
      "source": [
        "train_x.head()"
      ],
      "id": "KFLi3i1FWzIs"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "36OjsbyCLcPT"
      },
      "outputs": [],
      "source": [
        "# 1번째 정규화 방법, QuantileTransformer\n",
        "from sklearn.preprocessing import QuantileTransformer\n",
        "columns = train_x.columns\n",
        "scaler = QuantileTransformer()\n",
        "scaler.fit(train_x)\n",
        "train_x = scaler.transform(train_x)\n",
        "test_X = scaler.transform(test_x)\n",
        "\n",
        "# test_X가 최종 넣어야 할 test 데이터\n",
        "train_x = pd.DataFrame(train_x)\n",
        "train_x.columns= columns\n",
        "test_X = pd.DataFrame(test_X)\n",
        "test_X.columns= columns"
      ],
      "id": "36OjsbyCLcPT"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Cw3KOb3hLVfB"
      },
      "outputs": [],
      "source": [
        "#PowerTransformer , 2번째 방법\n",
        "from sklearn.preprocessing import PowerTransformer\n",
        "columns = train_x.columns\n",
        "scaler = PowerTransformer()\n",
        "scaler.fit(train_x)\n",
        "train_x = scaler.transform(train_x)\n",
        "test_x = scaler.transform(test_x)\n",
        "\n",
        "train_x = pd.DataFrame(train_x)\n",
        "train_x.columns= columns\n",
        "test_x = pd.DataFrame(test_x)\n",
        "test_x.columns= columns\n"
      ],
      "id": "Cw3KOb3hLVfB"
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "id": "o6b4gooDC4KF"
      },
      "outputs": [],
      "source": [
        "# StandardScaler, 3번째 방법\n",
        "\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "scaler = StandardScaler()\n",
        "\n",
        "columns = train_x.columns\n",
        "\n",
        "train_x = scaler.fit_transform(train_x)\n",
        "test_x = scaler.transform(test_x)\n",
        "\n",
        "train_x = pd.DataFrame(train_x)\n",
        "train_x.columns= columns\n",
        "test_x = pd.DataFrame(test_x)\n",
        "test_x.columns= columns\n"
      ],
      "id": "o6b4gooDC4KF"
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 250
        },
        "id": "1XH0Q_QpXIeS",
        "outputId": "87ffa2b0-591f-495f-ff6c-ca070b2d9c0a"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          월         일    측정 시간대  절대 온도(K)  이슬점 온도(°C)  상대 습도 (%)  대기압(mbar)  \\\n",
              "0  0.141250 -1.550383  1.340711  0.455931    0.693376   0.016942   0.231977   \n",
              "1  0.430382  0.607887 -0.449301  0.823415    1.056902  -0.157090   0.117521   \n",
              "2  1.297777 -1.663976  1.340711 -0.015692   -0.008387  -0.101151  -0.149921   \n",
              "3  1.586909  1.403039 -0.449301 -0.798540   -0.433554   0.476885   2.744341   \n",
              "4  0.719514  1.175853  0.445705  0.824612    1.142251  -0.113582   0.650138   \n",
              "\n",
              "   포화 증기압(mbar)  증기압 부족량(mbar)  수증기 함량 (g/kg)  공기 밀도 (g/m**3)  풍향 (deg)  \n",
              "0      0.240582      -0.082878       0.558184       -0.417949 -0.248661  \n",
              "1      0.655413       0.175258       1.040291       -0.781995  0.004949  \n",
              "2     -0.239880      -0.217725      -0.191340       -0.034423 -0.360060  \n",
              "3     -0.637375      -0.535580      -0.605650        1.287678  1.041906  \n",
              "4      0.718566       0.175258       1.145751       -0.687631 -1.863469  "
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-e585cc95-9a3e-492e-b6c3-70cab8e77d2e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>월</th>\n",
              "      <th>일</th>\n",
              "      <th>측정 시간대</th>\n",
              "      <th>절대 온도(K)</th>\n",
              "      <th>이슬점 온도(°C)</th>\n",
              "      <th>상대 습도 (%)</th>\n",
              "      <th>대기압(mbar)</th>\n",
              "      <th>포화 증기압(mbar)</th>\n",
              "      <th>증기압 부족량(mbar)</th>\n",
              "      <th>수증기 함량 (g/kg)</th>\n",
              "      <th>공기 밀도 (g/m**3)</th>\n",
              "      <th>풍향 (deg)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.141250</td>\n",
              "      <td>-1.550383</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>0.455931</td>\n",
              "      <td>0.693376</td>\n",
              "      <td>0.016942</td>\n",
              "      <td>0.231977</td>\n",
              "      <td>0.240582</td>\n",
              "      <td>-0.082878</td>\n",
              "      <td>0.558184</td>\n",
              "      <td>-0.417949</td>\n",
              "      <td>-0.248661</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.430382</td>\n",
              "      <td>0.607887</td>\n",
              "      <td>-0.449301</td>\n",
              "      <td>0.823415</td>\n",
              "      <td>1.056902</td>\n",
              "      <td>-0.157090</td>\n",
              "      <td>0.117521</td>\n",
              "      <td>0.655413</td>\n",
              "      <td>0.175258</td>\n",
              "      <td>1.040291</td>\n",
              "      <td>-0.781995</td>\n",
              "      <td>0.004949</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.297777</td>\n",
              "      <td>-1.663976</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>-0.015692</td>\n",
              "      <td>-0.008387</td>\n",
              "      <td>-0.101151</td>\n",
              "      <td>-0.149921</td>\n",
              "      <td>-0.239880</td>\n",
              "      <td>-0.217725</td>\n",
              "      <td>-0.191340</td>\n",
              "      <td>-0.034423</td>\n",
              "      <td>-0.360060</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.586909</td>\n",
              "      <td>1.403039</td>\n",
              "      <td>-0.449301</td>\n",
              "      <td>-0.798540</td>\n",
              "      <td>-0.433554</td>\n",
              "      <td>0.476885</td>\n",
              "      <td>2.744341</td>\n",
              "      <td>-0.637375</td>\n",
              "      <td>-0.535580</td>\n",
              "      <td>-0.605650</td>\n",
              "      <td>1.287678</td>\n",
              "      <td>1.041906</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.719514</td>\n",
              "      <td>1.175853</td>\n",
              "      <td>0.445705</td>\n",
              "      <td>0.824612</td>\n",
              "      <td>1.142251</td>\n",
              "      <td>-0.113582</td>\n",
              "      <td>0.650138</td>\n",
              "      <td>0.718566</td>\n",
              "      <td>0.175258</td>\n",
              "      <td>1.145751</td>\n",
              "      <td>-0.687631</td>\n",
              "      <td>-1.863469</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e585cc95-9a3e-492e-b6c3-70cab8e77d2e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-eea018f7-e0f2-4eb5-98b2-c717099bfff2\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eea018f7-e0f2-4eb5-98b2-c717099bfff2')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-eea018f7-e0f2-4eb5-98b2-c717099bfff2 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e585cc95-9a3e-492e-b6c3-70cab8e77d2e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e585cc95-9a3e-492e-b6c3-70cab8e77d2e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ],
      "source": [
        "train_x.head()"
      ],
      "id": "1XH0Q_QpXIeS"
    },
    {
      "cell_type": "code",
      "source": [
        "train_x.shape, train_y.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AnXIh401NsKZ",
        "outputId": "9516e909-7465-40e5-d225-7590cfdea2c6"
      },
      "id": "AnXIh401NsKZ",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((36581, 12), (36581,))"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 이상치 탐지 IQR\n",
        "\n",
        "import numpy as np\n",
        "\n",
        "# Convert the training set back to a DataFrame\n",
        "train_x = pd.DataFrame(train_x, columns=train_x.columns)\n",
        "\n",
        "# Compute the IQR\n",
        "Q1 = train_x.quantile(0.25)\n",
        "Q3 = train_x.quantile(0.75)\n",
        "IQR = Q3 - Q1\n",
        "\n",
        "# Define outliers\n",
        "outliers = (train_x < (Q1 - 1.5 * IQR)) | (train_x > (Q3 + 1.5 * IQR))\n",
        "\n",
        "# Remove outliers from the training set\n",
        "train_x = train_x[~outliers.any(axis=1)]\n",
        "train_y = train_y[train_x.index]\n",
        "\n",
        "# Print the shape of X_train and y_train\n",
        "train_x.shape, train_y.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cBbjHoLpM3CX",
        "outputId": "5bc62b9d-a9cc-4a9e-b44b-d0dd2b3ec54c"
      },
      "id": "cBbjHoLpM3CX",
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((32561, 12), (32561,))"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "test_x.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 250
        },
        "id": "Z8kRvbg15a4q",
        "outputId": "fd0d671a-81dd-4304-ed4d-52e019b26ea8"
      },
      "id": "Z8kRvbg15a4q",
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          월         일    측정 시간대  절대 온도(K)  이슬점 온도(°C)  상대 습도 (%)  대기압(mbar)  \\\n",
              "0 -1.015277  0.948666 -1.344308 -0.633352   -0.895074  -0.206814  -0.629276   \n",
              "1  0.719514  0.948666  1.340711  0.339821    0.775564   0.371222   0.787258   \n",
              "2 -0.437013  1.403039  1.340711  1.239975    1.501036  -0.163306  -0.589613   \n",
              "3 -1.593541  0.153514  1.340711 -1.619691   -1.568387   0.800087   0.905114   \n",
              "4  1.008646  0.721480  0.445705 -0.334098   -0.172764   0.470669  -0.343702   \n",
              "\n",
              "   포화 증기압(mbar)  증기압 부족량(mbar)  수증기 함량 (g/kg)  공기 밀도 (g/m**3)  풍향 (deg)  \n",
              "0     -0.710435      -0.379542      -0.891900        0.473318  0.891399  \n",
              "1      0.168760      -0.279370       0.644813       -0.212019  0.580904  \n",
              "2      1.142066       0.381382       1.748384       -1.303398 -1.969535  \n",
              "3     -1.126505      -0.710881      -1.298677        1.761014  0.990947  \n",
              "4     -0.498685      -0.498978      -0.338231        0.224887  1.018204  "
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-8caf35d9-324e-4414-b7dc-59cb5599bcc5\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>월</th>\n",
              "      <th>일</th>\n",
              "      <th>측정 시간대</th>\n",
              "      <th>절대 온도(K)</th>\n",
              "      <th>이슬점 온도(°C)</th>\n",
              "      <th>상대 습도 (%)</th>\n",
              "      <th>대기압(mbar)</th>\n",
              "      <th>포화 증기압(mbar)</th>\n",
              "      <th>증기압 부족량(mbar)</th>\n",
              "      <th>수증기 함량 (g/kg)</th>\n",
              "      <th>공기 밀도 (g/m**3)</th>\n",
              "      <th>풍향 (deg)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-1.015277</td>\n",
              "      <td>0.948666</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>-0.633352</td>\n",
              "      <td>-0.895074</td>\n",
              "      <td>-0.206814</td>\n",
              "      <td>-0.629276</td>\n",
              "      <td>-0.710435</td>\n",
              "      <td>-0.379542</td>\n",
              "      <td>-0.891900</td>\n",
              "      <td>0.473318</td>\n",
              "      <td>0.891399</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.719514</td>\n",
              "      <td>0.948666</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>0.339821</td>\n",
              "      <td>0.775564</td>\n",
              "      <td>0.371222</td>\n",
              "      <td>0.787258</td>\n",
              "      <td>0.168760</td>\n",
              "      <td>-0.279370</td>\n",
              "      <td>0.644813</td>\n",
              "      <td>-0.212019</td>\n",
              "      <td>0.580904</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-0.437013</td>\n",
              "      <td>1.403039</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>1.239975</td>\n",
              "      <td>1.501036</td>\n",
              "      <td>-0.163306</td>\n",
              "      <td>-0.589613</td>\n",
              "      <td>1.142066</td>\n",
              "      <td>0.381382</td>\n",
              "      <td>1.748384</td>\n",
              "      <td>-1.303398</td>\n",
              "      <td>-1.969535</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-1.593541</td>\n",
              "      <td>0.153514</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>-1.619691</td>\n",
              "      <td>-1.568387</td>\n",
              "      <td>0.800087</td>\n",
              "      <td>0.905114</td>\n",
              "      <td>-1.126505</td>\n",
              "      <td>-0.710881</td>\n",
              "      <td>-1.298677</td>\n",
              "      <td>1.761014</td>\n",
              "      <td>0.990947</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1.008646</td>\n",
              "      <td>0.721480</td>\n",
              "      <td>0.445705</td>\n",
              "      <td>-0.334098</td>\n",
              "      <td>-0.172764</td>\n",
              "      <td>0.470669</td>\n",
              "      <td>-0.343702</td>\n",
              "      <td>-0.498685</td>\n",
              "      <td>-0.498978</td>\n",
              "      <td>-0.338231</td>\n",
              "      <td>0.224887</td>\n",
              "      <td>1.018204</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8caf35d9-324e-4414-b7dc-59cb5599bcc5')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-a76a190c-4ba4-4f07-a578-de3a37b34bd7\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a76a190c-4ba4-4f07-a578-de3a37b34bd7')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-a76a190c-4ba4-4f07-a578-de3a37b34bd7 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8caf35d9-324e-4414-b7dc-59cb5599bcc5 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8caf35d9-324e-4414-b7dc-59cb5599bcc5');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "FuYFx-yFTshC"
      },
      "outputs": [],
      "source": [
        "# 이상치 탐지 Isolation Forest\n",
        "\n",
        "from sklearn.ensemble import IsolationForest\n",
        "import collections\n",
        "\n",
        "# n_estimators : 노드 수 (50 - 100사이의 숫자면 적당하다.)\n",
        "# max_samples : 샘플링 수\n",
        "# contamination : 이상치 비율\n",
        "# max_features : 사용하고자 하는 독립변수 수 (1이면 전부 사용)\n",
        "# random_state : seed를 일정하게 유지시켜줌(if None, the random number generator is the RandomState instance used by np.random)\n",
        "# n_jobs : CPU 병렬처리 유뮤(1이면 안하는 것으로 디버깅에 유리. -1을 넣으면 multilple CPU를 사용하게 되어 메모리 사용량이 급격히 늘어날 수 있다.)\n",
        "\n",
        "clf = IsolationForest(n_estimators=100,\n",
        "                      max_samples=\"auto\",\n",
        "                      contamination=0.1,\n",
        "                      max_features=1,\n",
        "                      bootstrap=False,\n",
        "                      n_jobs=1,\n",
        "                      random_state=None,\n",
        "                      verbose=0)\n",
        "\n",
        "# fit 함수를 이용하여, 데이터셋을 학습시킨다.\n",
        "clf.fit(train_x)\n",
        "\n",
        "# predict 함수를 이용하여, outlier를 판별해 준다. 0과 1로 이루어진 Series형태의 데이터가 나온다.\n",
        "y_pred_outliers = clf.predict(train_x)\n",
        "\n",
        "# 이상치의 개수를 Count하는 과정\n",
        "collections.Counter(y_pred_outliers)\n",
        "\n",
        "# 원래의 DataFrame에 붙히기. out행의 값이 -1인 것을 제거하면 이상치가 제거된 DataFrame을 얻을 수 있다.\n",
        "train_x['out']=y_pred_outliers\n",
        "outliers=train_x.loc[train_x['out']== -1]\n",
        "outlier_index=list(outliers.index)\n"
      ],
      "id": "FuYFx-yFTshC"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "vnOWOj7bVGf9"
      },
      "outputs": [],
      "source": [
        "train_x = train_x.loc[train_x['out'] == 1]\n"
      ],
      "id": "vnOWOj7bVGf9"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "JvXrTz7iVX7i"
      },
      "outputs": [],
      "source": [
        "train_x = train_x.drop('out', axis=1)\n"
      ],
      "id": "JvXrTz7iVX7i"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "yu185i0FXqPH"
      },
      "outputs": [],
      "source": [
        "train_y = train_y.drop(outlier_index)\n"
      ],
      "id": "yu185i0FXqPH"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 285
        },
        "id": "-XRcbet6Vqx0",
        "outputId": "83d83dde-151c-4a11-8294-e8b1809c75a3"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-1aa941cc-e999-4d0d-97ca-0fc08991e85f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>월</th>\n",
              "      <th>일</th>\n",
              "      <th>측정 시간대</th>\n",
              "      <th>섭씨 온도(°⁣C)</th>\n",
              "      <th>절대 온도(K)</th>\n",
              "      <th>이슬점 온도(°C)</th>\n",
              "      <th>상대 습도 (%)</th>\n",
              "      <th>대기압(mbar)</th>\n",
              "      <th>포화 증기압(mbar)</th>\n",
              "      <th>실제 증기압(mbar)</th>\n",
              "      <th>증기압 부족량(mbar)</th>\n",
              "      <th>수증기 함량 (g/kg)</th>\n",
              "      <th>공기 밀도 (g/m**3)</th>\n",
              "      <th>풍향 (deg)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.141250</td>\n",
              "      <td>-1.550383</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>0.482855</td>\n",
              "      <td>0.455931</td>\n",
              "      <td>0.693376</td>\n",
              "      <td>0.016942</td>\n",
              "      <td>0.231977</td>\n",
              "      <td>0.240582</td>\n",
              "      <td>0.566963</td>\n",
              "      <td>-0.082878</td>\n",
              "      <td>0.558184</td>\n",
              "      <td>-0.417949</td>\n",
              "      <td>-0.248661</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.430382</td>\n",
              "      <td>0.607887</td>\n",
              "      <td>-0.449301</td>\n",
              "      <td>0.843420</td>\n",
              "      <td>0.823415</td>\n",
              "      <td>1.056902</td>\n",
              "      <td>-0.157090</td>\n",
              "      <td>0.117521</td>\n",
              "      <td>0.655413</td>\n",
              "      <td>1.047176</td>\n",
              "      <td>0.175258</td>\n",
              "      <td>1.040291</td>\n",
              "      <td>-0.781995</td>\n",
              "      <td>0.004949</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.297777</td>\n",
              "      <td>-1.663976</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>-0.028250</td>\n",
              "      <td>-0.015692</td>\n",
              "      <td>-0.008387</td>\n",
              "      <td>-0.101151</td>\n",
              "      <td>-0.149921</td>\n",
              "      <td>-0.239880</td>\n",
              "      <td>-0.192777</td>\n",
              "      <td>-0.217725</td>\n",
              "      <td>-0.191340</td>\n",
              "      <td>-0.034423</td>\n",
              "      <td>-0.360060</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.586909</td>\n",
              "      <td>1.403039</td>\n",
              "      <td>-0.449301</td>\n",
              "      <td>-0.573347</td>\n",
              "      <td>-0.798540</td>\n",
              "      <td>-0.433554</td>\n",
              "      <td>0.476885</td>\n",
              "      <td>2.744341</td>\n",
              "      <td>-0.637375</td>\n",
              "      <td>-0.563090</td>\n",
              "      <td>-0.535580</td>\n",
              "      <td>-0.605650</td>\n",
              "      <td>1.287678</td>\n",
              "      <td>1.041906</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.719514</td>\n",
              "      <td>1.175853</td>\n",
              "      <td>0.445705</td>\n",
              "      <td>0.893195</td>\n",
              "      <td>0.824612</td>\n",
              "      <td>1.142251</td>\n",
              "      <td>-0.113582</td>\n",
              "      <td>0.650138</td>\n",
              "      <td>0.718566</td>\n",
              "      <td>1.169021</td>\n",
              "      <td>0.175258</td>\n",
              "      <td>1.145751</td>\n",
              "      <td>-0.687631</td>\n",
              "      <td>-1.863469</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1aa941cc-e999-4d0d-97ca-0fc08991e85f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-1461ff8c-fb22-457e-a13d-8e537c5d73b0\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1461ff8c-fb22-457e-a13d-8e537c5d73b0')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-1461ff8c-fb22-457e-a13d-8e537c5d73b0 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1aa941cc-e999-4d0d-97ca-0fc08991e85f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1aa941cc-e999-4d0d-97ca-0fc08991e85f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "          월         일    측정 시간대  섭씨 온도(°⁣C)  절대 온도(K)  이슬점 온도(°C)  상대 습도 (%)  \\\n",
              "0  0.141250 -1.550383  1.340711    0.482855  0.455931    0.693376   0.016942   \n",
              "1  0.430382  0.607887 -0.449301    0.843420  0.823415    1.056902  -0.157090   \n",
              "2  1.297777 -1.663976  1.340711   -0.028250 -0.015692   -0.008387  -0.101151   \n",
              "3  1.586909  1.403039 -0.449301   -0.573347 -0.798540   -0.433554   0.476885   \n",
              "4  0.719514  1.175853  0.445705    0.893195  0.824612    1.142251  -0.113582   \n",
              "\n",
              "   대기압(mbar)  포화 증기압(mbar)  실제 증기압(mbar)  증기압 부족량(mbar)  수증기 함량 (g/kg)  \\\n",
              "0   0.231977      0.240582      0.566963      -0.082878       0.558184   \n",
              "1   0.117521      0.655413      1.047176       0.175258       1.040291   \n",
              "2  -0.149921     -0.239880     -0.192777      -0.217725      -0.191340   \n",
              "3   2.744341     -0.637375     -0.563090      -0.535580      -0.605650   \n",
              "4   0.650138      0.718566      1.169021       0.175258       1.145751   \n",
              "\n",
              "   공기 밀도 (g/m**3)  풍향 (deg)  \n",
              "0       -0.417949 -0.248661  \n",
              "1       -0.781995  0.004949  \n",
              "2       -0.034423 -0.360060  \n",
              "3        1.287678  1.041906  \n",
              "4       -0.687631 -1.863469  "
            ]
          },
          "execution_count": 15,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "train_x.head()"
      ],
      "id": "-XRcbet6Vqx0"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 954
        },
        "id": "WZYHW4ipUR2L",
        "outputId": "c5402c20-43bb-49e1-830e-bd7b03e0afbb"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x550 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x550 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# scale_data_numeric = train_x.iloc[:, range(0, len(train_x.columns)-1)]\n",
        "\n",
        "# 1. 정규화_Robust\n",
        "\n",
        "# from sklearn.preprocessing import RobustScaler\n",
        "\n",
        "# robust_scaler = RobustScaler()\n",
        "# robust_scaler.fit(sub_eda_data)\n",
        "# X_scaled = robust_scaler.transform(sub_eda_data)\n",
        "\n",
        "# 2. 정규화_Standard\n",
        "\n",
        "scaler = StandardScaler()\n",
        "scaler.fit(train_x)\n",
        "X_scaled = scaler.transform(train_x)\n",
        "\n",
        "# 3. PCA(component = 3), Scaler와 무관하게 코드 동일\n",
        "\n",
        "from mpl_toolkits.mplot3d import Axes3D\n",
        "from sklearn.decomposition import PCA\n",
        "\n",
        "pca = PCA(n_components=3)\n",
        "X_scaled_reduce = pca.fit_transform(X_scaled)\n",
        "fig = plt.figure()\n",
        "ax = fig.add_subplot(111, projection='3d')\n",
        "ax.set_zlabel(\"x_composite_3\")\n",
        "# Plot the compressed data points\n",
        "ax.scatter(X_scaled_reduce[:, 0], X_scaled_reduce[:, 1], zs=X_scaled_reduce[:, 2], s=4, lw=4, label=\"inliers\",c=\"green\")\n",
        "# Plot x's for the ground truth outliers\n",
        "ax.scatter(X_scaled_reduce[outlier_index,0],X_scaled_reduce[outlier_index,1],\n",
        "           X_scaled_reduce[outlier_index,2],\n",
        "           lw=2, s=60, marker=\"x\", c=\"red\", label=\"outliers\")\n",
        "ax.legend()\n",
        "plt.show()\n",
        "\n",
        "# 4. PCA(component = 2), Scaler와 무관하게 코드 동일\n",
        "\n",
        "pca = PCA(2)\n",
        "pca.fit(X_scaled)\n",
        "res=pd.DataFrame(pca.transform(X_scaled))\n",
        "Z = np.array(res)\n",
        "plt.title(\"IsolationForest\")\n",
        "b1 = plt.scatter(res[0], res[1], c='green',\n",
        "                 s=20,label=\"normal points\")\n",
        "b1 =plt.scatter(res.iloc[outlier_index,0],res.iloc[outlier_index,1], c='green',s=20,  edgecolor=\"red\",label=\"predicted outliers\")\n",
        "plt.legend(loc=\"upper right\")\n",
        "plt.show()"
      ],
      "id": "WZYHW4ipUR2L"
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 645
        },
        "id": "2e691c6d",
        "outputId": "c3c235a0-3f29-4c96-9865-8830cf71d99b"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7e5b9e2340a0>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_fd355_row8_col1 {\n",
              "  background-color: lightgreen;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_fd355\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_fd355_level0_col0\" class=\"col_heading level0 col0\" >Description</th>\n",
              "      <th id=\"T_fd355_level0_col1\" class=\"col_heading level0 col1\" >Value</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_fd355_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_fd355_row0_col0\" class=\"data row0 col0\" >Session id</td>\n",
              "      <td id=\"T_fd355_row0_col1\" class=\"data row0 col1\" >42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_fd355_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_fd355_row1_col0\" class=\"data row1 col0\" >Target</td>\n",
              "      <td id=\"T_fd355_row1_col1\" class=\"data row1 col1\" >풍속 (m/s)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_fd355_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_fd355_row2_col0\" class=\"data row2 col0\" >Target type</td>\n",
              "      <td id=\"T_fd355_row2_col1\" class=\"data row2 col1\" >Regression</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_fd355_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_fd355_row3_col0\" class=\"data row3 col0\" >Original data shape</td>\n",
              "      <td id=\"T_fd355_row3_col1\" class=\"data row3 col1\" >(32561, 13)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_fd355_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_fd355_row4_col0\" class=\"data row4 col0\" >Transformed data shape</td>\n",
              "      <td id=\"T_fd355_row4_col1\" class=\"data row4 col1\" >(32561, 13)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_fd355_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_fd355_row5_col0\" class=\"data row5 col0\" >Transformed train set shape</td>\n",
              "      <td id=\"T_fd355_row5_col1\" class=\"data row5 col1\" >(22792, 13)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_fd355_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_fd355_row6_col0\" class=\"data row6 col0\" >Transformed test set shape</td>\n",
              "      <td id=\"T_fd355_row6_col1\" class=\"data row6 col1\" >(9769, 13)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_fd355_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_fd355_row7_col0\" class=\"data row7 col0\" >Numeric features</td>\n",
              "      <td id=\"T_fd355_row7_col1\" class=\"data row7 col1\" >12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_fd355_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "      <td id=\"T_fd355_row8_col0\" class=\"data row8 col0\" >Preprocess</td>\n",
              "      <td id=\"T_fd355_row8_col1\" class=\"data row8 col1\" >True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_fd355_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "      <td id=\"T_fd355_row9_col0\" class=\"data row9 col0\" >Imputation type</td>\n",
              "      <td id=\"T_fd355_row9_col1\" class=\"data row9 col1\" >simple</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_fd355_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n",
              "      <td id=\"T_fd355_row10_col0\" class=\"data row10 col0\" >Numeric imputation</td>\n",
              "      <td id=\"T_fd355_row10_col1\" class=\"data row10 col1\" >mean</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_fd355_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n",
              "      <td id=\"T_fd355_row11_col0\" class=\"data row11 col0\" >Categorical imputation</td>\n",
              "      <td id=\"T_fd355_row11_col1\" class=\"data row11 col1\" >mode</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_fd355_level0_row12\" class=\"row_heading level0 row12\" >12</th>\n",
              "      <td id=\"T_fd355_row12_col0\" class=\"data row12 col0\" >Fold Generator</td>\n",
              "      <td id=\"T_fd355_row12_col1\" class=\"data row12 col1\" >KFold</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_fd355_level0_row13\" class=\"row_heading level0 row13\" >13</th>\n",
              "      <td id=\"T_fd355_row13_col0\" class=\"data row13 col0\" >Fold Number</td>\n",
              "      <td id=\"T_fd355_row13_col1\" class=\"data row13 col1\" >10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_fd355_level0_row14\" class=\"row_heading level0 row14\" >14</th>\n",
              "      <td id=\"T_fd355_row14_col0\" class=\"data row14 col0\" >CPU Jobs</td>\n",
              "      <td id=\"T_fd355_row14_col1\" class=\"data row14 col1\" >-1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_fd355_level0_row15\" class=\"row_heading level0 row15\" >15</th>\n",
              "      <td id=\"T_fd355_row15_col0\" class=\"data row15 col0\" >Use GPU</td>\n",
              "      <td id=\"T_fd355_row15_col1\" class=\"data row15 col1\" >False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_fd355_level0_row16\" class=\"row_heading level0 row16\" >16</th>\n",
              "      <td id=\"T_fd355_row16_col0\" class=\"data row16 col0\" >Log Experiment</td>\n",
              "      <td id=\"T_fd355_row16_col1\" class=\"data row16 col1\" >False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_fd355_level0_row17\" class=\"row_heading level0 row17\" >17</th>\n",
              "      <td id=\"T_fd355_row17_col0\" class=\"data row17 col0\" >Experiment Name</td>\n",
              "      <td id=\"T_fd355_row17_col1\" class=\"data row17 col1\" >reg-default-name</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_fd355_level0_row18\" class=\"row_heading level0 row18\" >18</th>\n",
              "      <td id=\"T_fd355_row18_col0\" class=\"data row18 col0\" >USI</td>\n",
              "      <td id=\"T_fd355_row18_col1\" class=\"data row18 col1\" >7f6d</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        }
      ],
      "source": [
        "model = setup(train_x, target = train_y, session_id=SEED )"
      ],
      "id": "2e691c6d"
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 734,
          "referenced_widgets": [
            "75a1bf50528e41a892541fa7f9dc8b5b",
            "15e305a66c104527baf8edaf683c548a",
            "5b1ae3655db44712b6c4881d69c99168",
            "a5f8ecffd10c438698cc04976ce79800",
            "dd6dbce2edfe4c57aca7383ab403b39c",
            "61abc82d1811435eaa70f3a50d61af12",
            "3c21baf487124100a0c5998bc4e53f75",
            "e0d95c7b2c594da582c1f0d594d7b495",
            "4fc006fe92594cf399c25bf3fc160a6b",
            "af10de3d0b6d48e79ada66e0193fe400",
            "25ae1963edb94184829959de42e0052f"
          ]
        },
        "id": "c0bd7b39",
        "outputId": "290b966a-e907-409a-c421-3248ef69b095",
        "scrolled": true
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7e5c0b54a920>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_ecbd2 th {\n",
              "  text-align: left;\n",
              "}\n",
              "#T_ecbd2_row0_col0, #T_ecbd2_row1_col0, #T_ecbd2_row1_col1, #T_ecbd2_row1_col2, #T_ecbd2_row1_col3, #T_ecbd2_row1_col4, #T_ecbd2_row1_col5, #T_ecbd2_row1_col6, #T_ecbd2_row2_col0, #T_ecbd2_row2_col1, #T_ecbd2_row2_col2, #T_ecbd2_row2_col3, #T_ecbd2_row2_col4, #T_ecbd2_row2_col5, #T_ecbd2_row2_col6, #T_ecbd2_row3_col0, #T_ecbd2_row3_col1, #T_ecbd2_row3_col2, #T_ecbd2_row3_col3, #T_ecbd2_row3_col4, #T_ecbd2_row3_col5, #T_ecbd2_row3_col6, #T_ecbd2_row4_col0, #T_ecbd2_row4_col1, #T_ecbd2_row4_col2, #T_ecbd2_row4_col3, #T_ecbd2_row4_col4, #T_ecbd2_row4_col5, #T_ecbd2_row4_col6, #T_ecbd2_row5_col0, #T_ecbd2_row5_col1, #T_ecbd2_row5_col2, #T_ecbd2_row5_col3, #T_ecbd2_row5_col4, #T_ecbd2_row5_col5, #T_ecbd2_row5_col6, #T_ecbd2_row6_col0, #T_ecbd2_row6_col1, #T_ecbd2_row6_col2, #T_ecbd2_row6_col3, #T_ecbd2_row6_col4, #T_ecbd2_row6_col5, #T_ecbd2_row6_col6, #T_ecbd2_row7_col0, #T_ecbd2_row7_col1, #T_ecbd2_row7_col2, #T_ecbd2_row7_col3, #T_ecbd2_row7_col4, #T_ecbd2_row7_col5, #T_ecbd2_row7_col6, #T_ecbd2_row8_col0, #T_ecbd2_row8_col1, #T_ecbd2_row8_col2, #T_ecbd2_row8_col3, #T_ecbd2_row8_col4, #T_ecbd2_row8_col5, #T_ecbd2_row8_col6, #T_ecbd2_row9_col0, #T_ecbd2_row9_col1, #T_ecbd2_row9_col2, #T_ecbd2_row9_col3, #T_ecbd2_row9_col4, #T_ecbd2_row9_col5, #T_ecbd2_row9_col6, #T_ecbd2_row10_col0, #T_ecbd2_row10_col1, #T_ecbd2_row10_col2, #T_ecbd2_row10_col3, #T_ecbd2_row10_col4, #T_ecbd2_row10_col5, #T_ecbd2_row10_col6, #T_ecbd2_row11_col0, #T_ecbd2_row11_col1, #T_ecbd2_row11_col2, #T_ecbd2_row11_col3, #T_ecbd2_row11_col4, #T_ecbd2_row11_col5, #T_ecbd2_row11_col6, #T_ecbd2_row12_col0, #T_ecbd2_row12_col1, #T_ecbd2_row12_col2, #T_ecbd2_row12_col3, #T_ecbd2_row12_col4, #T_ecbd2_row12_col5, #T_ecbd2_row12_col6, #T_ecbd2_row13_col0, #T_ecbd2_row13_col1, #T_ecbd2_row13_col2, #T_ecbd2_row13_col3, #T_ecbd2_row13_col4, #T_ecbd2_row13_col5, #T_ecbd2_row13_col6, #T_ecbd2_row14_col0, #T_ecbd2_row14_col1, #T_ecbd2_row14_col2, #T_ecbd2_row14_col3, #T_ecbd2_row14_col4, #T_ecbd2_row14_col5, #T_ecbd2_row14_col6, #T_ecbd2_row15_col0, #T_ecbd2_row15_col1, #T_ecbd2_row15_col2, #T_ecbd2_row15_col3, #T_ecbd2_row15_col4, #T_ecbd2_row15_col5, #T_ecbd2_row15_col6, #T_ecbd2_row16_col0, #T_ecbd2_row16_col1, #T_ecbd2_row16_col2, #T_ecbd2_row16_col3, #T_ecbd2_row16_col4, #T_ecbd2_row16_col5, #T_ecbd2_row16_col6, #T_ecbd2_row17_col0, #T_ecbd2_row17_col1, #T_ecbd2_row17_col2, #T_ecbd2_row17_col3, #T_ecbd2_row17_col4, #T_ecbd2_row17_col5, #T_ecbd2_row17_col6, #T_ecbd2_row18_col0, #T_ecbd2_row18_col1, #T_ecbd2_row18_col2, #T_ecbd2_row18_col3, #T_ecbd2_row18_col4, #T_ecbd2_row18_col5, #T_ecbd2_row18_col6, #T_ecbd2_row19_col0, #T_ecbd2_row19_col1, #T_ecbd2_row19_col2, #T_ecbd2_row19_col3, #T_ecbd2_row19_col4, #T_ecbd2_row19_col5, #T_ecbd2_row19_col6 {\n",
              "  text-align: left;\n",
              "}\n",
              "#T_ecbd2_row0_col1, #T_ecbd2_row0_col2, #T_ecbd2_row0_col3, #T_ecbd2_row0_col4, #T_ecbd2_row0_col5, #T_ecbd2_row0_col6 {\n",
              "  text-align: left;\n",
              "  background-color: yellow;\n",
              "}\n",
              "#T_ecbd2_row0_col7, #T_ecbd2_row1_col7, #T_ecbd2_row2_col7, #T_ecbd2_row3_col7, #T_ecbd2_row4_col7, #T_ecbd2_row5_col7, #T_ecbd2_row6_col7, #T_ecbd2_row7_col7, #T_ecbd2_row8_col7, #T_ecbd2_row9_col7, #T_ecbd2_row10_col7, #T_ecbd2_row11_col7, #T_ecbd2_row12_col7, #T_ecbd2_row13_col7, #T_ecbd2_row14_col7, #T_ecbd2_row15_col7, #T_ecbd2_row16_col7, #T_ecbd2_row18_col7, #T_ecbd2_row19_col7 {\n",
              "  text-align: left;\n",
              "  background-color: lightgrey;\n",
              "}\n",
              "#T_ecbd2_row17_col7 {\n",
              "  text-align: left;\n",
              "  background-color: yellow;\n",
              "  background-color: lightgrey;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_ecbd2\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_ecbd2_level0_col0\" class=\"col_heading level0 col0\" >Model</th>\n",
              "      <th id=\"T_ecbd2_level0_col1\" class=\"col_heading level0 col1\" >MAE</th>\n",
              "      <th id=\"T_ecbd2_level0_col2\" class=\"col_heading level0 col2\" >MSE</th>\n",
              "      <th id=\"T_ecbd2_level0_col3\" class=\"col_heading level0 col3\" >RMSE</th>\n",
              "      <th id=\"T_ecbd2_level0_col4\" class=\"col_heading level0 col4\" >R2</th>\n",
              "      <th id=\"T_ecbd2_level0_col5\" class=\"col_heading level0 col5\" >RMSLE</th>\n",
              "      <th id=\"T_ecbd2_level0_col6\" class=\"col_heading level0 col6\" >MAPE</th>\n",
              "      <th id=\"T_ecbd2_level0_col7\" class=\"col_heading level0 col7\" >TT (Sec)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_ecbd2_level0_row0\" class=\"row_heading level0 row0\" >et</th>\n",
              "      <td id=\"T_ecbd2_row0_col0\" class=\"data row0 col0\" >Extra Trees Regressor</td>\n",
              "      <td id=\"T_ecbd2_row0_col1\" class=\"data row0 col1\" >0.4030</td>\n",
              "      <td id=\"T_ecbd2_row0_col2\" class=\"data row0 col2\" >0.3087</td>\n",
              "      <td id=\"T_ecbd2_row0_col3\" class=\"data row0 col3\" >0.5554</td>\n",
              "      <td id=\"T_ecbd2_row0_col4\" class=\"data row0 col4\" >0.8694</td>\n",
              "      <td id=\"T_ecbd2_row0_col5\" class=\"data row0 col5\" >0.1921</td>\n",
              "      <td id=\"T_ecbd2_row0_col6\" class=\"data row0 col6\" >0.3531</td>\n",
              "      <td id=\"T_ecbd2_row0_col7\" class=\"data row0 col7\" >9.2500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ecbd2_level0_row1\" class=\"row_heading level0 row1\" >rf</th>\n",
              "      <td id=\"T_ecbd2_row1_col0\" class=\"data row1 col0\" >Random Forest Regressor</td>\n",
              "      <td id=\"T_ecbd2_row1_col1\" class=\"data row1 col1\" >0.4573</td>\n",
              "      <td id=\"T_ecbd2_row1_col2\" class=\"data row1 col2\" >0.3963</td>\n",
              "      <td id=\"T_ecbd2_row1_col3\" class=\"data row1 col3\" >0.6294</td>\n",
              "      <td id=\"T_ecbd2_row1_col4\" class=\"data row1 col4\" >0.8323</td>\n",
              "      <td id=\"T_ecbd2_row1_col5\" class=\"data row1 col5\" >0.2179</td>\n",
              "      <td id=\"T_ecbd2_row1_col6\" class=\"data row1 col6\" >0.4176</td>\n",
              "      <td id=\"T_ecbd2_row1_col7\" class=\"data row1 col7\" >22.9990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ecbd2_level0_row2\" class=\"row_heading level0 row2\" >knn</th>\n",
              "      <td id=\"T_ecbd2_row2_col0\" class=\"data row2 col0\" >K Neighbors Regressor</td>\n",
              "      <td id=\"T_ecbd2_row2_col1\" class=\"data row2 col1\" >0.4780</td>\n",
              "      <td id=\"T_ecbd2_row2_col2\" class=\"data row2 col2\" >0.4628</td>\n",
              "      <td id=\"T_ecbd2_row2_col3\" class=\"data row2 col3\" >0.6799</td>\n",
              "      <td id=\"T_ecbd2_row2_col4\" class=\"data row2 col4\" >0.8043</td>\n",
              "      <td id=\"T_ecbd2_row2_col5\" class=\"data row2 col5\" >0.2281</td>\n",
              "      <td id=\"T_ecbd2_row2_col6\" class=\"data row2 col6\" >0.4177</td>\n",
              "      <td id=\"T_ecbd2_row2_col7\" class=\"data row2 col7\" >0.4440</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ecbd2_level0_row3\" class=\"row_heading level0 row3\" >catboost</th>\n",
              "      <td id=\"T_ecbd2_row3_col0\" class=\"data row3 col0\" >CatBoost Regressor</td>\n",
              "      <td id=\"T_ecbd2_row3_col1\" class=\"data row3 col1\" >0.5379</td>\n",
              "      <td id=\"T_ecbd2_row3_col2\" class=\"data row3 col2\" >0.5186</td>\n",
              "      <td id=\"T_ecbd2_row3_col3\" class=\"data row3 col3\" >0.7201</td>\n",
              "      <td id=\"T_ecbd2_row3_col4\" class=\"data row3 col4\" >0.7803</td>\n",
              "      <td id=\"T_ecbd2_row3_col5\" class=\"data row3 col5\" >0.2444</td>\n",
              "      <td id=\"T_ecbd2_row3_col6\" class=\"data row3 col6\" >0.4642</td>\n",
              "      <td id=\"T_ecbd2_row3_col7\" class=\"data row3 col7\" >11.0230</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ecbd2_level0_row4\" class=\"row_heading level0 row4\" >xgboost</th>\n",
              "      <td id=\"T_ecbd2_row4_col0\" class=\"data row4 col0\" >Extreme Gradient Boosting</td>\n",
              "      <td id=\"T_ecbd2_row4_col1\" class=\"data row4 col1\" >0.5451</td>\n",
              "      <td id=\"T_ecbd2_row4_col2\" class=\"data row4 col2\" >0.5384</td>\n",
              "      <td id=\"T_ecbd2_row4_col3\" class=\"data row4 col3\" >0.7336</td>\n",
              "      <td id=\"T_ecbd2_row4_col4\" class=\"data row4 col4\" >0.7719</td>\n",
              "      <td id=\"T_ecbd2_row4_col5\" class=\"data row4 col5\" >0.2498</td>\n",
              "      <td id=\"T_ecbd2_row4_col6\" class=\"data row4 col6\" >0.4703</td>\n",
              "      <td id=\"T_ecbd2_row4_col7\" class=\"data row4 col7\" >3.7250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ecbd2_level0_row5\" class=\"row_heading level0 row5\" >lightgbm</th>\n",
              "      <td id=\"T_ecbd2_row5_col0\" class=\"data row5 col0\" >Light Gradient Boosting Machine</td>\n",
              "      <td id=\"T_ecbd2_row5_col1\" class=\"data row5 col1\" >0.5891</td>\n",
              "      <td id=\"T_ecbd2_row5_col2\" class=\"data row5 col2\" >0.6139</td>\n",
              "      <td id=\"T_ecbd2_row5_col3\" class=\"data row5 col3\" >0.7834</td>\n",
              "      <td id=\"T_ecbd2_row5_col4\" class=\"data row5 col4\" >0.7399</td>\n",
              "      <td id=\"T_ecbd2_row5_col5\" class=\"data row5 col5\" >0.2644</td>\n",
              "      <td id=\"T_ecbd2_row5_col6\" class=\"data row5 col6\" >0.5258</td>\n",
              "      <td id=\"T_ecbd2_row5_col7\" class=\"data row5 col7\" >1.0190</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ecbd2_level0_row6\" class=\"row_heading level0 row6\" >dt</th>\n",
              "      <td id=\"T_ecbd2_row6_col0\" class=\"data row6 col0\" >Decision Tree Regressor</td>\n",
              "      <td id=\"T_ecbd2_row6_col1\" class=\"data row6 col1\" >0.6008</td>\n",
              "      <td id=\"T_ecbd2_row6_col2\" class=\"data row6 col2\" >0.8055</td>\n",
              "      <td id=\"T_ecbd2_row6_col3\" class=\"data row6 col3\" >0.8971</td>\n",
              "      <td id=\"T_ecbd2_row6_col4\" class=\"data row6 col4\" >0.6592</td>\n",
              "      <td id=\"T_ecbd2_row6_col5\" class=\"data row6 col5\" >0.2957</td>\n",
              "      <td id=\"T_ecbd2_row6_col6\" class=\"data row6 col6\" >0.4861</td>\n",
              "      <td id=\"T_ecbd2_row6_col7\" class=\"data row6 col7\" >0.8570</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ecbd2_level0_row7\" class=\"row_heading level0 row7\" >gbr</th>\n",
              "      <td id=\"T_ecbd2_row7_col0\" class=\"data row7 col0\" >Gradient Boosting Regressor</td>\n",
              "      <td id=\"T_ecbd2_row7_col1\" class=\"data row7 col1\" >0.7704</td>\n",
              "      <td id=\"T_ecbd2_row7_col2\" class=\"data row7 col2\" >1.0516</td>\n",
              "      <td id=\"T_ecbd2_row7_col3\" class=\"data row7 col3\" >1.0253</td>\n",
              "      <td id=\"T_ecbd2_row7_col4\" class=\"data row7 col4\" >0.5550</td>\n",
              "      <td id=\"T_ecbd2_row7_col5\" class=\"data row7 col5\" >0.3289</td>\n",
              "      <td id=\"T_ecbd2_row7_col6\" class=\"data row7 col6\" >0.6869</td>\n",
              "      <td id=\"T_ecbd2_row7_col7\" class=\"data row7 col7\" >6.6630</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ecbd2_level0_row8\" class=\"row_heading level0 row8\" >ada</th>\n",
              "      <td id=\"T_ecbd2_row8_col0\" class=\"data row8 col0\" >AdaBoost Regressor</td>\n",
              "      <td id=\"T_ecbd2_row8_col1\" class=\"data row8 col1\" >1.1725</td>\n",
              "      <td id=\"T_ecbd2_row8_col2\" class=\"data row8 col2\" >1.8859</td>\n",
              "      <td id=\"T_ecbd2_row8_col3\" class=\"data row8 col3\" >1.3727</td>\n",
              "      <td id=\"T_ecbd2_row8_col4\" class=\"data row8 col4\" >0.2003</td>\n",
              "      <td id=\"T_ecbd2_row8_col5\" class=\"data row8 col5\" >0.4856</td>\n",
              "      <td id=\"T_ecbd2_row8_col6\" class=\"data row8 col6\" >1.3755</td>\n",
              "      <td id=\"T_ecbd2_row8_col7\" class=\"data row8 col7\" >2.3830</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ecbd2_level0_row9\" class=\"row_heading level0 row9\" >lr</th>\n",
              "      <td id=\"T_ecbd2_row9_col0\" class=\"data row9 col0\" >Linear Regression</td>\n",
              "      <td id=\"T_ecbd2_row9_col1\" class=\"data row9 col1\" >1.0279</td>\n",
              "      <td id=\"T_ecbd2_row9_col2\" class=\"data row9 col2\" >1.9236</td>\n",
              "      <td id=\"T_ecbd2_row9_col3\" class=\"data row9 col3\" >1.3867</td>\n",
              "      <td id=\"T_ecbd2_row9_col4\" class=\"data row9 col4\" >0.1863</td>\n",
              "      <td id=\"T_ecbd2_row9_col5\" class=\"data row9 col5\" >0.4226</td>\n",
              "      <td id=\"T_ecbd2_row9_col6\" class=\"data row9 col6\" >0.9412</td>\n",
              "      <td id=\"T_ecbd2_row9_col7\" class=\"data row9 col7\" >0.7300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ecbd2_level0_row10\" class=\"row_heading level0 row10\" >br</th>\n",
              "      <td id=\"T_ecbd2_row10_col0\" class=\"data row10 col0\" >Bayesian Ridge</td>\n",
              "      <td id=\"T_ecbd2_row10_col1\" class=\"data row10 col1\" >1.0279</td>\n",
              "      <td id=\"T_ecbd2_row10_col2\" class=\"data row10 col2\" >1.9237</td>\n",
              "      <td id=\"T_ecbd2_row10_col3\" class=\"data row10 col3\" >1.3867</td>\n",
              "      <td id=\"T_ecbd2_row10_col4\" class=\"data row10 col4\" >0.1862</td>\n",
              "      <td id=\"T_ecbd2_row10_col5\" class=\"data row10 col5\" >0.4225</td>\n",
              "      <td id=\"T_ecbd2_row10_col6\" class=\"data row10 col6\" >0.9419</td>\n",
              "      <td id=\"T_ecbd2_row10_col7\" class=\"data row10 col7\" >0.3780</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ecbd2_level0_row11\" class=\"row_heading level0 row11\" >ridge</th>\n",
              "      <td id=\"T_ecbd2_row11_col0\" class=\"data row11 col0\" >Ridge Regression</td>\n",
              "      <td id=\"T_ecbd2_row11_col1\" class=\"data row11 col1\" >1.0275</td>\n",
              "      <td id=\"T_ecbd2_row11_col2\" class=\"data row11 col2\" >1.9275</td>\n",
              "      <td id=\"T_ecbd2_row11_col3\" class=\"data row11 col3\" >1.3881</td>\n",
              "      <td id=\"T_ecbd2_row11_col4\" class=\"data row11 col4\" >0.1846</td>\n",
              "      <td id=\"T_ecbd2_row11_col5\" class=\"data row11 col5\" >0.4224</td>\n",
              "      <td id=\"T_ecbd2_row11_col6\" class=\"data row11 col6\" >0.9424</td>\n",
              "      <td id=\"T_ecbd2_row11_col7\" class=\"data row11 col7\" >0.1880</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ecbd2_level0_row12\" class=\"row_heading level0 row12\" >huber</th>\n",
              "      <td id=\"T_ecbd2_row12_col0\" class=\"data row12 col0\" >Huber Regressor</td>\n",
              "      <td id=\"T_ecbd2_row12_col1\" class=\"data row12 col1\" >0.9929</td>\n",
              "      <td id=\"T_ecbd2_row12_col2\" class=\"data row12 col2\" >2.0127</td>\n",
              "      <td id=\"T_ecbd2_row12_col3\" class=\"data row12 col3\" >1.4184</td>\n",
              "      <td id=\"T_ecbd2_row12_col4\" class=\"data row12 col4\" >0.1488</td>\n",
              "      <td id=\"T_ecbd2_row12_col5\" class=\"data row12 col5\" >0.4104</td>\n",
              "      <td id=\"T_ecbd2_row12_col6\" class=\"data row12 col6\" >0.8111</td>\n",
              "      <td id=\"T_ecbd2_row12_col7\" class=\"data row12 col7\" >0.5130</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ecbd2_level0_row13\" class=\"row_heading level0 row13\" >omp</th>\n",
              "      <td id=\"T_ecbd2_row13_col0\" class=\"data row13 col0\" >Orthogonal Matching Pursuit</td>\n",
              "      <td id=\"T_ecbd2_row13_col1\" class=\"data row13 col1\" >1.0770</td>\n",
              "      <td id=\"T_ecbd2_row13_col2\" class=\"data row13 col2\" >2.1434</td>\n",
              "      <td id=\"T_ecbd2_row13_col3\" class=\"data row13 col3\" >1.4637</td>\n",
              "      <td id=\"T_ecbd2_row13_col4\" class=\"data row13 col4\" >0.0935</td>\n",
              "      <td id=\"T_ecbd2_row13_col5\" class=\"data row13 col5\" >0.4400</td>\n",
              "      <td id=\"T_ecbd2_row13_col6\" class=\"data row13 col6\" >1.0005</td>\n",
              "      <td id=\"T_ecbd2_row13_col7\" class=\"data row13 col7\" >0.3080</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ecbd2_level0_row14\" class=\"row_heading level0 row14\" >lasso</th>\n",
              "      <td id=\"T_ecbd2_row14_col0\" class=\"data row14 col0\" >Lasso Regression</td>\n",
              "      <td id=\"T_ecbd2_row14_col1\" class=\"data row14 col1\" >1.1402</td>\n",
              "      <td id=\"T_ecbd2_row14_col2\" class=\"data row14 col2\" >2.3656</td>\n",
              "      <td id=\"T_ecbd2_row14_col3\" class=\"data row14 col3\" >1.5377</td>\n",
              "      <td id=\"T_ecbd2_row14_col4\" class=\"data row14 col4\" >-0.0003</td>\n",
              "      <td id=\"T_ecbd2_row14_col5\" class=\"data row14 col5\" >0.4655</td>\n",
              "      <td id=\"T_ecbd2_row14_col6\" class=\"data row14 col6\" >1.0970</td>\n",
              "      <td id=\"T_ecbd2_row14_col7\" class=\"data row14 col7\" >0.1880</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ecbd2_level0_row15\" class=\"row_heading level0 row15\" >en</th>\n",
              "      <td id=\"T_ecbd2_row15_col0\" class=\"data row15 col0\" >Elastic Net</td>\n",
              "      <td id=\"T_ecbd2_row15_col1\" class=\"data row15 col1\" >1.1402</td>\n",
              "      <td id=\"T_ecbd2_row15_col2\" class=\"data row15 col2\" >2.3656</td>\n",
              "      <td id=\"T_ecbd2_row15_col3\" class=\"data row15 col3\" >1.5377</td>\n",
              "      <td id=\"T_ecbd2_row15_col4\" class=\"data row15 col4\" >-0.0003</td>\n",
              "      <td id=\"T_ecbd2_row15_col5\" class=\"data row15 col5\" >0.4655</td>\n",
              "      <td id=\"T_ecbd2_row15_col6\" class=\"data row15 col6\" >1.0970</td>\n",
              "      <td id=\"T_ecbd2_row15_col7\" class=\"data row15 col7\" >0.2050</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ecbd2_level0_row16\" class=\"row_heading level0 row16\" >llar</th>\n",
              "      <td id=\"T_ecbd2_row16_col0\" class=\"data row16 col0\" >Lasso Least Angle Regression</td>\n",
              "      <td id=\"T_ecbd2_row16_col1\" class=\"data row16 col1\" >1.1402</td>\n",
              "      <td id=\"T_ecbd2_row16_col2\" class=\"data row16 col2\" >2.3656</td>\n",
              "      <td id=\"T_ecbd2_row16_col3\" class=\"data row16 col3\" >1.5377</td>\n",
              "      <td id=\"T_ecbd2_row16_col4\" class=\"data row16 col4\" >-0.0003</td>\n",
              "      <td id=\"T_ecbd2_row16_col5\" class=\"data row16 col5\" >0.4655</td>\n",
              "      <td id=\"T_ecbd2_row16_col6\" class=\"data row16 col6\" >1.0970</td>\n",
              "      <td id=\"T_ecbd2_row16_col7\" class=\"data row16 col7\" >0.3180</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ecbd2_level0_row17\" class=\"row_heading level0 row17\" >dummy</th>\n",
              "      <td id=\"T_ecbd2_row17_col0\" class=\"data row17 col0\" >Dummy Regressor</td>\n",
              "      <td id=\"T_ecbd2_row17_col1\" class=\"data row17 col1\" >1.1402</td>\n",
              "      <td id=\"T_ecbd2_row17_col2\" class=\"data row17 col2\" >2.3656</td>\n",
              "      <td id=\"T_ecbd2_row17_col3\" class=\"data row17 col3\" >1.5377</td>\n",
              "      <td id=\"T_ecbd2_row17_col4\" class=\"data row17 col4\" >-0.0003</td>\n",
              "      <td id=\"T_ecbd2_row17_col5\" class=\"data row17 col5\" >0.4655</td>\n",
              "      <td id=\"T_ecbd2_row17_col6\" class=\"data row17 col6\" >1.0970</td>\n",
              "      <td id=\"T_ecbd2_row17_col7\" class=\"data row17 col7\" >0.1750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ecbd2_level0_row18\" class=\"row_heading level0 row18\" >lar</th>\n",
              "      <td id=\"T_ecbd2_row18_col0\" class=\"data row18 col0\" >Least Angle Regression</td>\n",
              "      <td id=\"T_ecbd2_row18_col1\" class=\"data row18 col1\" >1.5756</td>\n",
              "      <td id=\"T_ecbd2_row18_col2\" class=\"data row18 col2\" >4.3135</td>\n",
              "      <td id=\"T_ecbd2_row18_col3\" class=\"data row18 col3\" >2.0762</td>\n",
              "      <td id=\"T_ecbd2_row18_col4\" class=\"data row18 col4\" >-0.8252</td>\n",
              "      <td id=\"T_ecbd2_row18_col5\" class=\"data row18 col5\" >0.5756</td>\n",
              "      <td id=\"T_ecbd2_row18_col6\" class=\"data row18 col6\" >1.4345</td>\n",
              "      <td id=\"T_ecbd2_row18_col7\" class=\"data row18 col7\" >0.3300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ecbd2_level0_row19\" class=\"row_heading level0 row19\" >par</th>\n",
              "      <td id=\"T_ecbd2_row19_col0\" class=\"data row19 col0\" >Passive Aggressive Regressor</td>\n",
              "      <td id=\"T_ecbd2_row19_col1\" class=\"data row19 col1\" >1.9672</td>\n",
              "      <td id=\"T_ecbd2_row19_col2\" class=\"data row19 col2\" >6.5447</td>\n",
              "      <td id=\"T_ecbd2_row19_col3\" class=\"data row19 col3\" >2.4759</td>\n",
              "      <td id=\"T_ecbd2_row19_col4\" class=\"data row19 col4\" >-1.7790</td>\n",
              "      <td id=\"T_ecbd2_row19_col5\" class=\"data row19 col5\" >0.6393</td>\n",
              "      <td id=\"T_ecbd2_row19_col6\" class=\"data row19 col6\" >1.7534</td>\n",
              "      <td id=\"T_ecbd2_row19_col7\" class=\"data row19 col7\" >0.2040</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Processing:   0%|          | 0/85 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "75a1bf50528e41a892541fa7f9dc8b5b"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"
                }
              }
            }
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ExtraTreesRegressor(n_jobs=-1, random_state=42)"
            ],
            "text/html": [
              "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>ExtraTreesRegressor(n_jobs=-1, random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">ExtraTreesRegressor</label><div class=\"sk-toggleable__content\"><pre>ExtraTreesRegressor(n_jobs=-1, random_state=42)</pre></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ],
      "source": [
        "compare_models()"
      ],
      "id": "c0bd7b39"
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 952,
          "referenced_widgets": [
            "3ca1056db21d4942b85d9e13db6d7d48",
            "4a0ae40fa3fd4cdc810f2b4de775c70f",
            "f88bf08636b1408e96ace49bda92ef2b",
            "7af8c074cf114856b739ce5020d85c4c",
            "9a92306b447e49bc8ad25917efe849f7",
            "0fd3bba731584a47b28b532de57c2d3b",
            "a784ad0e55e04d779f331a065b54d0b6",
            "d1fdec35fbaa445a9b3e8a4f04af3abb",
            "451a7075369a45809f60f89aa4a0ae53",
            "2fa201d2947b464b91f2863fb0573c21",
            "6840c5548f7f41cea49a8489f18bac66"
          ]
        },
        "id": "bb4f582a",
        "outputId": "657aa026-3c47-4c56-a35f-e05de48eed7a"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7e5bc4bab010>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_d231a th {\n",
              "  text-align: left;\n",
              "}\n",
              "#T_d231a_row0_col0, #T_d231a_row1_col0, #T_d231a_row1_col1, #T_d231a_row1_col2, #T_d231a_row1_col3, #T_d231a_row1_col4, #T_d231a_row1_col5, #T_d231a_row1_col6, #T_d231a_row2_col0, #T_d231a_row2_col1, #T_d231a_row2_col2, #T_d231a_row2_col3, #T_d231a_row2_col4, #T_d231a_row2_col5, #T_d231a_row2_col6, #T_d231a_row3_col0, #T_d231a_row3_col1, #T_d231a_row3_col2, #T_d231a_row3_col3, #T_d231a_row3_col4, #T_d231a_row3_col5, #T_d231a_row3_col6, #T_d231a_row4_col0, #T_d231a_row4_col1, #T_d231a_row4_col2, #T_d231a_row4_col3, #T_d231a_row4_col4, #T_d231a_row4_col5, #T_d231a_row4_col6, #T_d231a_row5_col0, #T_d231a_row5_col1, #T_d231a_row5_col2, #T_d231a_row5_col3, #T_d231a_row5_col4, #T_d231a_row5_col5, #T_d231a_row5_col6, #T_d231a_row6_col0, #T_d231a_row6_col1, #T_d231a_row6_col2, #T_d231a_row6_col3, #T_d231a_row6_col4, #T_d231a_row6_col5, #T_d231a_row6_col6, #T_d231a_row7_col0, #T_d231a_row7_col1, #T_d231a_row7_col2, #T_d231a_row7_col3, #T_d231a_row7_col4, #T_d231a_row7_col5, #T_d231a_row7_col6, #T_d231a_row8_col0, #T_d231a_row8_col1, #T_d231a_row8_col2, #T_d231a_row8_col3, #T_d231a_row8_col4, #T_d231a_row8_col5, #T_d231a_row8_col6, #T_d231a_row9_col0, #T_d231a_row9_col1, #T_d231a_row9_col2, #T_d231a_row9_col3, #T_d231a_row9_col4, #T_d231a_row9_col5, #T_d231a_row9_col6, #T_d231a_row10_col0, #T_d231a_row10_col1, #T_d231a_row10_col2, #T_d231a_row10_col3, #T_d231a_row10_col4, #T_d231a_row10_col5, #T_d231a_row10_col6, #T_d231a_row11_col0, #T_d231a_row11_col1, #T_d231a_row11_col2, #T_d231a_row11_col3, #T_d231a_row11_col4, #T_d231a_row11_col5, #T_d231a_row11_col6, #T_d231a_row12_col0, #T_d231a_row12_col1, #T_d231a_row12_col2, #T_d231a_row12_col3, #T_d231a_row12_col4, #T_d231a_row12_col5, #T_d231a_row12_col6, #T_d231a_row13_col0, #T_d231a_row13_col1, #T_d231a_row13_col2, #T_d231a_row13_col3, #T_d231a_row13_col4, #T_d231a_row13_col5, #T_d231a_row13_col6, #T_d231a_row14_col0, #T_d231a_row14_col1, #T_d231a_row14_col2, #T_d231a_row14_col3, #T_d231a_row14_col4, #T_d231a_row14_col5, #T_d231a_row14_col6, #T_d231a_row15_col0, #T_d231a_row15_col1, #T_d231a_row15_col2, #T_d231a_row15_col3, #T_d231a_row15_col4, #T_d231a_row15_col5, #T_d231a_row15_col6, #T_d231a_row16_col0, #T_d231a_row16_col1, #T_d231a_row16_col2, #T_d231a_row16_col3, #T_d231a_row16_col4, #T_d231a_row16_col5, #T_d231a_row16_col6, #T_d231a_row17_col0, #T_d231a_row17_col1, #T_d231a_row17_col2, #T_d231a_row17_col3, #T_d231a_row17_col4, #T_d231a_row17_col5, #T_d231a_row17_col6, #T_d231a_row18_col0, #T_d231a_row18_col1, #T_d231a_row18_col2, #T_d231a_row18_col3, #T_d231a_row18_col4, #T_d231a_row18_col5, #T_d231a_row18_col6, #T_d231a_row19_col0, #T_d231a_row19_col1, #T_d231a_row19_col2, #T_d231a_row19_col3, #T_d231a_row19_col4, #T_d231a_row19_col5, #T_d231a_row19_col6 {\n",
              "  text-align: left;\n",
              "}\n",
              "#T_d231a_row0_col1, #T_d231a_row0_col2, #T_d231a_row0_col3, #T_d231a_row0_col4, #T_d231a_row0_col5, #T_d231a_row0_col6 {\n",
              "  text-align: left;\n",
              "  background-color: yellow;\n",
              "}\n",
              "#T_d231a_row0_col7, #T_d231a_row1_col7, #T_d231a_row2_col7, #T_d231a_row3_col7, #T_d231a_row4_col7, #T_d231a_row5_col7, #T_d231a_row6_col7, #T_d231a_row7_col7, #T_d231a_row8_col7, #T_d231a_row9_col7, #T_d231a_row10_col7, #T_d231a_row11_col7, #T_d231a_row12_col7, #T_d231a_row13_col7, #T_d231a_row14_col7, #T_d231a_row15_col7, #T_d231a_row16_col7, #T_d231a_row17_col7, #T_d231a_row19_col7 {\n",
              "  text-align: left;\n",
              "  background-color: lightgrey;\n",
              "}\n",
              "#T_d231a_row18_col7 {\n",
              "  text-align: left;\n",
              "  background-color: yellow;\n",
              "  background-color: lightgrey;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_d231a\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_d231a_level0_col0\" class=\"col_heading level0 col0\" >Model</th>\n",
              "      <th id=\"T_d231a_level0_col1\" class=\"col_heading level0 col1\" >MAE</th>\n",
              "      <th id=\"T_d231a_level0_col2\" class=\"col_heading level0 col2\" >MSE</th>\n",
              "      <th id=\"T_d231a_level0_col3\" class=\"col_heading level0 col3\" >RMSE</th>\n",
              "      <th id=\"T_d231a_level0_col4\" class=\"col_heading level0 col4\" >R2</th>\n",
              "      <th id=\"T_d231a_level0_col5\" class=\"col_heading level0 col5\" >RMSLE</th>\n",
              "      <th id=\"T_d231a_level0_col6\" class=\"col_heading level0 col6\" >MAPE</th>\n",
              "      <th id=\"T_d231a_level0_col7\" class=\"col_heading level0 col7\" >TT (Sec)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_d231a_level0_row0\" class=\"row_heading level0 row0\" >et</th>\n",
              "      <td id=\"T_d231a_row0_col0\" class=\"data row0 col0\" >Extra Trees Regressor</td>\n",
              "      <td id=\"T_d231a_row0_col1\" class=\"data row0 col1\" >0.415</td>\n",
              "      <td id=\"T_d231a_row0_col2\" class=\"data row0 col2\" >0.326</td>\n",
              "      <td id=\"T_d231a_row0_col3\" class=\"data row0 col3\" >0.571</td>\n",
              "      <td id=\"T_d231a_row0_col4\" class=\"data row0 col4\" >0.862</td>\n",
              "      <td id=\"T_d231a_row0_col5\" class=\"data row0 col5\" >0.197</td>\n",
              "      <td id=\"T_d231a_row0_col6\" class=\"data row0 col6\" >0.366</td>\n",
              "      <td id=\"T_d231a_row0_col7\" class=\"data row0 col7\" >7.330</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_d231a_level0_row1\" class=\"row_heading level0 row1\" >rf</th>\n",
              "      <td id=\"T_d231a_row1_col0\" class=\"data row1 col0\" >Random Forest Regressor</td>\n",
              "      <td id=\"T_d231a_row1_col1\" class=\"data row1 col1\" >0.469</td>\n",
              "      <td id=\"T_d231a_row1_col2\" class=\"data row1 col2\" >0.417</td>\n",
              "      <td id=\"T_d231a_row1_col3\" class=\"data row1 col3\" >0.646</td>\n",
              "      <td id=\"T_d231a_row1_col4\" class=\"data row1 col4\" >0.824</td>\n",
              "      <td id=\"T_d231a_row1_col5\" class=\"data row1 col5\" >0.223</td>\n",
              "      <td id=\"T_d231a_row1_col6\" class=\"data row1 col6\" >0.431</td>\n",
              "      <td id=\"T_d231a_row1_col7\" class=\"data row1 col7\" >19.440</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_d231a_level0_row2\" class=\"row_heading level0 row2\" >knn</th>\n",
              "      <td id=\"T_d231a_row2_col0\" class=\"data row2 col0\" >K Neighbors Regressor</td>\n",
              "      <td id=\"T_d231a_row2_col1\" class=\"data row2 col1\" >0.493</td>\n",
              "      <td id=\"T_d231a_row2_col2\" class=\"data row2 col2\" >0.495</td>\n",
              "      <td id=\"T_d231a_row2_col3\" class=\"data row2 col3\" >0.703</td>\n",
              "      <td id=\"T_d231a_row2_col4\" class=\"data row2 col4\" >0.791</td>\n",
              "      <td id=\"T_d231a_row2_col5\" class=\"data row2 col5\" >0.235</td>\n",
              "      <td id=\"T_d231a_row2_col6\" class=\"data row2 col6\" >0.431</td>\n",
              "      <td id=\"T_d231a_row2_col7\" class=\"data row2 col7\" >0.558</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_d231a_level0_row3\" class=\"row_heading level0 row3\" >catboost</th>\n",
              "      <td id=\"T_d231a_row3_col0\" class=\"data row3 col0\" >CatBoost Regressor</td>\n",
              "      <td id=\"T_d231a_row3_col1\" class=\"data row3 col1\" >0.543</td>\n",
              "      <td id=\"T_d231a_row3_col2\" class=\"data row3 col2\" >0.529</td>\n",
              "      <td id=\"T_d231a_row3_col3\" class=\"data row3 col3\" >0.727</td>\n",
              "      <td id=\"T_d231a_row3_col4\" class=\"data row3 col4\" >0.776</td>\n",
              "      <td id=\"T_d231a_row3_col5\" class=\"data row3 col5\" >0.246</td>\n",
              "      <td id=\"T_d231a_row3_col6\" class=\"data row3 col6\" >0.469</td>\n",
              "      <td id=\"T_d231a_row3_col7\" class=\"data row3 col7\" >9.782</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_d231a_level0_row4\" class=\"row_heading level0 row4\" >xgboost</th>\n",
              "      <td id=\"T_d231a_row4_col0\" class=\"data row4 col0\" >Extreme Gradient Boosting</td>\n",
              "      <td id=\"T_d231a_row4_col1\" class=\"data row4 col1\" >0.544</td>\n",
              "      <td id=\"T_d231a_row4_col2\" class=\"data row4 col2\" >0.539</td>\n",
              "      <td id=\"T_d231a_row4_col3\" class=\"data row4 col3\" >0.734</td>\n",
              "      <td id=\"T_d231a_row4_col4\" class=\"data row4 col4\" >0.772</td>\n",
              "      <td id=\"T_d231a_row4_col5\" class=\"data row4 col5\" >0.251</td>\n",
              "      <td id=\"T_d231a_row4_col6\" class=\"data row4 col6\" >0.472</td>\n",
              "      <td id=\"T_d231a_row4_col7\" class=\"data row4 col7\" >4.696</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_d231a_level0_row5\" class=\"row_heading level0 row5\" >lightgbm</th>\n",
              "      <td id=\"T_d231a_row5_col0\" class=\"data row5 col0\" >Light Gradient Boosting Machine</td>\n",
              "      <td id=\"T_d231a_row5_col1\" class=\"data row5 col1\" >0.590</td>\n",
              "      <td id=\"T_d231a_row5_col2\" class=\"data row5 col2\" >0.616</td>\n",
              "      <td id=\"T_d231a_row5_col3\" class=\"data row5 col3\" >0.785</td>\n",
              "      <td id=\"T_d231a_row5_col4\" class=\"data row5 col4\" >0.739</td>\n",
              "      <td id=\"T_d231a_row5_col5\" class=\"data row5 col5\" >0.265</td>\n",
              "      <td id=\"T_d231a_row5_col6\" class=\"data row5 col6\" >0.526</td>\n",
              "      <td id=\"T_d231a_row5_col7\" class=\"data row5 col7\" >0.696</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_d231a_level0_row6\" class=\"row_heading level0 row6\" >dt</th>\n",
              "      <td id=\"T_d231a_row6_col0\" class=\"data row6 col0\" >Decision Tree Regressor</td>\n",
              "      <td id=\"T_d231a_row6_col1\" class=\"data row6 col1\" >0.614</td>\n",
              "      <td id=\"T_d231a_row6_col2\" class=\"data row6 col2\" >0.842</td>\n",
              "      <td id=\"T_d231a_row6_col3\" class=\"data row6 col3\" >0.918</td>\n",
              "      <td id=\"T_d231a_row6_col4\" class=\"data row6 col4\" >0.644</td>\n",
              "      <td id=\"T_d231a_row6_col5\" class=\"data row6 col5\" >0.302</td>\n",
              "      <td id=\"T_d231a_row6_col6\" class=\"data row6 col6\" >0.501</td>\n",
              "      <td id=\"T_d231a_row6_col7\" class=\"data row6 col7\" >0.678</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_d231a_level0_row7\" class=\"row_heading level0 row7\" >gbr</th>\n",
              "      <td id=\"T_d231a_row7_col0\" class=\"data row7 col0\" >Gradient Boosting Regressor</td>\n",
              "      <td id=\"T_d231a_row7_col1\" class=\"data row7 col1\" >0.768</td>\n",
              "      <td id=\"T_d231a_row7_col2\" class=\"data row7 col2\" >1.045</td>\n",
              "      <td id=\"T_d231a_row7_col3\" class=\"data row7 col3\" >1.022</td>\n",
              "      <td id=\"T_d231a_row7_col4\" class=\"data row7 col4\" >0.558</td>\n",
              "      <td id=\"T_d231a_row7_col5\" class=\"data row7 col5\" >0.329</td>\n",
              "      <td id=\"T_d231a_row7_col6\" class=\"data row7 col6\" >0.686</td>\n",
              "      <td id=\"T_d231a_row7_col7\" class=\"data row7 col7\" >6.158</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_d231a_level0_row8\" class=\"row_heading level0 row8\" >huber</th>\n",
              "      <td id=\"T_d231a_row8_col0\" class=\"data row8 col0\" >Huber Regressor</td>\n",
              "      <td id=\"T_d231a_row8_col1\" class=\"data row8 col1\" >0.993</td>\n",
              "      <td id=\"T_d231a_row8_col2\" class=\"data row8 col2\" >2.011</td>\n",
              "      <td id=\"T_d231a_row8_col3\" class=\"data row8 col3\" >1.418</td>\n",
              "      <td id=\"T_d231a_row8_col4\" class=\"data row8 col4\" >0.150</td>\n",
              "      <td id=\"T_d231a_row8_col5\" class=\"data row8 col5\" >0.411</td>\n",
              "      <td id=\"T_d231a_row8_col6\" class=\"data row8 col6\" >0.812</td>\n",
              "      <td id=\"T_d231a_row8_col7\" class=\"data row8 col7\" >0.848</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_d231a_level0_row9\" class=\"row_heading level0 row9\" >br</th>\n",
              "      <td id=\"T_d231a_row9_col0\" class=\"data row9 col0\" >Bayesian Ridge</td>\n",
              "      <td id=\"T_d231a_row9_col1\" class=\"data row9 col1\" >1.028</td>\n",
              "      <td id=\"T_d231a_row9_col2\" class=\"data row9 col2\" >1.924</td>\n",
              "      <td id=\"T_d231a_row9_col3\" class=\"data row9 col3\" >1.387</td>\n",
              "      <td id=\"T_d231a_row9_col4\" class=\"data row9 col4\" >0.186</td>\n",
              "      <td id=\"T_d231a_row9_col5\" class=\"data row9 col5\" >0.423</td>\n",
              "      <td id=\"T_d231a_row9_col6\" class=\"data row9 col6\" >0.942</td>\n",
              "      <td id=\"T_d231a_row9_col7\" class=\"data row9 col7\" >0.168</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_d231a_level0_row10\" class=\"row_heading level0 row10\" >lr</th>\n",
              "      <td id=\"T_d231a_row10_col0\" class=\"data row10 col0\" >Linear Regression</td>\n",
              "      <td id=\"T_d231a_row10_col1\" class=\"data row10 col1\" >1.028</td>\n",
              "      <td id=\"T_d231a_row10_col2\" class=\"data row10 col2\" >1.924</td>\n",
              "      <td id=\"T_d231a_row10_col3\" class=\"data row10 col3\" >1.387</td>\n",
              "      <td id=\"T_d231a_row10_col4\" class=\"data row10 col4\" >0.186</td>\n",
              "      <td id=\"T_d231a_row10_col5\" class=\"data row10 col5\" >0.423</td>\n",
              "      <td id=\"T_d231a_row10_col6\" class=\"data row10 col6\" >0.941</td>\n",
              "      <td id=\"T_d231a_row10_col7\" class=\"data row10 col7\" >0.182</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_d231a_level0_row11\" class=\"row_heading level0 row11\" >ridge</th>\n",
              "      <td id=\"T_d231a_row11_col0\" class=\"data row11 col0\" >Ridge Regression</td>\n",
              "      <td id=\"T_d231a_row11_col1\" class=\"data row11 col1\" >1.028</td>\n",
              "      <td id=\"T_d231a_row11_col2\" class=\"data row11 col2\" >1.928</td>\n",
              "      <td id=\"T_d231a_row11_col3\" class=\"data row11 col3\" >1.388</td>\n",
              "      <td id=\"T_d231a_row11_col4\" class=\"data row11 col4\" >0.185</td>\n",
              "      <td id=\"T_d231a_row11_col5\" class=\"data row11 col5\" >0.422</td>\n",
              "      <td id=\"T_d231a_row11_col6\" class=\"data row11 col6\" >0.942</td>\n",
              "      <td id=\"T_d231a_row11_col7\" class=\"data row11 col7\" >0.174</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_d231a_level0_row12\" class=\"row_heading level0 row12\" >omp</th>\n",
              "      <td id=\"T_d231a_row12_col0\" class=\"data row12 col0\" >Orthogonal Matching Pursuit</td>\n",
              "      <td id=\"T_d231a_row12_col1\" class=\"data row12 col1\" >1.077</td>\n",
              "      <td id=\"T_d231a_row12_col2\" class=\"data row12 col2\" >2.144</td>\n",
              "      <td id=\"T_d231a_row12_col3\" class=\"data row12 col3\" >1.464</td>\n",
              "      <td id=\"T_d231a_row12_col4\" class=\"data row12 col4\" >0.094</td>\n",
              "      <td id=\"T_d231a_row12_col5\" class=\"data row12 col5\" >0.440</td>\n",
              "      <td id=\"T_d231a_row12_col6\" class=\"data row12 col6\" >1.000</td>\n",
              "      <td id=\"T_d231a_row12_col7\" class=\"data row12 col7\" >0.178</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_d231a_level0_row13\" class=\"row_heading level0 row13\" >lasso</th>\n",
              "      <td id=\"T_d231a_row13_col0\" class=\"data row13 col0\" >Lasso Regression</td>\n",
              "      <td id=\"T_d231a_row13_col1\" class=\"data row13 col1\" >1.140</td>\n",
              "      <td id=\"T_d231a_row13_col2\" class=\"data row13 col2\" >2.366</td>\n",
              "      <td id=\"T_d231a_row13_col3\" class=\"data row13 col3\" >1.538</td>\n",
              "      <td id=\"T_d231a_row13_col4\" class=\"data row13 col4\" >-0.000</td>\n",
              "      <td id=\"T_d231a_row13_col5\" class=\"data row13 col5\" >0.466</td>\n",
              "      <td id=\"T_d231a_row13_col6\" class=\"data row13 col6\" >1.097</td>\n",
              "      <td id=\"T_d231a_row13_col7\" class=\"data row13 col7\" >0.182</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_d231a_level0_row14\" class=\"row_heading level0 row14\" >en</th>\n",
              "      <td id=\"T_d231a_row14_col0\" class=\"data row14 col0\" >Elastic Net</td>\n",
              "      <td id=\"T_d231a_row14_col1\" class=\"data row14 col1\" >1.140</td>\n",
              "      <td id=\"T_d231a_row14_col2\" class=\"data row14 col2\" >2.366</td>\n",
              "      <td id=\"T_d231a_row14_col3\" class=\"data row14 col3\" >1.538</td>\n",
              "      <td id=\"T_d231a_row14_col4\" class=\"data row14 col4\" >-0.000</td>\n",
              "      <td id=\"T_d231a_row14_col5\" class=\"data row14 col5\" >0.466</td>\n",
              "      <td id=\"T_d231a_row14_col6\" class=\"data row14 col6\" >1.097</td>\n",
              "      <td id=\"T_d231a_row14_col7\" class=\"data row14 col7\" >0.180</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_d231a_level0_row15\" class=\"row_heading level0 row15\" >llar</th>\n",
              "      <td id=\"T_d231a_row15_col0\" class=\"data row15 col0\" >Lasso Least Angle Regression</td>\n",
              "      <td id=\"T_d231a_row15_col1\" class=\"data row15 col1\" >1.140</td>\n",
              "      <td id=\"T_d231a_row15_col2\" class=\"data row15 col2\" >2.366</td>\n",
              "      <td id=\"T_d231a_row15_col3\" class=\"data row15 col3\" >1.538</td>\n",
              "      <td id=\"T_d231a_row15_col4\" class=\"data row15 col4\" >-0.000</td>\n",
              "      <td id=\"T_d231a_row15_col5\" class=\"data row15 col5\" >0.466</td>\n",
              "      <td id=\"T_d231a_row15_col6\" class=\"data row15 col6\" >1.097</td>\n",
              "      <td id=\"T_d231a_row15_col7\" class=\"data row15 col7\" >0.176</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_d231a_level0_row16\" class=\"row_heading level0 row16\" >dummy</th>\n",
              "      <td id=\"T_d231a_row16_col0\" class=\"data row16 col0\" >Dummy Regressor</td>\n",
              "      <td id=\"T_d231a_row16_col1\" class=\"data row16 col1\" >1.140</td>\n",
              "      <td id=\"T_d231a_row16_col2\" class=\"data row16 col2\" >2.366</td>\n",
              "      <td id=\"T_d231a_row16_col3\" class=\"data row16 col3\" >1.538</td>\n",
              "      <td id=\"T_d231a_row16_col4\" class=\"data row16 col4\" >-0.000</td>\n",
              "      <td id=\"T_d231a_row16_col5\" class=\"data row16 col5\" >0.466</td>\n",
              "      <td id=\"T_d231a_row16_col6\" class=\"data row16 col6\" >1.097</td>\n",
              "      <td id=\"T_d231a_row16_col7\" class=\"data row16 col7\" >0.180</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_d231a_level0_row17\" class=\"row_heading level0 row17\" >ada</th>\n",
              "      <td id=\"T_d231a_row17_col0\" class=\"data row17 col0\" >AdaBoost Regressor</td>\n",
              "      <td id=\"T_d231a_row17_col1\" class=\"data row17 col1\" >1.163</td>\n",
              "      <td id=\"T_d231a_row17_col2\" class=\"data row17 col2\" >1.864</td>\n",
              "      <td id=\"T_d231a_row17_col3\" class=\"data row17 col3\" >1.364</td>\n",
              "      <td id=\"T_d231a_row17_col4\" class=\"data row17 col4\" >0.209</td>\n",
              "      <td id=\"T_d231a_row17_col5\" class=\"data row17 col5\" >0.483</td>\n",
              "      <td id=\"T_d231a_row17_col6\" class=\"data row17 col6\" >1.365</td>\n",
              "      <td id=\"T_d231a_row17_col7\" class=\"data row17 col7\" >2.252</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_d231a_level0_row18\" class=\"row_heading level0 row18\" >lar</th>\n",
              "      <td id=\"T_d231a_row18_col0\" class=\"data row18 col0\" >Least Angle Regression</td>\n",
              "      <td id=\"T_d231a_row18_col1\" class=\"data row18 col1\" >1.575</td>\n",
              "      <td id=\"T_d231a_row18_col2\" class=\"data row18 col2\" >4.312</td>\n",
              "      <td id=\"T_d231a_row18_col3\" class=\"data row18 col3\" >2.076</td>\n",
              "      <td id=\"T_d231a_row18_col4\" class=\"data row18 col4\" >-0.825</td>\n",
              "      <td id=\"T_d231a_row18_col5\" class=\"data row18 col5\" >0.575</td>\n",
              "      <td id=\"T_d231a_row18_col6\" class=\"data row18 col6\" >1.434</td>\n",
              "      <td id=\"T_d231a_row18_col7\" class=\"data row18 col7\" >0.158</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_d231a_level0_row19\" class=\"row_heading level0 row19\" >par</th>\n",
              "      <td id=\"T_d231a_row19_col0\" class=\"data row19 col0\" >Passive Aggressive Regressor</td>\n",
              "      <td id=\"T_d231a_row19_col1\" class=\"data row19 col1\" >1.995</td>\n",
              "      <td id=\"T_d231a_row19_col2\" class=\"data row19 col2\" >6.282</td>\n",
              "      <td id=\"T_d231a_row19_col3\" class=\"data row19 col3\" >2.449</td>\n",
              "      <td id=\"T_d231a_row19_col4\" class=\"data row19 col4\" >-1.655</td>\n",
              "      <td id=\"T_d231a_row19_col5\" class=\"data row19 col5\" >0.645</td>\n",
              "      <td id=\"T_d231a_row19_col6\" class=\"data row19 col6\" >1.870</td>\n",
              "      <td id=\"T_d231a_row19_col7\" class=\"data row19 col7\" >0.320</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Processing:   0%|          | 0/89 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "3ca1056db21d4942b85d9e13db6d7d48"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"
                }
              }
            }
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[ExtraTreesRegressor(n_jobs=-1, random_state=42),\n",
              " RandomForestRegressor(n_jobs=-1, random_state=42),\n",
              " KNeighborsRegressor(n_jobs=-1),\n",
              " <catboost.core.CatBoostRegressor at 0x7e5bc5902b00>,\n",
              " XGBRegressor(base_score=None, booster='gbtree', callbacks=None,\n",
              "              colsample_bylevel=None, colsample_bynode=None,\n",
              "              colsample_bytree=None, early_stopping_rounds=None,\n",
              "              enable_categorical=False, eval_metric=None, feature_types=None,\n",
              "              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,\n",
              "              interaction_constraints=None, learning_rate=None, max_bin=None,\n",
              "              max_cat_threshold=None, max_cat_to_onehot=None,\n",
              "              max_delta_step=None, max_depth=None, max_leaves=None,\n",
              "              min_child_weight=None, missing=nan, monotone_constraints=None,\n",
              "              n_estimators=100, n_jobs=-1, num_parallel_tree=None,\n",
              "              predictor=None, random_state=42, ...)]"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ],
      "source": [
        "top5_models = compare_models(fold = 5, round = 3, sort = 'MAE', n_select = 5)\n",
        "top5_models"
      ],
      "id": "bb4f582a"
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 896
        },
        "id": "59ac8b18",
        "outputId": "c24fab36-ca0e-4495-9a3d-8d1b8ba3a603"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                       Name  \\\n",
              "ID                                            \n",
              "lr                        Linear Regression   \n",
              "lasso                      Lasso Regression   \n",
              "ridge                      Ridge Regression   \n",
              "en                              Elastic Net   \n",
              "lar                  Least Angle Regression   \n",
              "llar           Lasso Least Angle Regression   \n",
              "omp             Orthogonal Matching Pursuit   \n",
              "br                           Bayesian Ridge   \n",
              "ard       Automatic Relevance Determination   \n",
              "par            Passive Aggressive Regressor   \n",
              "ransac              Random Sample Consensus   \n",
              "tr                       TheilSen Regressor   \n",
              "huber                       Huber Regressor   \n",
              "kr                             Kernel Ridge   \n",
              "svm               Support Vector Regression   \n",
              "knn                   K Neighbors Regressor   \n",
              "dt                  Decision Tree Regressor   \n",
              "rf                  Random Forest Regressor   \n",
              "et                    Extra Trees Regressor   \n",
              "ada                      AdaBoost Regressor   \n",
              "gbr             Gradient Boosting Regressor   \n",
              "mlp                           MLP Regressor   \n",
              "xgboost           Extreme Gradient Boosting   \n",
              "lightgbm    Light Gradient Boosting Machine   \n",
              "catboost                 CatBoost Regressor   \n",
              "dummy                       Dummy Regressor   \n",
              "\n",
              "                                                  Reference  Turbo  \n",
              "ID                                                                  \n",
              "lr              sklearn.linear_model._base.LinearRegression   True  \n",
              "lasso        sklearn.linear_model._coordinate_descent.Lasso   True  \n",
              "ridge                     sklearn.linear_model._ridge.Ridge   True  \n",
              "en        sklearn.linear_model._coordinate_descent.Elast...   True  \n",
              "lar                  sklearn.linear_model._least_angle.Lars   True  \n",
              "llar            sklearn.linear_model._least_angle.LassoLars   True  \n",
              "omp       sklearn.linear_model._omp.OrthogonalMatchingPu...   True  \n",
              "br                sklearn.linear_model._bayes.BayesianRidge   True  \n",
              "ard               sklearn.linear_model._bayes.ARDRegression  False  \n",
              "par       sklearn.linear_model._passive_aggressive.Passi...   True  \n",
              "ransac         sklearn.linear_model._ransac.RANSACRegressor  False  \n",
              "tr        sklearn.linear_model._theil_sen.TheilSenRegressor  False  \n",
              "huber            sklearn.linear_model._huber.HuberRegressor   True  \n",
              "kr                         sklearn.kernel_ridge.KernelRidge  False  \n",
              "svm                                sklearn.svm._classes.SVR  False  \n",
              "knn       sklearn.neighbors._regression.KNeighborsRegressor   True  \n",
              "dt              sklearn.tree._classes.DecisionTreeRegressor   True  \n",
              "rf           sklearn.ensemble._forest.RandomForestRegressor   True  \n",
              "et             sklearn.ensemble._forest.ExtraTreesRegressor   True  \n",
              "ada       sklearn.ensemble._weight_boosting.AdaBoostRegr...   True  \n",
              "gbr          sklearn.ensemble._gb.GradientBoostingRegressor   True  \n",
              "mlp       sklearn.neural_network._multilayer_perceptron....  False  \n",
              "xgboost                        xgboost.sklearn.XGBRegressor   True  \n",
              "lightgbm                     lightgbm.sklearn.LGBMRegressor   True  \n",
              "catboost                    catboost.core.CatBoostRegressor   True  \n",
              "dummy                          sklearn.dummy.DummyRegressor   True  "
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-6150d94a-c788-4bc3-a341-7fe8d445a21e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Name</th>\n",
              "      <th>Reference</th>\n",
              "      <th>Turbo</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ID</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>lr</th>\n",
              "      <td>Linear Regression</td>\n",
              "      <td>sklearn.linear_model._base.LinearRegression</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>lasso</th>\n",
              "      <td>Lasso Regression</td>\n",
              "      <td>sklearn.linear_model._coordinate_descent.Lasso</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ridge</th>\n",
              "      <td>Ridge Regression</td>\n",
              "      <td>sklearn.linear_model._ridge.Ridge</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>en</th>\n",
              "      <td>Elastic Net</td>\n",
              "      <td>sklearn.linear_model._coordinate_descent.Elast...</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>lar</th>\n",
              "      <td>Least Angle Regression</td>\n",
              "      <td>sklearn.linear_model._least_angle.Lars</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>llar</th>\n",
              "      <td>Lasso Least Angle Regression</td>\n",
              "      <td>sklearn.linear_model._least_angle.LassoLars</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>omp</th>\n",
              "      <td>Orthogonal Matching Pursuit</td>\n",
              "      <td>sklearn.linear_model._omp.OrthogonalMatchingPu...</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>br</th>\n",
              "      <td>Bayesian Ridge</td>\n",
              "      <td>sklearn.linear_model._bayes.BayesianRidge</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ard</th>\n",
              "      <td>Automatic Relevance Determination</td>\n",
              "      <td>sklearn.linear_model._bayes.ARDRegression</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>par</th>\n",
              "      <td>Passive Aggressive Regressor</td>\n",
              "      <td>sklearn.linear_model._passive_aggressive.Passi...</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ransac</th>\n",
              "      <td>Random Sample Consensus</td>\n",
              "      <td>sklearn.linear_model._ransac.RANSACRegressor</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>tr</th>\n",
              "      <td>TheilSen Regressor</td>\n",
              "      <td>sklearn.linear_model._theil_sen.TheilSenRegressor</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>huber</th>\n",
              "      <td>Huber Regressor</td>\n",
              "      <td>sklearn.linear_model._huber.HuberRegressor</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>kr</th>\n",
              "      <td>Kernel Ridge</td>\n",
              "      <td>sklearn.kernel_ridge.KernelRidge</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>svm</th>\n",
              "      <td>Support Vector Regression</td>\n",
              "      <td>sklearn.svm._classes.SVR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>knn</th>\n",
              "      <td>K Neighbors Regressor</td>\n",
              "      <td>sklearn.neighbors._regression.KNeighborsRegressor</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>dt</th>\n",
              "      <td>Decision Tree Regressor</td>\n",
              "      <td>sklearn.tree._classes.DecisionTreeRegressor</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>rf</th>\n",
              "      <td>Random Forest Regressor</td>\n",
              "      <td>sklearn.ensemble._forest.RandomForestRegressor</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>et</th>\n",
              "      <td>Extra Trees Regressor</td>\n",
              "      <td>sklearn.ensemble._forest.ExtraTreesRegressor</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ada</th>\n",
              "      <td>AdaBoost Regressor</td>\n",
              "      <td>sklearn.ensemble._weight_boosting.AdaBoostRegr...</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>gbr</th>\n",
              "      <td>Gradient Boosting Regressor</td>\n",
              "      <td>sklearn.ensemble._gb.GradientBoostingRegressor</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mlp</th>\n",
              "      <td>MLP Regressor</td>\n",
              "      <td>sklearn.neural_network._multilayer_perceptron....</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>xgboost</th>\n",
              "      <td>Extreme Gradient Boosting</td>\n",
              "      <td>xgboost.sklearn.XGBRegressor</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>lightgbm</th>\n",
              "      <td>Light Gradient Boosting Machine</td>\n",
              "      <td>lightgbm.sklearn.LGBMRegressor</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>catboost</th>\n",
              "      <td>CatBoost Regressor</td>\n",
              "      <td>catboost.core.CatBoostRegressor</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>dummy</th>\n",
              "      <td>Dummy Regressor</td>\n",
              "      <td>sklearn.dummy.DummyRegressor</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6150d94a-c788-4bc3-a341-7fe8d445a21e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-c783db97-9ce8-4a17-b44d-05fee1695198\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c783db97-9ce8-4a17-b44d-05fee1695198')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-c783db97-9ce8-4a17-b44d-05fee1695198 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6150d94a-c788-4bc3-a341-7fe8d445a21e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6150d94a-c788-4bc3-a341-7fe8d445a21e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ],
      "source": [
        "total_models = []\n",
        "models()"
      ],
      "id": "59ac8b18"
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 457,
          "referenced_widgets": [
            "ee4e4aa5b19549c786ffaa7f8178be8d",
            "06b47e9d1aa04a1ea5b802f8b5b12c0e",
            "c687cd7cacd14e8ab2bbfdd4d5832c0f",
            "606703913af94fe681bafafb4de9196c",
            "56acb2fcd92e4a4bb26acafa9da96b8a",
            "cb2d3c96b8ed432e96900b0318d15811",
            "7d72ee90b77c4c018a53523cf160dd28",
            "137f665c3c834fe88bed107d682b0b75",
            "62729b9c7ebb48beb634305adef7b3ac",
            "c2ed24be46f54a1483e643eb4eb93925",
            "2f66aa343d0148eb95abb1faec14b509"
          ]
        },
        "id": "f1c6827d",
        "outputId": "744acc36-292b-42eb-d0e9-eae48ece652c"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7e5b9e235480>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_a4fbc_row10_col0, #T_a4fbc_row10_col1, #T_a4fbc_row10_col2, #T_a4fbc_row10_col3, #T_a4fbc_row10_col4, #T_a4fbc_row10_col5 {\n",
              "  background: yellow;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_a4fbc\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_a4fbc_level0_col0\" class=\"col_heading level0 col0\" >MAE</th>\n",
              "      <th id=\"T_a4fbc_level0_col1\" class=\"col_heading level0 col1\" >MSE</th>\n",
              "      <th id=\"T_a4fbc_level0_col2\" class=\"col_heading level0 col2\" >RMSE</th>\n",
              "      <th id=\"T_a4fbc_level0_col3\" class=\"col_heading level0 col3\" >R2</th>\n",
              "      <th id=\"T_a4fbc_level0_col4\" class=\"col_heading level0 col4\" >RMSLE</th>\n",
              "      <th id=\"T_a4fbc_level0_col5\" class=\"col_heading level0 col5\" >MAPE</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th class=\"index_name level0\" >Fold</th>\n",
              "      <th class=\"blank col0\" >&nbsp;</th>\n",
              "      <th class=\"blank col1\" >&nbsp;</th>\n",
              "      <th class=\"blank col2\" >&nbsp;</th>\n",
              "      <th class=\"blank col3\" >&nbsp;</th>\n",
              "      <th class=\"blank col4\" >&nbsp;</th>\n",
              "      <th class=\"blank col5\" >&nbsp;</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_a4fbc_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_a4fbc_row0_col0\" class=\"data row0 col0\" >0.4088</td>\n",
              "      <td id=\"T_a4fbc_row0_col1\" class=\"data row0 col1\" >0.3095</td>\n",
              "      <td id=\"T_a4fbc_row0_col2\" class=\"data row0 col2\" >0.5563</td>\n",
              "      <td id=\"T_a4fbc_row0_col3\" class=\"data row0 col3\" >0.8628</td>\n",
              "      <td id=\"T_a4fbc_row0_col4\" class=\"data row0 col4\" >0.1984</td>\n",
              "      <td id=\"T_a4fbc_row0_col5\" class=\"data row0 col5\" >0.3699</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_a4fbc_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_a4fbc_row1_col0\" class=\"data row1 col0\" >0.3937</td>\n",
              "      <td id=\"T_a4fbc_row1_col1\" class=\"data row1 col1\" >0.3011</td>\n",
              "      <td id=\"T_a4fbc_row1_col2\" class=\"data row1 col2\" >0.5487</td>\n",
              "      <td id=\"T_a4fbc_row1_col3\" class=\"data row1 col3\" >0.8726</td>\n",
              "      <td id=\"T_a4fbc_row1_col4\" class=\"data row1 col4\" >0.1892</td>\n",
              "      <td id=\"T_a4fbc_row1_col5\" class=\"data row1 col5\" >0.3495</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_a4fbc_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_a4fbc_row2_col0\" class=\"data row2 col0\" >0.4043</td>\n",
              "      <td id=\"T_a4fbc_row2_col1\" class=\"data row2 col1\" >0.3137</td>\n",
              "      <td id=\"T_a4fbc_row2_col2\" class=\"data row2 col2\" >0.5601</td>\n",
              "      <td id=\"T_a4fbc_row2_col3\" class=\"data row2 col3\" >0.8657</td>\n",
              "      <td id=\"T_a4fbc_row2_col4\" class=\"data row2 col4\" >0.1925</td>\n",
              "      <td id=\"T_a4fbc_row2_col5\" class=\"data row2 col5\" >0.3481</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_a4fbc_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_a4fbc_row3_col0\" class=\"data row3 col0\" >0.4003</td>\n",
              "      <td id=\"T_a4fbc_row3_col1\" class=\"data row3 col1\" >0.2980</td>\n",
              "      <td id=\"T_a4fbc_row3_col2\" class=\"data row3 col2\" >0.5459</td>\n",
              "      <td id=\"T_a4fbc_row3_col3\" class=\"data row3 col3\" >0.8641</td>\n",
              "      <td id=\"T_a4fbc_row3_col4\" class=\"data row3 col4\" >0.1899</td>\n",
              "      <td id=\"T_a4fbc_row3_col5\" class=\"data row3 col5\" >0.3453</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_a4fbc_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_a4fbc_row4_col0\" class=\"data row4 col0\" >0.4081</td>\n",
              "      <td id=\"T_a4fbc_row4_col1\" class=\"data row4 col1\" >0.3135</td>\n",
              "      <td id=\"T_a4fbc_row4_col2\" class=\"data row4 col2\" >0.5599</td>\n",
              "      <td id=\"T_a4fbc_row4_col3\" class=\"data row4 col3\" >0.8684</td>\n",
              "      <td id=\"T_a4fbc_row4_col4\" class=\"data row4 col4\" >0.1980</td>\n",
              "      <td id=\"T_a4fbc_row4_col5\" class=\"data row4 col5\" >0.3693</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_a4fbc_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_a4fbc_row5_col0\" class=\"data row5 col0\" >0.3897</td>\n",
              "      <td id=\"T_a4fbc_row5_col1\" class=\"data row5 col1\" >0.2828</td>\n",
              "      <td id=\"T_a4fbc_row5_col2\" class=\"data row5 col2\" >0.5317</td>\n",
              "      <td id=\"T_a4fbc_row5_col3\" class=\"data row5 col3\" >0.8800</td>\n",
              "      <td id=\"T_a4fbc_row5_col4\" class=\"data row5 col4\" >0.1852</td>\n",
              "      <td id=\"T_a4fbc_row5_col5\" class=\"data row5 col5\" >0.3353</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_a4fbc_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_a4fbc_row6_col0\" class=\"data row6 col0\" >0.3943</td>\n",
              "      <td id=\"T_a4fbc_row6_col1\" class=\"data row6 col1\" >0.2983</td>\n",
              "      <td id=\"T_a4fbc_row6_col2\" class=\"data row6 col2\" >0.5462</td>\n",
              "      <td id=\"T_a4fbc_row6_col3\" class=\"data row6 col3\" >0.8691</td>\n",
              "      <td id=\"T_a4fbc_row6_col4\" class=\"data row6 col4\" >0.1881</td>\n",
              "      <td id=\"T_a4fbc_row6_col5\" class=\"data row6 col5\" >0.3422</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_a4fbc_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_a4fbc_row7_col0\" class=\"data row7 col0\" >0.4094</td>\n",
              "      <td id=\"T_a4fbc_row7_col1\" class=\"data row7 col1\" >0.3232</td>\n",
              "      <td id=\"T_a4fbc_row7_col2\" class=\"data row7 col2\" >0.5685</td>\n",
              "      <td id=\"T_a4fbc_row7_col3\" class=\"data row7 col3\" >0.8674</td>\n",
              "      <td id=\"T_a4fbc_row7_col4\" class=\"data row7 col4\" >0.1941</td>\n",
              "      <td id=\"T_a4fbc_row7_col5\" class=\"data row7 col5\" >0.3652</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_a4fbc_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "      <td id=\"T_a4fbc_row8_col0\" class=\"data row8 col0\" >0.4170</td>\n",
              "      <td id=\"T_a4fbc_row8_col1\" class=\"data row8 col1\" >0.3357</td>\n",
              "      <td id=\"T_a4fbc_row8_col2\" class=\"data row8 col2\" >0.5794</td>\n",
              "      <td id=\"T_a4fbc_row8_col3\" class=\"data row8 col3\" >0.8695</td>\n",
              "      <td id=\"T_a4fbc_row8_col4\" class=\"data row8 col4\" >0.1924</td>\n",
              "      <td id=\"T_a4fbc_row8_col5\" class=\"data row8 col5\" >0.3474</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_a4fbc_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "      <td id=\"T_a4fbc_row9_col0\" class=\"data row9 col0\" >0.4048</td>\n",
              "      <td id=\"T_a4fbc_row9_col1\" class=\"data row9 col1\" >0.3108</td>\n",
              "      <td id=\"T_a4fbc_row9_col2\" class=\"data row9 col2\" >0.5575</td>\n",
              "      <td id=\"T_a4fbc_row9_col3\" class=\"data row9 col3\" >0.8743</td>\n",
              "      <td id=\"T_a4fbc_row9_col4\" class=\"data row9 col4\" >0.1928</td>\n",
              "      <td id=\"T_a4fbc_row9_col5\" class=\"data row9 col5\" >0.3583</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_a4fbc_level0_row10\" class=\"row_heading level0 row10\" >Mean</th>\n",
              "      <td id=\"T_a4fbc_row10_col0\" class=\"data row10 col0\" >0.4030</td>\n",
              "      <td id=\"T_a4fbc_row10_col1\" class=\"data row10 col1\" >0.3087</td>\n",
              "      <td id=\"T_a4fbc_row10_col2\" class=\"data row10 col2\" >0.5554</td>\n",
              "      <td id=\"T_a4fbc_row10_col3\" class=\"data row10 col3\" >0.8694</td>\n",
              "      <td id=\"T_a4fbc_row10_col4\" class=\"data row10 col4\" >0.1921</td>\n",
              "      <td id=\"T_a4fbc_row10_col5\" class=\"data row10 col5\" >0.3531</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_a4fbc_level0_row11\" class=\"row_heading level0 row11\" >Std</th>\n",
              "      <td id=\"T_a4fbc_row11_col0\" class=\"data row11 col0\" >0.0080</td>\n",
              "      <td id=\"T_a4fbc_row11_col1\" class=\"data row11 col1\" >0.0140</td>\n",
              "      <td id=\"T_a4fbc_row11_col2\" class=\"data row11 col2\" >0.0126</td>\n",
              "      <td id=\"T_a4fbc_row11_col3\" class=\"data row11 col3\" >0.0049</td>\n",
              "      <td id=\"T_a4fbc_row11_col4\" class=\"data row11 col4\" >0.0040</td>\n",
              "      <td id=\"T_a4fbc_row11_col5\" class=\"data row11 col5\" >0.0113</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Processing:   0%|          | 0/4 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "ee4e4aa5b19549c786ffaa7f8178be8d"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"
                }
              }
            }
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        }
      ],
      "source": [
        "et = create_model('et', fold=10)\n",
        "total_models.append(et)"
      ],
      "id": "f1c6827d"
    },
    {
      "cell_type": "code",
      "execution_count": 19,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 457,
          "referenced_widgets": [
            "48e9ab60a3914fd885ba4fa50adf46b5",
            "e6ee5f4694244cd5bdcb6160ed2cf1aa",
            "3b4e1365d7e944e8bfbf388b0ccd17a8",
            "7de4bc05224b446f9008a2a5e1ecd192",
            "3eedacb8bf7f4c4581c0ee32f2c2123d",
            "5b62be90c302466faca151f1133c0f88",
            "6c73c44aeb874814b96d7b5c73d6d4f7",
            "0ff2ad70acf54db2b2f5e5c33760a56c",
            "abac19c66e7941909ebab7bc2d0685ca",
            "45a3e49dfc23406c86decfdd80ffeef9",
            "557364173b884676b043097d2d829c1b"
          ]
        },
        "id": "ada1a4e2",
        "outputId": "56e48697-d4e1-4496-833a-db981cc4d92b"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7e5bc57ba890>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_20101_row10_col0, #T_20101_row10_col1, #T_20101_row10_col2, #T_20101_row10_col3, #T_20101_row10_col4, #T_20101_row10_col5 {\n",
              "  background: yellow;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_20101\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_20101_level0_col0\" class=\"col_heading level0 col0\" >MAE</th>\n",
              "      <th id=\"T_20101_level0_col1\" class=\"col_heading level0 col1\" >MSE</th>\n",
              "      <th id=\"T_20101_level0_col2\" class=\"col_heading level0 col2\" >RMSE</th>\n",
              "      <th id=\"T_20101_level0_col3\" class=\"col_heading level0 col3\" >R2</th>\n",
              "      <th id=\"T_20101_level0_col4\" class=\"col_heading level0 col4\" >RMSLE</th>\n",
              "      <th id=\"T_20101_level0_col5\" class=\"col_heading level0 col5\" >MAPE</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th class=\"index_name level0\" >Fold</th>\n",
              "      <th class=\"blank col0\" >&nbsp;</th>\n",
              "      <th class=\"blank col1\" >&nbsp;</th>\n",
              "      <th class=\"blank col2\" >&nbsp;</th>\n",
              "      <th class=\"blank col3\" >&nbsp;</th>\n",
              "      <th class=\"blank col4\" >&nbsp;</th>\n",
              "      <th class=\"blank col5\" >&nbsp;</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_20101_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_20101_row0_col0\" class=\"data row0 col0\" >0.4572</td>\n",
              "      <td id=\"T_20101_row0_col1\" class=\"data row0 col1\" >0.3856</td>\n",
              "      <td id=\"T_20101_row0_col2\" class=\"data row0 col2\" >0.6209</td>\n",
              "      <td id=\"T_20101_row0_col3\" class=\"data row0 col3\" >0.8290</td>\n",
              "      <td id=\"T_20101_row0_col4\" class=\"data row0 col4\" >0.2201</td>\n",
              "      <td id=\"T_20101_row0_col5\" class=\"data row0 col5\" >0.4265</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_20101_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_20101_row1_col0\" class=\"data row1 col0\" >0.4475</td>\n",
              "      <td id=\"T_20101_row1_col1\" class=\"data row1 col1\" >0.3820</td>\n",
              "      <td id=\"T_20101_row1_col2\" class=\"data row1 col2\" >0.6180</td>\n",
              "      <td id=\"T_20101_row1_col3\" class=\"data row1 col3\" >0.8384</td>\n",
              "      <td id=\"T_20101_row1_col4\" class=\"data row1 col4\" >0.2135</td>\n",
              "      <td id=\"T_20101_row1_col5\" class=\"data row1 col5\" >0.4108</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_20101_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_20101_row2_col0\" class=\"data row2 col0\" >0.4644</td>\n",
              "      <td id=\"T_20101_row2_col1\" class=\"data row2 col1\" >0.4039</td>\n",
              "      <td id=\"T_20101_row2_col2\" class=\"data row2 col2\" >0.6355</td>\n",
              "      <td id=\"T_20101_row2_col3\" class=\"data row2 col3\" >0.8272</td>\n",
              "      <td id=\"T_20101_row2_col4\" class=\"data row2 col4\" >0.2197</td>\n",
              "      <td id=\"T_20101_row2_col5\" class=\"data row2 col5\" >0.4171</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_20101_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_20101_row3_col0\" class=\"data row3 col0\" >0.4476</td>\n",
              "      <td id=\"T_20101_row3_col1\" class=\"data row3 col1\" >0.3809</td>\n",
              "      <td id=\"T_20101_row3_col2\" class=\"data row3 col2\" >0.6172</td>\n",
              "      <td id=\"T_20101_row3_col3\" class=\"data row3 col3\" >0.8263</td>\n",
              "      <td id=\"T_20101_row3_col4\" class=\"data row3 col4\" >0.2158</td>\n",
              "      <td id=\"T_20101_row3_col5\" class=\"data row3 col5\" >0.4116</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_20101_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_20101_row4_col0\" class=\"data row4 col0\" >0.4711</td>\n",
              "      <td id=\"T_20101_row4_col1\" class=\"data row4 col1\" >0.4077</td>\n",
              "      <td id=\"T_20101_row4_col2\" class=\"data row4 col2\" >0.6385</td>\n",
              "      <td id=\"T_20101_row4_col3\" class=\"data row4 col3\" >0.8289</td>\n",
              "      <td id=\"T_20101_row4_col4\" class=\"data row4 col4\" >0.2257</td>\n",
              "      <td id=\"T_20101_row4_col5\" class=\"data row4 col5\" >0.4434</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_20101_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_20101_row5_col0\" class=\"data row5 col0\" >0.4422</td>\n",
              "      <td id=\"T_20101_row5_col1\" class=\"data row5 col1\" >0.3698</td>\n",
              "      <td id=\"T_20101_row5_col2\" class=\"data row5 col2\" >0.6081</td>\n",
              "      <td id=\"T_20101_row5_col3\" class=\"data row5 col3\" >0.8430</td>\n",
              "      <td id=\"T_20101_row5_col4\" class=\"data row5 col4\" >0.2106</td>\n",
              "      <td id=\"T_20101_row5_col5\" class=\"data row5 col5\" >0.3937</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_20101_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_20101_row6_col0\" class=\"data row6 col0\" >0.4496</td>\n",
              "      <td id=\"T_20101_row6_col1\" class=\"data row6 col1\" >0.3919</td>\n",
              "      <td id=\"T_20101_row6_col2\" class=\"data row6 col2\" >0.6261</td>\n",
              "      <td id=\"T_20101_row6_col3\" class=\"data row6 col3\" >0.8280</td>\n",
              "      <td id=\"T_20101_row6_col4\" class=\"data row6 col4\" >0.2141</td>\n",
              "      <td id=\"T_20101_row6_col5\" class=\"data row6 col5\" >0.4048</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_20101_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_20101_row7_col0\" class=\"data row7 col0\" >0.4623</td>\n",
              "      <td id=\"T_20101_row7_col1\" class=\"data row7 col1\" >0.4059</td>\n",
              "      <td id=\"T_20101_row7_col2\" class=\"data row7 col2\" >0.6371</td>\n",
              "      <td id=\"T_20101_row7_col3\" class=\"data row7 col3\" >0.8335</td>\n",
              "      <td id=\"T_20101_row7_col4\" class=\"data row7 col4\" >0.2181</td>\n",
              "      <td id=\"T_20101_row7_col5\" class=\"data row7 col5\" >0.4248</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_20101_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "      <td id=\"T_20101_row8_col0\" class=\"data row8 col0\" >0.4690</td>\n",
              "      <td id=\"T_20101_row8_col1\" class=\"data row8 col1\" >0.4237</td>\n",
              "      <td id=\"T_20101_row8_col2\" class=\"data row8 col2\" >0.6509</td>\n",
              "      <td id=\"T_20101_row8_col3\" class=\"data row8 col3\" >0.8354</td>\n",
              "      <td id=\"T_20101_row8_col4\" class=\"data row8 col4\" >0.2185</td>\n",
              "      <td id=\"T_20101_row8_col5\" class=\"data row8 col5\" >0.4102</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_20101_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "      <td id=\"T_20101_row9_col0\" class=\"data row9 col0\" >0.4623</td>\n",
              "      <td id=\"T_20101_row9_col1\" class=\"data row9 col1\" >0.4113</td>\n",
              "      <td id=\"T_20101_row9_col2\" class=\"data row9 col2\" >0.6413</td>\n",
              "      <td id=\"T_20101_row9_col3\" class=\"data row9 col3\" >0.8337</td>\n",
              "      <td id=\"T_20101_row9_col4\" class=\"data row9 col4\" >0.2230</td>\n",
              "      <td id=\"T_20101_row9_col5\" class=\"data row9 col5\" >0.4332</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_20101_level0_row10\" class=\"row_heading level0 row10\" >Mean</th>\n",
              "      <td id=\"T_20101_row10_col0\" class=\"data row10 col0\" >0.4573</td>\n",
              "      <td id=\"T_20101_row10_col1\" class=\"data row10 col1\" >0.3963</td>\n",
              "      <td id=\"T_20101_row10_col2\" class=\"data row10 col2\" >0.6294</td>\n",
              "      <td id=\"T_20101_row10_col3\" class=\"data row10 col3\" >0.8323</td>\n",
              "      <td id=\"T_20101_row10_col4\" class=\"data row10 col4\" >0.2179</td>\n",
              "      <td id=\"T_20101_row10_col5\" class=\"data row10 col5\" >0.4176</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_20101_level0_row11\" class=\"row_heading level0 row11\" >Std</th>\n",
              "      <td id=\"T_20101_row11_col0\" class=\"data row11 col0\" >0.0095</td>\n",
              "      <td id=\"T_20101_row11_col1\" class=\"data row11 col1\" >0.0159</td>\n",
              "      <td id=\"T_20101_row11_col2\" class=\"data row11 col2\" >0.0126</td>\n",
              "      <td id=\"T_20101_row11_col3\" class=\"data row11 col3\" >0.0052</td>\n",
              "      <td id=\"T_20101_row11_col4\" class=\"data row11 col4\" >0.0043</td>\n",
              "      <td id=\"T_20101_row11_col5\" class=\"data row11 col5\" >0.0138</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Processing:   0%|          | 0/4 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "48e9ab60a3914fd885ba4fa50adf46b5"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"
                }
              }
            }
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        }
      ],
      "source": [
        "rf = create_model('rf', fold = 10)\n",
        "total_models.append(rf)"
      ],
      "id": "ada1a4e2"
    },
    {
      "cell_type": "code",
      "execution_count": 20,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 457,
          "referenced_widgets": [
            "daae3e75e5d34f0a8cd59331da4cafbd",
            "367c1cbc933444e3a5ff3cdf44bc7064",
            "c8bbf123d7344ae8ad16ee40bf40d809",
            "1f6da7d69ba94748b08443ad1d900ca9",
            "390b3dc339c84ad0956424f6ffc7cec8",
            "787dc82eadf54dee8f79ff626fa0e9a0",
            "ee0f195bc565486eba534198c060e2c4",
            "a6b922f2c42648d2b92b7be923281694",
            "cdddb19c53164ee986aa30d7935a8112",
            "8b2250fae7ae425da5b4a1368b005655",
            "48a264c235e04a999bce7f4a9e8d8e29"
          ]
        },
        "id": "050a7800",
        "outputId": "7d00e30c-7577-4a41-db29-4b916d52c35a"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7e5bc57fb850>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_b7a8c_row10_col0, #T_b7a8c_row10_col1, #T_b7a8c_row10_col2, #T_b7a8c_row10_col3, #T_b7a8c_row10_col4, #T_b7a8c_row10_col5 {\n",
              "  background: yellow;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_b7a8c\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_b7a8c_level0_col0\" class=\"col_heading level0 col0\" >MAE</th>\n",
              "      <th id=\"T_b7a8c_level0_col1\" class=\"col_heading level0 col1\" >MSE</th>\n",
              "      <th id=\"T_b7a8c_level0_col2\" class=\"col_heading level0 col2\" >RMSE</th>\n",
              "      <th id=\"T_b7a8c_level0_col3\" class=\"col_heading level0 col3\" >R2</th>\n",
              "      <th id=\"T_b7a8c_level0_col4\" class=\"col_heading level0 col4\" >RMSLE</th>\n",
              "      <th id=\"T_b7a8c_level0_col5\" class=\"col_heading level0 col5\" >MAPE</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th class=\"index_name level0\" >Fold</th>\n",
              "      <th class=\"blank col0\" >&nbsp;</th>\n",
              "      <th class=\"blank col1\" >&nbsp;</th>\n",
              "      <th class=\"blank col2\" >&nbsp;</th>\n",
              "      <th class=\"blank col3\" >&nbsp;</th>\n",
              "      <th class=\"blank col4\" >&nbsp;</th>\n",
              "      <th class=\"blank col5\" >&nbsp;</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_b7a8c_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_b7a8c_row0_col0\" class=\"data row0 col0\" >0.5396</td>\n",
              "      <td id=\"T_b7a8c_row0_col1\" class=\"data row0 col1\" >0.5184</td>\n",
              "      <td id=\"T_b7a8c_row0_col2\" class=\"data row0 col2\" >0.7200</td>\n",
              "      <td id=\"T_b7a8c_row0_col3\" class=\"data row0 col3\" >0.7701</td>\n",
              "      <td id=\"T_b7a8c_row0_col4\" class=\"data row0 col4\" >0.2489</td>\n",
              "      <td id=\"T_b7a8c_row0_col5\" class=\"data row0 col5\" >0.4788</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b7a8c_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_b7a8c_row1_col0\" class=\"data row1 col0\" >0.5334</td>\n",
              "      <td id=\"T_b7a8c_row1_col1\" class=\"data row1 col1\" >0.5087</td>\n",
              "      <td id=\"T_b7a8c_row1_col2\" class=\"data row1 col2\" >0.7132</td>\n",
              "      <td id=\"T_b7a8c_row1_col3\" class=\"data row1 col3\" >0.7847</td>\n",
              "      <td id=\"T_b7a8c_row1_col4\" class=\"data row1 col4\" >0.2438</td>\n",
              "      <td id=\"T_b7a8c_row1_col5\" class=\"data row1 col5\" >0.4652</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b7a8c_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_b7a8c_row2_col0\" class=\"data row2 col0\" >0.5359</td>\n",
              "      <td id=\"T_b7a8c_row2_col1\" class=\"data row2 col1\" >0.5246</td>\n",
              "      <td id=\"T_b7a8c_row2_col2\" class=\"data row2 col2\" >0.7243</td>\n",
              "      <td id=\"T_b7a8c_row2_col3\" class=\"data row2 col3\" >0.7755</td>\n",
              "      <td id=\"T_b7a8c_row2_col4\" class=\"data row2 col4\" >0.2448</td>\n",
              "      <td id=\"T_b7a8c_row2_col5\" class=\"data row2 col5\" >0.4559</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b7a8c_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_b7a8c_row3_col0\" class=\"data row3 col0\" >0.5340</td>\n",
              "      <td id=\"T_b7a8c_row3_col1\" class=\"data row3 col1\" >0.5083</td>\n",
              "      <td id=\"T_b7a8c_row3_col2\" class=\"data row3 col2\" >0.7129</td>\n",
              "      <td id=\"T_b7a8c_row3_col3\" class=\"data row3 col3\" >0.7682</td>\n",
              "      <td id=\"T_b7a8c_row3_col4\" class=\"data row3 col4\" >0.2459</td>\n",
              "      <td id=\"T_b7a8c_row3_col5\" class=\"data row3 col5\" >0.4690</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b7a8c_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_b7a8c_row4_col0\" class=\"data row4 col0\" >0.5477</td>\n",
              "      <td id=\"T_b7a8c_row4_col1\" class=\"data row4 col1\" >0.5425</td>\n",
              "      <td id=\"T_b7a8c_row4_col2\" class=\"data row4 col2\" >0.7366</td>\n",
              "      <td id=\"T_b7a8c_row4_col3\" class=\"data row4 col3\" >0.7723</td>\n",
              "      <td id=\"T_b7a8c_row4_col4\" class=\"data row4 col4\" >0.2476</td>\n",
              "      <td id=\"T_b7a8c_row4_col5\" class=\"data row4 col5\" >0.4738</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b7a8c_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_b7a8c_row5_col0\" class=\"data row5 col0\" >0.5256</td>\n",
              "      <td id=\"T_b7a8c_row5_col1\" class=\"data row5 col1\" >0.4887</td>\n",
              "      <td id=\"T_b7a8c_row5_col2\" class=\"data row5 col2\" >0.6991</td>\n",
              "      <td id=\"T_b7a8c_row5_col3\" class=\"data row5 col3\" >0.7925</td>\n",
              "      <td id=\"T_b7a8c_row5_col4\" class=\"data row5 col4\" >0.2374</td>\n",
              "      <td id=\"T_b7a8c_row5_col5\" class=\"data row5 col5\" >0.4465</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b7a8c_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_b7a8c_row6_col0\" class=\"data row6 col0\" >0.5447</td>\n",
              "      <td id=\"T_b7a8c_row6_col1\" class=\"data row6 col1\" >0.5293</td>\n",
              "      <td id=\"T_b7a8c_row6_col2\" class=\"data row6 col2\" >0.7276</td>\n",
              "      <td id=\"T_b7a8c_row6_col3\" class=\"data row6 col3\" >0.7677</td>\n",
              "      <td id=\"T_b7a8c_row6_col4\" class=\"data row6 col4\" >0.2423</td>\n",
              "      <td id=\"T_b7a8c_row6_col5\" class=\"data row6 col5\" >0.4522</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b7a8c_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_b7a8c_row7_col0\" class=\"data row7 col0\" >0.5471</td>\n",
              "      <td id=\"T_b7a8c_row7_col1\" class=\"data row7 col1\" >0.5294</td>\n",
              "      <td id=\"T_b7a8c_row7_col2\" class=\"data row7 col2\" >0.7276</td>\n",
              "      <td id=\"T_b7a8c_row7_col3\" class=\"data row7 col3\" >0.7828</td>\n",
              "      <td id=\"T_b7a8c_row7_col4\" class=\"data row7 col4\" >0.2478</td>\n",
              "      <td id=\"T_b7a8c_row7_col5\" class=\"data row7 col5\" >0.4839</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b7a8c_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "      <td id=\"T_b7a8c_row8_col0\" class=\"data row8 col0\" >0.5447</td>\n",
              "      <td id=\"T_b7a8c_row8_col1\" class=\"data row8 col1\" >0.5372</td>\n",
              "      <td id=\"T_b7a8c_row8_col2\" class=\"data row8 col2\" >0.7329</td>\n",
              "      <td id=\"T_b7a8c_row8_col3\" class=\"data row8 col3\" >0.7912</td>\n",
              "      <td id=\"T_b7a8c_row8_col4\" class=\"data row8 col4\" >0.2421</td>\n",
              "      <td id=\"T_b7a8c_row8_col5\" class=\"data row8 col5\" >0.4499</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b7a8c_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "      <td id=\"T_b7a8c_row9_col0\" class=\"data row9 col0\" >0.5261</td>\n",
              "      <td id=\"T_b7a8c_row9_col1\" class=\"data row9 col1\" >0.4989</td>\n",
              "      <td id=\"T_b7a8c_row9_col2\" class=\"data row9 col2\" >0.7063</td>\n",
              "      <td id=\"T_b7a8c_row9_col3\" class=\"data row9 col3\" >0.7983</td>\n",
              "      <td id=\"T_b7a8c_row9_col4\" class=\"data row9 col4\" >0.2438</td>\n",
              "      <td id=\"T_b7a8c_row9_col5\" class=\"data row9 col5\" >0.4667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b7a8c_level0_row10\" class=\"row_heading level0 row10\" >Mean</th>\n",
              "      <td id=\"T_b7a8c_row10_col0\" class=\"data row10 col0\" >0.5379</td>\n",
              "      <td id=\"T_b7a8c_row10_col1\" class=\"data row10 col1\" >0.5186</td>\n",
              "      <td id=\"T_b7a8c_row10_col2\" class=\"data row10 col2\" >0.7201</td>\n",
              "      <td id=\"T_b7a8c_row10_col3\" class=\"data row10 col3\" >0.7803</td>\n",
              "      <td id=\"T_b7a8c_row10_col4\" class=\"data row10 col4\" >0.2444</td>\n",
              "      <td id=\"T_b7a8c_row10_col5\" class=\"data row10 col5\" >0.4642</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b7a8c_level0_row11\" class=\"row_heading level0 row11\" >Std</th>\n",
              "      <td id=\"T_b7a8c_row11_col0\" class=\"data row11 col0\" >0.0078</td>\n",
              "      <td id=\"T_b7a8c_row11_col1\" class=\"data row11 col1\" >0.0163</td>\n",
              "      <td id=\"T_b7a8c_row11_col2\" class=\"data row11 col2\" >0.0114</td>\n",
              "      <td id=\"T_b7a8c_row11_col3\" class=\"data row11 col3\" >0.0106</td>\n",
              "      <td id=\"T_b7a8c_row11_col4\" class=\"data row11 col4\" >0.0032</td>\n",
              "      <td id=\"T_b7a8c_row11_col5\" class=\"data row11 col5\" >0.0121</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Processing:   0%|          | 0/4 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "daae3e75e5d34f0a8cd59331da4cafbd"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"
                }
              }
            }
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        }
      ],
      "source": [
        "catboost = create_model('catboost', fold = 10)\n",
        "total_models.append(catboost)"
      ],
      "id": "050a7800"
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 457,
          "referenced_widgets": [
            "3e4f07d042754abfb7aae29d3d6998c7",
            "bde6fb89ac754428a03ac1a33ca13b05",
            "fe81bfa6eda34bcd91caa094a576ad41",
            "200120d41768433c918683f4e374f4f5",
            "03316dd0151d4155a793f7d6eabe5b77",
            "b7c7cb2b4c544667985cdff0dec64234",
            "315f56c5e9da4de2ad47e669370c3ca9",
            "168b14a04007421899e4c00d29dcb7e7",
            "339a654b08bb4c3c9a118beb227f0467",
            "276eed74dde74d20903ff9306e95ef47",
            "bcaa8ef6f4b4420d92dea54f41a2d09f"
          ]
        },
        "id": "2598e710",
        "outputId": "ce9c7609-407f-4920-a49d-b36402587b79"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7e5bc40e9a80>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_2b1af_row10_col0, #T_2b1af_row10_col1, #T_2b1af_row10_col2, #T_2b1af_row10_col3, #T_2b1af_row10_col4, #T_2b1af_row10_col5 {\n",
              "  background: yellow;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_2b1af\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_2b1af_level0_col0\" class=\"col_heading level0 col0\" >MAE</th>\n",
              "      <th id=\"T_2b1af_level0_col1\" class=\"col_heading level0 col1\" >MSE</th>\n",
              "      <th id=\"T_2b1af_level0_col2\" class=\"col_heading level0 col2\" >RMSE</th>\n",
              "      <th id=\"T_2b1af_level0_col3\" class=\"col_heading level0 col3\" >R2</th>\n",
              "      <th id=\"T_2b1af_level0_col4\" class=\"col_heading level0 col4\" >RMSLE</th>\n",
              "      <th id=\"T_2b1af_level0_col5\" class=\"col_heading level0 col5\" >MAPE</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th class=\"index_name level0\" >Fold</th>\n",
              "      <th class=\"blank col0\" >&nbsp;</th>\n",
              "      <th class=\"blank col1\" >&nbsp;</th>\n",
              "      <th class=\"blank col2\" >&nbsp;</th>\n",
              "      <th class=\"blank col3\" >&nbsp;</th>\n",
              "      <th class=\"blank col4\" >&nbsp;</th>\n",
              "      <th class=\"blank col5\" >&nbsp;</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_2b1af_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_2b1af_row0_col0\" class=\"data row0 col0\" >0.5495</td>\n",
              "      <td id=\"T_2b1af_row0_col1\" class=\"data row0 col1\" >0.5421</td>\n",
              "      <td id=\"T_2b1af_row0_col2\" class=\"data row0 col2\" >0.7362</td>\n",
              "      <td id=\"T_2b1af_row0_col3\" class=\"data row0 col3\" >0.7596</td>\n",
              "      <td id=\"T_2b1af_row0_col4\" class=\"data row0 col4\" >0.2546</td>\n",
              "      <td id=\"T_2b1af_row0_col5\" class=\"data row0 col5\" >0.4868</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2b1af_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_2b1af_row1_col0\" class=\"data row1 col0\" >0.5373</td>\n",
              "      <td id=\"T_2b1af_row1_col1\" class=\"data row1 col1\" >0.5388</td>\n",
              "      <td id=\"T_2b1af_row1_col2\" class=\"data row1 col2\" >0.7340</td>\n",
              "      <td id=\"T_2b1af_row1_col3\" class=\"data row1 col3\" >0.7720</td>\n",
              "      <td id=\"T_2b1af_row1_col4\" class=\"data row1 col4\" >0.2474</td>\n",
              "      <td id=\"T_2b1af_row1_col5\" class=\"data row1 col5\" >0.4631</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2b1af_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_2b1af_row2_col0\" class=\"data row2 col0\" >0.5495</td>\n",
              "      <td id=\"T_2b1af_row2_col1\" class=\"data row2 col1\" >0.5480</td>\n",
              "      <td id=\"T_2b1af_row2_col2\" class=\"data row2 col2\" >0.7402</td>\n",
              "      <td id=\"T_2b1af_row2_col3\" class=\"data row2 col3\" >0.7655</td>\n",
              "      <td id=\"T_2b1af_row2_col4\" class=\"data row2 col4\" >0.2524</td>\n",
              "      <td id=\"T_2b1af_row2_col5\" class=\"data row2 col5\" >0.4740</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2b1af_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_2b1af_row3_col0\" class=\"data row3 col0\" >0.5305</td>\n",
              "      <td id=\"T_2b1af_row3_col1\" class=\"data row3 col1\" >0.5166</td>\n",
              "      <td id=\"T_2b1af_row3_col2\" class=\"data row3 col2\" >0.7188</td>\n",
              "      <td id=\"T_2b1af_row3_col3\" class=\"data row3 col3\" >0.7644</td>\n",
              "      <td id=\"T_2b1af_row3_col4\" class=\"data row3 col4\" >0.2466</td>\n",
              "      <td id=\"T_2b1af_row3_col5\" class=\"data row3 col5\" >0.4616</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2b1af_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_2b1af_row4_col0\" class=\"data row4 col0\" >0.5575</td>\n",
              "      <td id=\"T_2b1af_row4_col1\" class=\"data row4 col1\" >0.5535</td>\n",
              "      <td id=\"T_2b1af_row4_col2\" class=\"data row4 col2\" >0.7440</td>\n",
              "      <td id=\"T_2b1af_row4_col3\" class=\"data row4 col3\" >0.7677</td>\n",
              "      <td id=\"T_2b1af_row4_col4\" class=\"data row4 col4\" >0.2544</td>\n",
              "      <td id=\"T_2b1af_row4_col5\" class=\"data row4 col5\" >0.4835</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2b1af_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_2b1af_row5_col0\" class=\"data row5 col0\" >0.5339</td>\n",
              "      <td id=\"T_2b1af_row5_col1\" class=\"data row5 col1\" >0.5063</td>\n",
              "      <td id=\"T_2b1af_row5_col2\" class=\"data row5 col2\" >0.7116</td>\n",
              "      <td id=\"T_2b1af_row5_col3\" class=\"data row5 col3\" >0.7851</td>\n",
              "      <td id=\"T_2b1af_row5_col4\" class=\"data row5 col4\" >0.2411</td>\n",
              "      <td id=\"T_2b1af_row5_col5\" class=\"data row5 col5\" >0.4495</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2b1af_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_2b1af_row6_col0\" class=\"data row6 col0\" >0.5526</td>\n",
              "      <td id=\"T_2b1af_row6_col1\" class=\"data row6 col1\" >0.5568</td>\n",
              "      <td id=\"T_2b1af_row6_col2\" class=\"data row6 col2\" >0.7462</td>\n",
              "      <td id=\"T_2b1af_row6_col3\" class=\"data row6 col3\" >0.7556</td>\n",
              "      <td id=\"T_2b1af_row6_col4\" class=\"data row6 col4\" >0.2525</td>\n",
              "      <td id=\"T_2b1af_row6_col5\" class=\"data row6 col5\" >0.4663</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2b1af_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_2b1af_row7_col0\" class=\"data row7 col0\" >0.5577</td>\n",
              "      <td id=\"T_2b1af_row7_col1\" class=\"data row7 col1\" >0.5644</td>\n",
              "      <td id=\"T_2b1af_row7_col2\" class=\"data row7 col2\" >0.7513</td>\n",
              "      <td id=\"T_2b1af_row7_col3\" class=\"data row7 col3\" >0.7684</td>\n",
              "      <td id=\"T_2b1af_row7_col4\" class=\"data row7 col4\" >0.2535</td>\n",
              "      <td id=\"T_2b1af_row7_col5\" class=\"data row7 col5\" >0.4854</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2b1af_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "      <td id=\"T_2b1af_row8_col0\" class=\"data row8 col0\" >0.5516</td>\n",
              "      <td id=\"T_2b1af_row8_col1\" class=\"data row8 col1\" >0.5539</td>\n",
              "      <td id=\"T_2b1af_row8_col2\" class=\"data row8 col2\" >0.7442</td>\n",
              "      <td id=\"T_2b1af_row8_col3\" class=\"data row8 col3\" >0.7847</td>\n",
              "      <td id=\"T_2b1af_row8_col4\" class=\"data row8 col4\" >0.2485</td>\n",
              "      <td id=\"T_2b1af_row8_col5\" class=\"data row8 col5\" >0.4643</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2b1af_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "      <td id=\"T_2b1af_row9_col0\" class=\"data row9 col0\" >0.5305</td>\n",
              "      <td id=\"T_2b1af_row9_col1\" class=\"data row9 col1\" >0.5035</td>\n",
              "      <td id=\"T_2b1af_row9_col2\" class=\"data row9 col2\" >0.7095</td>\n",
              "      <td id=\"T_2b1af_row9_col3\" class=\"data row9 col3\" >0.7964</td>\n",
              "      <td id=\"T_2b1af_row9_col4\" class=\"data row9 col4\" >0.2468</td>\n",
              "      <td id=\"T_2b1af_row9_col5\" class=\"data row9 col5\" >0.4683</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2b1af_level0_row10\" class=\"row_heading level0 row10\" >Mean</th>\n",
              "      <td id=\"T_2b1af_row10_col0\" class=\"data row10 col0\" >0.5451</td>\n",
              "      <td id=\"T_2b1af_row10_col1\" class=\"data row10 col1\" >0.5384</td>\n",
              "      <td id=\"T_2b1af_row10_col2\" class=\"data row10 col2\" >0.7336</td>\n",
              "      <td id=\"T_2b1af_row10_col3\" class=\"data row10 col3\" >0.7719</td>\n",
              "      <td id=\"T_2b1af_row10_col4\" class=\"data row10 col4\" >0.2498</td>\n",
              "      <td id=\"T_2b1af_row10_col5\" class=\"data row10 col5\" >0.4703</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2b1af_level0_row11\" class=\"row_heading level0 row11\" >Std</th>\n",
              "      <td id=\"T_2b1af_row11_col0\" class=\"data row11 col0\" >0.0103</td>\n",
              "      <td id=\"T_2b1af_row11_col1\" class=\"data row11 col1\" >0.0208</td>\n",
              "      <td id=\"T_2b1af_row11_col2\" class=\"data row11 col2\" >0.0142</td>\n",
              "      <td id=\"T_2b1af_row11_col3\" class=\"data row11 col3\" >0.0122</td>\n",
              "      <td id=\"T_2b1af_row11_col4\" class=\"data row11 col4\" >0.0042</td>\n",
              "      <td id=\"T_2b1af_row11_col5\" class=\"data row11 col5\" >0.0114</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Processing:   0%|          | 0/4 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "3e4f07d042754abfb7aae29d3d6998c7"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"
                }
              }
            }
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        }
      ],
      "source": [
        "xgboost = create_model('xgboost', fold = 10)\n",
        "total_models.append(xgboost)"
      ],
      "id": "2598e710"
    },
    {
      "cell_type": "code",
      "source": [
        "knn = create_model('knn', fold=10)\n",
        "total_models.append(knn)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 457,
          "referenced_widgets": [
            "80eefb858ae54efe8545ca2734808d41",
            "7ecb467b46af4e31b81e604aac176684",
            "2cfa4086bb3442209f13d619346a2be7",
            "9c7a2d71515346d48431c92736de2df5",
            "cb611e1831624bbead9c049ef3fae4ad",
            "2c0d14846bfa4d6caea2c134f423e4e3",
            "fba80795eb3147069267e9c5ae6197bf",
            "2058e64d0ac942f5ad0996677ebc6e0d",
            "f136465c910a4fb8836ef662c405fc14",
            "7731dc05db7c40cab83d26b4604123a0",
            "08f3388ccd3f4c1896274dad0d188c22"
          ]
        },
        "id": "vh8NBO6dSZz3",
        "outputId": "855dcc5a-1664-43f8-be38-df957920a702"
      },
      "id": "vh8NBO6dSZz3",
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7e5bc57d9cc0>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_9060f_row10_col0, #T_9060f_row10_col1, #T_9060f_row10_col2, #T_9060f_row10_col3, #T_9060f_row10_col4, #T_9060f_row10_col5 {\n",
              "  background: yellow;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_9060f\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_9060f_level0_col0\" class=\"col_heading level0 col0\" >MAE</th>\n",
              "      <th id=\"T_9060f_level0_col1\" class=\"col_heading level0 col1\" >MSE</th>\n",
              "      <th id=\"T_9060f_level0_col2\" class=\"col_heading level0 col2\" >RMSE</th>\n",
              "      <th id=\"T_9060f_level0_col3\" class=\"col_heading level0 col3\" >R2</th>\n",
              "      <th id=\"T_9060f_level0_col4\" class=\"col_heading level0 col4\" >RMSLE</th>\n",
              "      <th id=\"T_9060f_level0_col5\" class=\"col_heading level0 col5\" >MAPE</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th class=\"index_name level0\" >Fold</th>\n",
              "      <th class=\"blank col0\" >&nbsp;</th>\n",
              "      <th class=\"blank col1\" >&nbsp;</th>\n",
              "      <th class=\"blank col2\" >&nbsp;</th>\n",
              "      <th class=\"blank col3\" >&nbsp;</th>\n",
              "      <th class=\"blank col4\" >&nbsp;</th>\n",
              "      <th class=\"blank col5\" >&nbsp;</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_9060f_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_9060f_row0_col0\" class=\"data row0 col0\" >0.4825</td>\n",
              "      <td id=\"T_9060f_row0_col1\" class=\"data row0 col1\" >0.4600</td>\n",
              "      <td id=\"T_9060f_row0_col2\" class=\"data row0 col2\" >0.6783</td>\n",
              "      <td id=\"T_9060f_row0_col3\" class=\"data row0 col3\" >0.7960</td>\n",
              "      <td id=\"T_9060f_row0_col4\" class=\"data row0 col4\" >0.2306</td>\n",
              "      <td id=\"T_9060f_row0_col5\" class=\"data row0 col5\" >0.4272</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_9060f_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_9060f_row1_col0\" class=\"data row1 col0\" >0.4622</td>\n",
              "      <td id=\"T_9060f_row1_col1\" class=\"data row1 col1\" >0.4167</td>\n",
              "      <td id=\"T_9060f_row1_col2\" class=\"data row1 col2\" >0.6456</td>\n",
              "      <td id=\"T_9060f_row1_col3\" class=\"data row1 col3\" >0.8236</td>\n",
              "      <td id=\"T_9060f_row1_col4\" class=\"data row1 col4\" >0.2221</td>\n",
              "      <td id=\"T_9060f_row1_col5\" class=\"data row1 col5\" >0.4057</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_9060f_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_9060f_row2_col0\" class=\"data row2 col0\" >0.4824</td>\n",
              "      <td id=\"T_9060f_row2_col1\" class=\"data row2 col1\" >0.4791</td>\n",
              "      <td id=\"T_9060f_row2_col2\" class=\"data row2 col2\" >0.6922</td>\n",
              "      <td id=\"T_9060f_row2_col3\" class=\"data row2 col3\" >0.7950</td>\n",
              "      <td id=\"T_9060f_row2_col4\" class=\"data row2 col4\" >0.2297</td>\n",
              "      <td id=\"T_9060f_row2_col5\" class=\"data row2 col5\" >0.4119</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_9060f_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_9060f_row3_col0\" class=\"data row3 col0\" >0.4737</td>\n",
              "      <td id=\"T_9060f_row3_col1\" class=\"data row3 col1\" >0.4456</td>\n",
              "      <td id=\"T_9060f_row3_col2\" class=\"data row3 col2\" >0.6675</td>\n",
              "      <td id=\"T_9060f_row3_col3\" class=\"data row3 col3\" >0.7968</td>\n",
              "      <td id=\"T_9060f_row3_col4\" class=\"data row3 col4\" >0.2257</td>\n",
              "      <td id=\"T_9060f_row3_col5\" class=\"data row3 col5\" >0.4045</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_9060f_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_9060f_row4_col0\" class=\"data row4 col0\" >0.4903</td>\n",
              "      <td id=\"T_9060f_row4_col1\" class=\"data row4 col1\" >0.4819</td>\n",
              "      <td id=\"T_9060f_row4_col2\" class=\"data row4 col2\" >0.6942</td>\n",
              "      <td id=\"T_9060f_row4_col3\" class=\"data row4 col3\" >0.7977</td>\n",
              "      <td id=\"T_9060f_row4_col4\" class=\"data row4 col4\" >0.2368</td>\n",
              "      <td id=\"T_9060f_row4_col5\" class=\"data row4 col5\" >0.4469</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_9060f_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_9060f_row5_col0\" class=\"data row5 col0\" >0.4639</td>\n",
              "      <td id=\"T_9060f_row5_col1\" class=\"data row5 col1\" >0.4394</td>\n",
              "      <td id=\"T_9060f_row5_col2\" class=\"data row5 col2\" >0.6629</td>\n",
              "      <td id=\"T_9060f_row5_col3\" class=\"data row5 col3\" >0.8135</td>\n",
              "      <td id=\"T_9060f_row5_col4\" class=\"data row5 col4\" >0.2219</td>\n",
              "      <td id=\"T_9060f_row5_col5\" class=\"data row5 col5\" >0.3997</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_9060f_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_9060f_row6_col0\" class=\"data row6 col0\" >0.4544</td>\n",
              "      <td id=\"T_9060f_row6_col1\" class=\"data row6 col1\" >0.4111</td>\n",
              "      <td id=\"T_9060f_row6_col2\" class=\"data row6 col2\" >0.6412</td>\n",
              "      <td id=\"T_9060f_row6_col3\" class=\"data row6 col3\" >0.8196</td>\n",
              "      <td id=\"T_9060f_row6_col4\" class=\"data row6 col4\" >0.2179</td>\n",
              "      <td id=\"T_9060f_row6_col5\" class=\"data row6 col5\" >0.3981</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_9060f_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_9060f_row7_col0\" class=\"data row7 col0\" >0.4890</td>\n",
              "      <td id=\"T_9060f_row7_col1\" class=\"data row7 col1\" >0.5046</td>\n",
              "      <td id=\"T_9060f_row7_col2\" class=\"data row7 col2\" >0.7103</td>\n",
              "      <td id=\"T_9060f_row7_col3\" class=\"data row7 col3\" >0.7930</td>\n",
              "      <td id=\"T_9060f_row7_col4\" class=\"data row7 col4\" >0.2337</td>\n",
              "      <td id=\"T_9060f_row7_col5\" class=\"data row7 col5\" >0.4317</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_9060f_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "      <td id=\"T_9060f_row8_col0\" class=\"data row8 col0\" >0.4960</td>\n",
              "      <td id=\"T_9060f_row8_col1\" class=\"data row8 col1\" >0.4986</td>\n",
              "      <td id=\"T_9060f_row8_col2\" class=\"data row8 col2\" >0.7061</td>\n",
              "      <td id=\"T_9060f_row8_col3\" class=\"data row8 col3\" >0.8062</td>\n",
              "      <td id=\"T_9060f_row8_col4\" class=\"data row8 col4\" >0.2283</td>\n",
              "      <td id=\"T_9060f_row8_col5\" class=\"data row8 col5\" >0.4173</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_9060f_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "      <td id=\"T_9060f_row9_col0\" class=\"data row9 col0\" >0.4851</td>\n",
              "      <td id=\"T_9060f_row9_col1\" class=\"data row9 col1\" >0.4910</td>\n",
              "      <td id=\"T_9060f_row9_col2\" class=\"data row9 col2\" >0.7007</td>\n",
              "      <td id=\"T_9060f_row9_col3\" class=\"data row9 col3\" >0.8015</td>\n",
              "      <td id=\"T_9060f_row9_col4\" class=\"data row9 col4\" >0.2346</td>\n",
              "      <td id=\"T_9060f_row9_col5\" class=\"data row9 col5\" >0.4335</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_9060f_level0_row10\" class=\"row_heading level0 row10\" >Mean</th>\n",
              "      <td id=\"T_9060f_row10_col0\" class=\"data row10 col0\" >0.4780</td>\n",
              "      <td id=\"T_9060f_row10_col1\" class=\"data row10 col1\" >0.4628</td>\n",
              "      <td id=\"T_9060f_row10_col2\" class=\"data row10 col2\" >0.6799</td>\n",
              "      <td id=\"T_9060f_row10_col3\" class=\"data row10 col3\" >0.8043</td>\n",
              "      <td id=\"T_9060f_row10_col4\" class=\"data row10 col4\" >0.2281</td>\n",
              "      <td id=\"T_9060f_row10_col5\" class=\"data row10 col5\" >0.4177</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_9060f_level0_row11\" class=\"row_heading level0 row11\" >Std</th>\n",
              "      <td id=\"T_9060f_row11_col0\" class=\"data row11 col0\" >0.0131</td>\n",
              "      <td id=\"T_9060f_row11_col1\" class=\"data row11 col1\" >0.0318</td>\n",
              "      <td id=\"T_9060f_row11_col2\" class=\"data row11 col2\" >0.0235</td>\n",
              "      <td id=\"T_9060f_row11_col3\" class=\"data row11 col3\" >0.0104</td>\n",
              "      <td id=\"T_9060f_row11_col4\" class=\"data row11 col4\" >0.0059</td>\n",
              "      <td id=\"T_9060f_row11_col5\" class=\"data row11 col5\" >0.0157</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Processing:   0%|          | 0/4 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "80eefb858ae54efe8545ca2734808d41"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"
                }
              }
            }
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 457,
          "referenced_widgets": [
            "231ca733a96b465a8d12b5c35a1a844c",
            "2fe45233b32844a78f0aabb7b1833eee",
            "4b494aa374cd40408102ff42b0a144c1",
            "2c395d9d0fac4b72b93fd0226c64c508",
            "fda8822785af4bf1a125f5bb4445f34e",
            "61b75f16848241ea8a13529e99272891",
            "5989171303d64e298896e89df9412ea5",
            "f0fa206cf7654b32b13f5d1e14833879",
            "07b448aba7f6485287fc4f0b40643fc9",
            "711430e2b76c4cf3b98a0ac77320b094",
            "9f7832bb2a2041edb2c87bea900ae71a"
          ]
        },
        "id": "a27ab254",
        "outputId": "79a10ec7-b6d1-41ea-96a1-98bfd1bf8bfd"
      },
      "outputs": [
        {
          "data": {
            "text/html": [],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_71b5c_row10_col0, #T_71b5c_row10_col1, #T_71b5c_row10_col2, #T_71b5c_row10_col3, #T_71b5c_row10_col4, #T_71b5c_row10_col5 {\n",
              "  background: yellow;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_71b5c\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_71b5c_level0_col0\" class=\"col_heading level0 col0\" >MAE</th>\n",
              "      <th id=\"T_71b5c_level0_col1\" class=\"col_heading level0 col1\" >MSE</th>\n",
              "      <th id=\"T_71b5c_level0_col2\" class=\"col_heading level0 col2\" >RMSE</th>\n",
              "      <th id=\"T_71b5c_level0_col3\" class=\"col_heading level0 col3\" >R2</th>\n",
              "      <th id=\"T_71b5c_level0_col4\" class=\"col_heading level0 col4\" >RMSLE</th>\n",
              "      <th id=\"T_71b5c_level0_col5\" class=\"col_heading level0 col5\" >MAPE</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th class=\"index_name level0\" >Fold</th>\n",
              "      <th class=\"blank col0\" >&nbsp;</th>\n",
              "      <th class=\"blank col1\" >&nbsp;</th>\n",
              "      <th class=\"blank col2\" >&nbsp;</th>\n",
              "      <th class=\"blank col3\" >&nbsp;</th>\n",
              "      <th class=\"blank col4\" >&nbsp;</th>\n",
              "      <th class=\"blank col5\" >&nbsp;</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_71b5c_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_71b5c_row0_col0\" class=\"data row0 col0\" >0.6095</td>\n",
              "      <td id=\"T_71b5c_row0_col1\" class=\"data row0 col1\" >0.6491</td>\n",
              "      <td id=\"T_71b5c_row0_col2\" class=\"data row0 col2\" >0.8057</td>\n",
              "      <td id=\"T_71b5c_row0_col3\" class=\"data row0 col3\" >0.7391</td>\n",
              "      <td id=\"T_71b5c_row0_col4\" class=\"data row0 col4\" >0.2679</td>\n",
              "      <td id=\"T_71b5c_row0_col5\" class=\"data row0 col5\" >0.5399</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_71b5c_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_71b5c_row1_col0\" class=\"data row1 col0\" >0.5783</td>\n",
              "      <td id=\"T_71b5c_row1_col1\" class=\"data row1 col1\" >0.5853</td>\n",
              "      <td id=\"T_71b5c_row1_col2\" class=\"data row1 col2\" >0.7650</td>\n",
              "      <td id=\"T_71b5c_row1_col3\" class=\"data row1 col3\" >0.7381</td>\n",
              "      <td id=\"T_71b5c_row1_col4\" class=\"data row1 col4\" >0.2585</td>\n",
              "      <td id=\"T_71b5c_row1_col5\" class=\"data row1 col5\" >0.5033</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_71b5c_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_71b5c_row2_col0\" class=\"data row2 col0\" >0.6003</td>\n",
              "      <td id=\"T_71b5c_row2_col1\" class=\"data row2 col1\" >0.6295</td>\n",
              "      <td id=\"T_71b5c_row2_col2\" class=\"data row2 col2\" >0.7934</td>\n",
              "      <td id=\"T_71b5c_row2_col3\" class=\"data row2 col3\" >0.7273</td>\n",
              "      <td id=\"T_71b5c_row2_col4\" class=\"data row2 col4\" >0.2653</td>\n",
              "      <td id=\"T_71b5c_row2_col5\" class=\"data row2 col5\" >0.5077</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_71b5c_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_71b5c_row3_col0\" class=\"data row3 col0\" >0.6132</td>\n",
              "      <td id=\"T_71b5c_row3_col1\" class=\"data row3 col1\" >0.6492</td>\n",
              "      <td id=\"T_71b5c_row3_col2\" class=\"data row3 col2\" >0.8058</td>\n",
              "      <td id=\"T_71b5c_row3_col3\" class=\"data row3 col3\" >0.7120</td>\n",
              "      <td id=\"T_71b5c_row3_col4\" class=\"data row3 col4\" >0.2761</td>\n",
              "      <td id=\"T_71b5c_row3_col5\" class=\"data row3 col5\" >0.5649</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_71b5c_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_71b5c_row4_col0\" class=\"data row4 col0\" >0.6119</td>\n",
              "      <td id=\"T_71b5c_row4_col1\" class=\"data row4 col1\" >0.6555</td>\n",
              "      <td id=\"T_71b5c_row4_col2\" class=\"data row4 col2\" >0.8096</td>\n",
              "      <td id=\"T_71b5c_row4_col3\" class=\"data row4 col3\" >0.7192</td>\n",
              "      <td id=\"T_71b5c_row4_col4\" class=\"data row4 col4\" >0.2670</td>\n",
              "      <td id=\"T_71b5c_row4_col5\" class=\"data row4 col5\" >0.5294</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_71b5c_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_71b5c_row5_col0\" class=\"data row5 col0\" >0.6093</td>\n",
              "      <td id=\"T_71b5c_row5_col1\" class=\"data row5 col1\" >0.6536</td>\n",
              "      <td id=\"T_71b5c_row5_col2\" class=\"data row5 col2\" >0.8085</td>\n",
              "      <td id=\"T_71b5c_row5_col3\" class=\"data row5 col3\" >0.7417</td>\n",
              "      <td id=\"T_71b5c_row5_col4\" class=\"data row5 col4\" >0.2633</td>\n",
              "      <td id=\"T_71b5c_row5_col5\" class=\"data row5 col5\" >0.5172</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_71b5c_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_71b5c_row6_col0\" class=\"data row6 col0\" >0.5859</td>\n",
              "      <td id=\"T_71b5c_row6_col1\" class=\"data row6 col1\" >0.5938</td>\n",
              "      <td id=\"T_71b5c_row6_col2\" class=\"data row6 col2\" >0.7706</td>\n",
              "      <td id=\"T_71b5c_row6_col3\" class=\"data row6 col3\" >0.7418</td>\n",
              "      <td id=\"T_71b5c_row6_col4\" class=\"data row6 col4\" >0.2597</td>\n",
              "      <td id=\"T_71b5c_row6_col5\" class=\"data row6 col5\" >0.5095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_71b5c_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_71b5c_row7_col0\" class=\"data row7 col0\" >0.5836</td>\n",
              "      <td id=\"T_71b5c_row7_col1\" class=\"data row7 col1\" >0.5882</td>\n",
              "      <td id=\"T_71b5c_row7_col2\" class=\"data row7 col2\" >0.7669</td>\n",
              "      <td id=\"T_71b5c_row7_col3\" class=\"data row7 col3\" >0.7423</td>\n",
              "      <td id=\"T_71b5c_row7_col4\" class=\"data row7 col4\" >0.2623</td>\n",
              "      <td id=\"T_71b5c_row7_col5\" class=\"data row7 col5\" >0.5167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_71b5c_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "      <td id=\"T_71b5c_row8_col0\" class=\"data row8 col0\" >0.5930</td>\n",
              "      <td id=\"T_71b5c_row8_col1\" class=\"data row8 col1\" >0.6107</td>\n",
              "      <td id=\"T_71b5c_row8_col2\" class=\"data row8 col2\" >0.7815</td>\n",
              "      <td id=\"T_71b5c_row8_col3\" class=\"data row8 col3\" >0.7418</td>\n",
              "      <td id=\"T_71b5c_row8_col4\" class=\"data row8 col4\" >0.2614</td>\n",
              "      <td id=\"T_71b5c_row8_col5\" class=\"data row8 col5\" >0.5020</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_71b5c_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "      <td id=\"T_71b5c_row9_col0\" class=\"data row9 col0\" >0.6079</td>\n",
              "      <td id=\"T_71b5c_row9_col1\" class=\"data row9 col1\" >0.6530</td>\n",
              "      <td id=\"T_71b5c_row9_col2\" class=\"data row9 col2\" >0.8081</td>\n",
              "      <td id=\"T_71b5c_row9_col3\" class=\"data row9 col3\" >0.7364</td>\n",
              "      <td id=\"T_71b5c_row9_col4\" class=\"data row9 col4\" >0.2650</td>\n",
              "      <td id=\"T_71b5c_row9_col5\" class=\"data row9 col5\" >0.5078</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_71b5c_level0_row10\" class=\"row_heading level0 row10\" >Mean</th>\n",
              "      <td id=\"T_71b5c_row10_col0\" class=\"data row10 col0\" >0.5993</td>\n",
              "      <td id=\"T_71b5c_row10_col1\" class=\"data row10 col1\" >0.6268</td>\n",
              "      <td id=\"T_71b5c_row10_col2\" class=\"data row10 col2\" >0.7915</td>\n",
              "      <td id=\"T_71b5c_row10_col3\" class=\"data row10 col3\" >0.7340</td>\n",
              "      <td id=\"T_71b5c_row10_col4\" class=\"data row10 col4\" >0.2646</td>\n",
              "      <td id=\"T_71b5c_row10_col5\" class=\"data row10 col5\" >0.5198</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_71b5c_level0_row11\" class=\"row_heading level0 row11\" >Std</th>\n",
              "      <td id=\"T_71b5c_row11_col0\" class=\"data row11 col0\" >0.0124</td>\n",
              "      <td id=\"T_71b5c_row11_col1\" class=\"data row11 col1\" >0.0279</td>\n",
              "      <td id=\"T_71b5c_row11_col2\" class=\"data row11 col2\" >0.0177</td>\n",
              "      <td id=\"T_71b5c_row11_col3\" class=\"data row11 col3\" >0.0102</td>\n",
              "      <td id=\"T_71b5c_row11_col4\" class=\"data row11 col4\" >0.0048</td>\n",
              "      <td id=\"T_71b5c_row11_col5\" class=\"data row11 col5\" >0.0188</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ],
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x79001d70f190>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "231ca733a96b465a8d12b5c35a1a844c",
              "version_major": 2,
              "version_minor": 0
            },
            "text/plain": [
              "Processing:   0%|          | 0/4 [00:00<?, ?it/s]"
            ]
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"
                }
              }
            }
          },
          "output_type": "display_data"
        },
        {
          "data": {
            "text/html": [],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "lightgbm = create_model('lightgbm', fold = 10)\n",
        "total_models.append(lightgbm)"
      ],
      "id": "a27ab254"
    },
    {
      "cell_type": "code",
      "execution_count": 23,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7792d0be",
        "outputId": "f1ccd400-4495-464b-a813-d1a9a7f2bdf4"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[ExtraTreesRegressor(n_jobs=-1, random_state=42),\n",
              " RandomForestRegressor(n_jobs=-1, random_state=42),\n",
              " <catboost.core.CatBoostRegressor at 0x7e5bc41e6800>,\n",
              " XGBRegressor(base_score=None, booster='gbtree', callbacks=None,\n",
              "              colsample_bylevel=None, colsample_bynode=None,\n",
              "              colsample_bytree=None, early_stopping_rounds=None,\n",
              "              enable_categorical=False, eval_metric=None, feature_types=None,\n",
              "              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,\n",
              "              interaction_constraints=None, learning_rate=None, max_bin=None,\n",
              "              max_cat_threshold=None, max_cat_to_onehot=None,\n",
              "              max_delta_step=None, max_depth=None, max_leaves=None,\n",
              "              min_child_weight=None, missing=nan, monotone_constraints=None,\n",
              "              n_estimators=100, n_jobs=-1, num_parallel_tree=None,\n",
              "              predictor=None, random_state=42, ...),\n",
              " KNeighborsRegressor(n_jobs=-1)]"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ],
      "source": [
        "total_models"
      ],
      "id": "7792d0be"
    },
    {
      "cell_type": "code",
      "execution_count": 24,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 494,
          "referenced_widgets": [
            "2c58c16726894c1a9c6f12e0618feee7",
            "95ed48e64bdd47738ba4d87587260b75",
            "474bf159e2014a5397cc2801c9db3db5",
            "2a999769eb364011aa5598103226cc26",
            "8355cdb980954dcdb89497584691df30",
            "21cc5bcd193d439d822b1e1d0271cc52",
            "581dac9890554d4c97f2c9860ca42c20",
            "6f775ac2f4dd4ff59dc230785f9b9ba4",
            "4ddf20259bae4b12a987d5199e63b054",
            "f14de129e7e046849a428a83deca8762",
            "8902a9cae9944d3986f3accfcce99615"
          ]
        },
        "id": "fa7dfcbc",
        "outputId": "0d361b4c-3cb0-4f2a-b881-dc35d307df2a"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7e5bc57d9fc0>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_85faf_row10_col0, #T_85faf_row10_col1, #T_85faf_row10_col2, #T_85faf_row10_col3, #T_85faf_row10_col4, #T_85faf_row10_col5 {\n",
              "  background: yellow;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_85faf\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_85faf_level0_col0\" class=\"col_heading level0 col0\" >MAE</th>\n",
              "      <th id=\"T_85faf_level0_col1\" class=\"col_heading level0 col1\" >MSE</th>\n",
              "      <th id=\"T_85faf_level0_col2\" class=\"col_heading level0 col2\" >RMSE</th>\n",
              "      <th id=\"T_85faf_level0_col3\" class=\"col_heading level0 col3\" >R2</th>\n",
              "      <th id=\"T_85faf_level0_col4\" class=\"col_heading level0 col4\" >RMSLE</th>\n",
              "      <th id=\"T_85faf_level0_col5\" class=\"col_heading level0 col5\" >MAPE</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th class=\"index_name level0\" >Fold</th>\n",
              "      <th class=\"blank col0\" >&nbsp;</th>\n",
              "      <th class=\"blank col1\" >&nbsp;</th>\n",
              "      <th class=\"blank col2\" >&nbsp;</th>\n",
              "      <th class=\"blank col3\" >&nbsp;</th>\n",
              "      <th class=\"blank col4\" >&nbsp;</th>\n",
              "      <th class=\"blank col5\" >&nbsp;</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_85faf_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_85faf_row0_col0\" class=\"data row0 col0\" >0.7774</td>\n",
              "      <td id=\"T_85faf_row0_col1\" class=\"data row0 col1\" >1.0449</td>\n",
              "      <td id=\"T_85faf_row0_col2\" class=\"data row0 col2\" >1.0222</td>\n",
              "      <td id=\"T_85faf_row0_col3\" class=\"data row0 col3\" >0.5366</td>\n",
              "      <td id=\"T_85faf_row0_col4\" class=\"data row0 col4\" >0.3341</td>\n",
              "      <td id=\"T_85faf_row0_col5\" class=\"data row0 col5\" >0.7404</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_85faf_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_85faf_row1_col0\" class=\"data row1 col0\" >0.7675</td>\n",
              "      <td id=\"T_85faf_row1_col1\" class=\"data row1 col1\" >1.0313</td>\n",
              "      <td id=\"T_85faf_row1_col2\" class=\"data row1 col2\" >1.0155</td>\n",
              "      <td id=\"T_85faf_row1_col3\" class=\"data row1 col3\" >0.5636</td>\n",
              "      <td id=\"T_85faf_row1_col4\" class=\"data row1 col4\" >0.3244</td>\n",
              "      <td id=\"T_85faf_row1_col5\" class=\"data row1 col5\" >0.7200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_85faf_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_85faf_row2_col0\" class=\"data row2 col0\" >0.7708</td>\n",
              "      <td id=\"T_85faf_row2_col1\" class=\"data row2 col1\" >1.0537</td>\n",
              "      <td id=\"T_85faf_row2_col2\" class=\"data row2 col2\" >1.0265</td>\n",
              "      <td id=\"T_85faf_row2_col3\" class=\"data row2 col3\" >0.5491</td>\n",
              "      <td id=\"T_85faf_row2_col4\" class=\"data row2 col4\" >0.3301</td>\n",
              "      <td id=\"T_85faf_row2_col5\" class=\"data row2 col5\" >0.7374</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_85faf_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_85faf_row3_col0\" class=\"data row3 col0\" >0.7472</td>\n",
              "      <td id=\"T_85faf_row3_col1\" class=\"data row3 col1\" >0.9838</td>\n",
              "      <td id=\"T_85faf_row3_col2\" class=\"data row3 col2\" >0.9919</td>\n",
              "      <td id=\"T_85faf_row3_col3\" class=\"data row3 col3\" >0.5513</td>\n",
              "      <td id=\"T_85faf_row3_col4\" class=\"data row3 col4\" >0.3202</td>\n",
              "      <td id=\"T_85faf_row3_col5\" class=\"data row3 col5\" >0.6972</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_85faf_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_85faf_row4_col0\" class=\"data row4 col0\" >0.7864</td>\n",
              "      <td id=\"T_85faf_row4_col1\" class=\"data row4 col1\" >1.1017</td>\n",
              "      <td id=\"T_85faf_row4_col2\" class=\"data row4 col2\" >1.0496</td>\n",
              "      <td id=\"T_85faf_row4_col3\" class=\"data row4 col3\" >0.5376</td>\n",
              "      <td id=\"T_85faf_row4_col4\" class=\"data row4 col4\" >0.3345</td>\n",
              "      <td id=\"T_85faf_row4_col5\" class=\"data row4 col5\" >0.7470</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_85faf_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_85faf_row5_col0\" class=\"data row5 col0\" >0.7609</td>\n",
              "      <td id=\"T_85faf_row5_col1\" class=\"data row5 col1\" >1.0083</td>\n",
              "      <td id=\"T_85faf_row5_col2\" class=\"data row5 col2\" >1.0041</td>\n",
              "      <td id=\"T_85faf_row5_col3\" class=\"data row5 col3\" >0.5720</td>\n",
              "      <td id=\"T_85faf_row5_col4\" class=\"data row5 col4\" >0.3216</td>\n",
              "      <td id=\"T_85faf_row5_col5\" class=\"data row5 col5\" >0.7010</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_85faf_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_85faf_row6_col0\" class=\"data row6 col0\" >0.7843</td>\n",
              "      <td id=\"T_85faf_row6_col1\" class=\"data row6 col1\" >1.0690</td>\n",
              "      <td id=\"T_85faf_row6_col2\" class=\"data row6 col2\" >1.0339</td>\n",
              "      <td id=\"T_85faf_row6_col3\" class=\"data row6 col3\" >0.5308</td>\n",
              "      <td id=\"T_85faf_row6_col4\" class=\"data row6 col4\" >0.3322</td>\n",
              "      <td id=\"T_85faf_row6_col5\" class=\"data row6 col5\" >0.7314</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_85faf_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_85faf_row7_col0\" class=\"data row7 col0\" >0.7832</td>\n",
              "      <td id=\"T_85faf_row7_col1\" class=\"data row7 col1\" >1.0712</td>\n",
              "      <td id=\"T_85faf_row7_col2\" class=\"data row7 col2\" >1.0350</td>\n",
              "      <td id=\"T_85faf_row7_col3\" class=\"data row7 col3\" >0.5605</td>\n",
              "      <td id=\"T_85faf_row7_col4\" class=\"data row7 col4\" >0.3304</td>\n",
              "      <td id=\"T_85faf_row7_col5\" class=\"data row7 col5\" >0.7417</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_85faf_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "      <td id=\"T_85faf_row8_col0\" class=\"data row8 col0\" >0.7929</td>\n",
              "      <td id=\"T_85faf_row8_col1\" class=\"data row8 col1\" >1.1441</td>\n",
              "      <td id=\"T_85faf_row8_col2\" class=\"data row8 col2\" >1.0696</td>\n",
              "      <td id=\"T_85faf_row8_col3\" class=\"data row8 col3\" >0.5554</td>\n",
              "      <td id=\"T_85faf_row8_col4\" class=\"data row8 col4\" >0.3287</td>\n",
              "      <td id=\"T_85faf_row8_col5\" class=\"data row8 col5\" >0.7088</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_85faf_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "      <td id=\"T_85faf_row9_col0\" class=\"data row9 col0\" >0.7879</td>\n",
              "      <td id=\"T_85faf_row9_col1\" class=\"data row9 col1\" >1.0858</td>\n",
              "      <td id=\"T_85faf_row9_col2\" class=\"data row9 col2\" >1.0420</td>\n",
              "      <td id=\"T_85faf_row9_col3\" class=\"data row9 col3\" >0.5610</td>\n",
              "      <td id=\"T_85faf_row9_col4\" class=\"data row9 col4\" >0.3318</td>\n",
              "      <td id=\"T_85faf_row9_col5\" class=\"data row9 col5\" >0.7387</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_85faf_level0_row10\" class=\"row_heading level0 row10\" >Mean</th>\n",
              "      <td id=\"T_85faf_row10_col0\" class=\"data row10 col0\" >0.7759</td>\n",
              "      <td id=\"T_85faf_row10_col1\" class=\"data row10 col1\" >1.0594</td>\n",
              "      <td id=\"T_85faf_row10_col2\" class=\"data row10 col2\" >1.0290</td>\n",
              "      <td id=\"T_85faf_row10_col3\" class=\"data row10 col3\" >0.5518</td>\n",
              "      <td id=\"T_85faf_row10_col4\" class=\"data row10 col4\" >0.3288</td>\n",
              "      <td id=\"T_85faf_row10_col5\" class=\"data row10 col5\" >0.7263</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_85faf_level0_row11\" class=\"row_heading level0 row11\" >Std</th>\n",
              "      <td id=\"T_85faf_row11_col0\" class=\"data row11 col0\" >0.0135</td>\n",
              "      <td id=\"T_85faf_row11_col1\" class=\"data row11 col1\" >0.0439</td>\n",
              "      <td id=\"T_85faf_row11_col2\" class=\"data row11 col2\" >0.0213</td>\n",
              "      <td id=\"T_85faf_row11_col3\" class=\"data row11 col3\" >0.0127</td>\n",
              "      <td id=\"T_85faf_row11_col4\" class=\"data row11 col4\" >0.0048</td>\n",
              "      <td id=\"T_85faf_row11_col5\" class=\"data row11 col5\" >0.0173</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Processing:   0%|          | 0/7 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "2c58c16726894c1a9c6f12e0618feee7"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"
                }
              }
            }
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Fitting 10 folds for each of 10 candidates, totalling 100 fits\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).\n"
          ]
        }
      ],
      "source": [
        "model_et = tune_model(et, fold=10, optimize = 'MAE')"
      ],
      "id": "fa7dfcbc"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 493,
          "referenced_widgets": [
            "e699587d54694876b0b1a9bb258523e3",
            "a03ee1f57eff4cc8ac5c17789d53bb5f",
            "4e12340e72cf4ff4821183ae324dea8d",
            "82cc71ba8e9a489c9c867dd893f059b0",
            "382cd41441654694bac66df9e7c4305d",
            "c22aec517096444a9fb4b9b2918b48f4",
            "b1e702dcefd94157863b36b0994dd8e6",
            "828132d33b4d48f09bb8a549a8ae2c63",
            "6288c6a434d648a48ab15d04d53ebd52",
            "e27c6969f3c74543a16feb3f05339958",
            "db3cafb7c93e48a3b275ea38a27afdfb"
          ]
        },
        "id": "7ddf2f5f",
        "outputId": "aaee414f-5768-4c8c-af0f-d8f00bddf33a"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x79fd038740a0>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_186c2_row10_col0, #T_186c2_row10_col1, #T_186c2_row10_col2, #T_186c2_row10_col3, #T_186c2_row10_col4, #T_186c2_row10_col5 {\n",
              "  background: yellow;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_186c2\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_186c2_level0_col0\" class=\"col_heading level0 col0\" >MAE</th>\n",
              "      <th id=\"T_186c2_level0_col1\" class=\"col_heading level0 col1\" >MSE</th>\n",
              "      <th id=\"T_186c2_level0_col2\" class=\"col_heading level0 col2\" >RMSE</th>\n",
              "      <th id=\"T_186c2_level0_col3\" class=\"col_heading level0 col3\" >R2</th>\n",
              "      <th id=\"T_186c2_level0_col4\" class=\"col_heading level0 col4\" >RMSLE</th>\n",
              "      <th id=\"T_186c2_level0_col5\" class=\"col_heading level0 col5\" >MAPE</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th class=\"index_name level0\" >Fold</th>\n",
              "      <th class=\"blank col0\" >&nbsp;</th>\n",
              "      <th class=\"blank col1\" >&nbsp;</th>\n",
              "      <th class=\"blank col2\" >&nbsp;</th>\n",
              "      <th class=\"blank col3\" >&nbsp;</th>\n",
              "      <th class=\"blank col4\" >&nbsp;</th>\n",
              "      <th class=\"blank col5\" >&nbsp;</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_186c2_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_186c2_row0_col0\" class=\"data row0 col0\" >0.6167</td>\n",
              "      <td id=\"T_186c2_row0_col1\" class=\"data row0 col1\" >0.6619</td>\n",
              "      <td id=\"T_186c2_row0_col2\" class=\"data row0 col2\" >0.8136</td>\n",
              "      <td id=\"T_186c2_row0_col3\" class=\"data row0 col3\" >0.7065</td>\n",
              "      <td id=\"T_186c2_row0_col4\" class=\"data row0 col4\" >0.2784</td>\n",
              "      <td id=\"T_186c2_row0_col5\" class=\"data row0 col5\" >0.5823</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_186c2_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_186c2_row1_col0\" class=\"data row1 col0\" >0.6079</td>\n",
              "      <td id=\"T_186c2_row1_col1\" class=\"data row1 col1\" >0.6311</td>\n",
              "      <td id=\"T_186c2_row1_col2\" class=\"data row1 col2\" >0.7944</td>\n",
              "      <td id=\"T_186c2_row1_col3\" class=\"data row1 col3\" >0.7329</td>\n",
              "      <td id=\"T_186c2_row1_col4\" class=\"data row1 col4\" >0.2697</td>\n",
              "      <td id=\"T_186c2_row1_col5\" class=\"data row1 col5\" >0.5691</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_186c2_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_186c2_row2_col0\" class=\"data row2 col0\" >0.6021</td>\n",
              "      <td id=\"T_186c2_row2_col1\" class=\"data row2 col1\" >0.6382</td>\n",
              "      <td id=\"T_186c2_row2_col2\" class=\"data row2 col2\" >0.7988</td>\n",
              "      <td id=\"T_186c2_row2_col3\" class=\"data row2 col3\" >0.7269</td>\n",
              "      <td id=\"T_186c2_row2_col4\" class=\"data row2 col4\" >0.2732</td>\n",
              "      <td id=\"T_186c2_row2_col5\" class=\"data row2 col5\" >0.5702</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_186c2_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_186c2_row3_col0\" class=\"data row3 col0\" >0.6000</td>\n",
              "      <td id=\"T_186c2_row3_col1\" class=\"data row3 col1\" >0.6394</td>\n",
              "      <td id=\"T_186c2_row3_col2\" class=\"data row3 col2\" >0.7996</td>\n",
              "      <td id=\"T_186c2_row3_col3\" class=\"data row3 col3\" >0.7084</td>\n",
              "      <td id=\"T_186c2_row3_col4\" class=\"data row3 col4\" >0.2700</td>\n",
              "      <td id=\"T_186c2_row3_col5\" class=\"data row3 col5\" >0.5559</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_186c2_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_186c2_row4_col0\" class=\"data row4 col0\" >0.6259</td>\n",
              "      <td id=\"T_186c2_row4_col1\" class=\"data row4 col1\" >0.7115</td>\n",
              "      <td id=\"T_186c2_row4_col2\" class=\"data row4 col2\" >0.8435</td>\n",
              "      <td id=\"T_186c2_row4_col3\" class=\"data row4 col3\" >0.7013</td>\n",
              "      <td id=\"T_186c2_row4_col4\" class=\"data row4 col4\" >0.2796</td>\n",
              "      <td id=\"T_186c2_row4_col5\" class=\"data row4 col5\" >0.5827</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_186c2_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_186c2_row5_col0\" class=\"data row5 col0\" >0.5899</td>\n",
              "      <td id=\"T_186c2_row5_col1\" class=\"data row5 col1\" >0.6131</td>\n",
              "      <td id=\"T_186c2_row5_col2\" class=\"data row5 col2\" >0.7830</td>\n",
              "      <td id=\"T_186c2_row5_col3\" class=\"data row5 col3\" >0.7397</td>\n",
              "      <td id=\"T_186c2_row5_col4\" class=\"data row5 col4\" >0.2631</td>\n",
              "      <td id=\"T_186c2_row5_col5\" class=\"data row5 col5\" >0.5354</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_186c2_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_186c2_row6_col0\" class=\"data row6 col0\" >0.6123</td>\n",
              "      <td id=\"T_186c2_row6_col1\" class=\"data row6 col1\" >0.6576</td>\n",
              "      <td id=\"T_186c2_row6_col2\" class=\"data row6 col2\" >0.8109</td>\n",
              "      <td id=\"T_186c2_row6_col3\" class=\"data row6 col3\" >0.7114</td>\n",
              "      <td id=\"T_186c2_row6_col4\" class=\"data row6 col4\" >0.2702</td>\n",
              "      <td id=\"T_186c2_row6_col5\" class=\"data row6 col5\" >0.5595</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_186c2_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_186c2_row7_col0\" class=\"data row7 col0\" >0.6087</td>\n",
              "      <td id=\"T_186c2_row7_col1\" class=\"data row7 col1\" >0.6381</td>\n",
              "      <td id=\"T_186c2_row7_col2\" class=\"data row7 col2\" >0.7988</td>\n",
              "      <td id=\"T_186c2_row7_col3\" class=\"data row7 col3\" >0.7382</td>\n",
              "      <td id=\"T_186c2_row7_col4\" class=\"data row7 col4\" >0.2712</td>\n",
              "      <td id=\"T_186c2_row7_col5\" class=\"data row7 col5\" >0.5761</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_186c2_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "      <td id=\"T_186c2_row8_col0\" class=\"data row8 col0\" >0.6158</td>\n",
              "      <td id=\"T_186c2_row8_col1\" class=\"data row8 col1\" >0.6587</td>\n",
              "      <td id=\"T_186c2_row8_col2\" class=\"data row8 col2\" >0.8116</td>\n",
              "      <td id=\"T_186c2_row8_col3\" class=\"data row8 col3\" >0.7440</td>\n",
              "      <td id=\"T_186c2_row8_col4\" class=\"data row8 col4\" >0.2686</td>\n",
              "      <td id=\"T_186c2_row8_col5\" class=\"data row8 col5\" >0.5493</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_186c2_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "      <td id=\"T_186c2_row9_col0\" class=\"data row9 col0\" >0.6069</td>\n",
              "      <td id=\"T_186c2_row9_col1\" class=\"data row9 col1\" >0.6462</td>\n",
              "      <td id=\"T_186c2_row9_col2\" class=\"data row9 col2\" >0.8038</td>\n",
              "      <td id=\"T_186c2_row9_col3\" class=\"data row9 col3\" >0.7387</td>\n",
              "      <td id=\"T_186c2_row9_col4\" class=\"data row9 col4\" >0.2727</td>\n",
              "      <td id=\"T_186c2_row9_col5\" class=\"data row9 col5\" >0.5719</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_186c2_level0_row10\" class=\"row_heading level0 row10\" >Mean</th>\n",
              "      <td id=\"T_186c2_row10_col0\" class=\"data row10 col0\" >0.6086</td>\n",
              "      <td id=\"T_186c2_row10_col1\" class=\"data row10 col1\" >0.6496</td>\n",
              "      <td id=\"T_186c2_row10_col2\" class=\"data row10 col2\" >0.8058</td>\n",
              "      <td id=\"T_186c2_row10_col3\" class=\"data row10 col3\" >0.7248</td>\n",
              "      <td id=\"T_186c2_row10_col4\" class=\"data row10 col4\" >0.2717</td>\n",
              "      <td id=\"T_186c2_row10_col5\" class=\"data row10 col5\" >0.5652</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_186c2_level0_row11\" class=\"row_heading level0 row11\" >Std</th>\n",
              "      <td id=\"T_186c2_row11_col0\" class=\"data row11 col0\" >0.0095</td>\n",
              "      <td id=\"T_186c2_row11_col1\" class=\"data row11 col1\" >0.0249</td>\n",
              "      <td id=\"T_186c2_row11_col2\" class=\"data row11 col2\" >0.0153</td>\n",
              "      <td id=\"T_186c2_row11_col3\" class=\"data row11 col3\" >0.0154</td>\n",
              "      <td id=\"T_186c2_row11_col4\" class=\"data row11 col4\" >0.0045</td>\n",
              "      <td id=\"T_186c2_row11_col5\" class=\"data row11 col5\" >0.0144</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Processing:   0%|          | 0/7 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "e699587d54694876b0b1a9bb258523e3"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"
                }
              }
            }
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Fitting 10 folds for each of 10 candidates, totalling 100 fits\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).\n"
          ]
        }
      ],
      "source": [
        "model_rf = tune_model(rf, fold=10, optimize = 'MAE')"
      ],
      "id": "7ddf2f5f"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 493,
          "referenced_widgets": [
            "e0305df78e8b4558afd582d8bf0bdd11",
            "731290bd1fbc44938aeda72421b9a1ea",
            "d6ae5bf56e4b44f985b2c0f24e66b8e7",
            "1fcd1130da6e4e2595211735d34db883",
            "5ae3f39fad4646a3a560360e9070982f",
            "4995375716df4ea9a368eee6699eb609",
            "1e055f7c6db0460ea57a8c48ee077e31",
            "00a41145e60f4e139be175eeed16fec6",
            "f7f05496148d407b82d75101ca1cc305",
            "779d9800128942919455b239f8644807",
            "c3c40ebcbb104c85bd884f61ce87b0f7"
          ]
        },
        "id": "b555c80f",
        "outputId": "caa69d9b-da01-47b4-c7ed-b863930a881c"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x79fcf69c3730>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_967ac_row10_col0, #T_967ac_row10_col1, #T_967ac_row10_col2, #T_967ac_row10_col3, #T_967ac_row10_col4, #T_967ac_row10_col5 {\n",
              "  background: yellow;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_967ac\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_967ac_level0_col0\" class=\"col_heading level0 col0\" >MAE</th>\n",
              "      <th id=\"T_967ac_level0_col1\" class=\"col_heading level0 col1\" >MSE</th>\n",
              "      <th id=\"T_967ac_level0_col2\" class=\"col_heading level0 col2\" >RMSE</th>\n",
              "      <th id=\"T_967ac_level0_col3\" class=\"col_heading level0 col3\" >R2</th>\n",
              "      <th id=\"T_967ac_level0_col4\" class=\"col_heading level0 col4\" >RMSLE</th>\n",
              "      <th id=\"T_967ac_level0_col5\" class=\"col_heading level0 col5\" >MAPE</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th class=\"index_name level0\" >Fold</th>\n",
              "      <th class=\"blank col0\" >&nbsp;</th>\n",
              "      <th class=\"blank col1\" >&nbsp;</th>\n",
              "      <th class=\"blank col2\" >&nbsp;</th>\n",
              "      <th class=\"blank col3\" >&nbsp;</th>\n",
              "      <th class=\"blank col4\" >&nbsp;</th>\n",
              "      <th class=\"blank col5\" >&nbsp;</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_967ac_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_967ac_row0_col0\" class=\"data row0 col0\" >0.7430</td>\n",
              "      <td id=\"T_967ac_row0_col1\" class=\"data row0 col1\" >0.9825</td>\n",
              "      <td id=\"T_967ac_row0_col2\" class=\"data row0 col2\" >0.9912</td>\n",
              "      <td id=\"T_967ac_row0_col3\" class=\"data row0 col3\" >0.5643</td>\n",
              "      <td id=\"T_967ac_row0_col4\" class=\"data row0 col4\" >0.3236</td>\n",
              "      <td id=\"T_967ac_row0_col5\" class=\"data row0 col5\" >0.6794</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_967ac_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_967ac_row1_col0\" class=\"data row1 col0\" >0.7457</td>\n",
              "      <td id=\"T_967ac_row1_col1\" class=\"data row1 col1\" >0.9836</td>\n",
              "      <td id=\"T_967ac_row1_col2\" class=\"data row1 col2\" >0.9918</td>\n",
              "      <td id=\"T_967ac_row1_col3\" class=\"data row1 col3\" >0.5837</td>\n",
              "      <td id=\"T_967ac_row1_col4\" class=\"data row1 col4\" >0.3218</td>\n",
              "      <td id=\"T_967ac_row1_col5\" class=\"data row1 col5\" >0.6773</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_967ac_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_967ac_row2_col0\" class=\"data row2 col0\" >0.7390</td>\n",
              "      <td id=\"T_967ac_row2_col1\" class=\"data row2 col1\" >0.9687</td>\n",
              "      <td id=\"T_967ac_row2_col2\" class=\"data row2 col2\" >0.9842</td>\n",
              "      <td id=\"T_967ac_row2_col3\" class=\"data row2 col3\" >0.5854</td>\n",
              "      <td id=\"T_967ac_row2_col4\" class=\"data row2 col4\" >0.3210</td>\n",
              "      <td id=\"T_967ac_row2_col5\" class=\"data row2 col5\" >0.6813</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_967ac_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_967ac_row3_col0\" class=\"data row3 col0\" >0.7318</td>\n",
              "      <td id=\"T_967ac_row3_col1\" class=\"data row3 col1\" >0.9457</td>\n",
              "      <td id=\"T_967ac_row3_col2\" class=\"data row3 col2\" >0.9725</td>\n",
              "      <td id=\"T_967ac_row3_col3\" class=\"data row3 col3\" >0.5687</td>\n",
              "      <td id=\"T_967ac_row3_col4\" class=\"data row3 col4\" >0.3180</td>\n",
              "      <td id=\"T_967ac_row3_col5\" class=\"data row3 col5\" >0.6624</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_967ac_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_967ac_row4_col0\" class=\"data row4 col0\" >0.7520</td>\n",
              "      <td id=\"T_967ac_row4_col1\" class=\"data row4 col1\" >0.9988</td>\n",
              "      <td id=\"T_967ac_row4_col2\" class=\"data row4 col2\" >0.9994</td>\n",
              "      <td id=\"T_967ac_row4_col3\" class=\"data row4 col3\" >0.5807</td>\n",
              "      <td id=\"T_967ac_row4_col4\" class=\"data row4 col4\" >0.3246</td>\n",
              "      <td id=\"T_967ac_row4_col5\" class=\"data row4 col5\" >0.6872</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_967ac_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_967ac_row5_col0\" class=\"data row5 col0\" >0.7357</td>\n",
              "      <td id=\"T_967ac_row5_col1\" class=\"data row5 col1\" >0.9690</td>\n",
              "      <td id=\"T_967ac_row5_col2\" class=\"data row5 col2\" >0.9844</td>\n",
              "      <td id=\"T_967ac_row5_col3\" class=\"data row5 col3\" >0.5887</td>\n",
              "      <td id=\"T_967ac_row5_col4\" class=\"data row5 col4\" >0.3151</td>\n",
              "      <td id=\"T_967ac_row5_col5\" class=\"data row5 col5\" >0.6469</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_967ac_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_967ac_row6_col0\" class=\"data row6 col0\" >0.7553</td>\n",
              "      <td id=\"T_967ac_row6_col1\" class=\"data row6 col1\" >1.0148</td>\n",
              "      <td id=\"T_967ac_row6_col2\" class=\"data row6 col2\" >1.0074</td>\n",
              "      <td id=\"T_967ac_row6_col3\" class=\"data row6 col3\" >0.5546</td>\n",
              "      <td id=\"T_967ac_row6_col4\" class=\"data row6 col4\" >0.3213</td>\n",
              "      <td id=\"T_967ac_row6_col5\" class=\"data row6 col5\" >0.6585</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_967ac_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_967ac_row7_col0\" class=\"data row7 col0\" >0.7483</td>\n",
              "      <td id=\"T_967ac_row7_col1\" class=\"data row7 col1\" >0.9870</td>\n",
              "      <td id=\"T_967ac_row7_col2\" class=\"data row7 col2\" >0.9935</td>\n",
              "      <td id=\"T_967ac_row7_col3\" class=\"data row7 col3\" >0.5950</td>\n",
              "      <td id=\"T_967ac_row7_col4\" class=\"data row7 col4\" >0.3209</td>\n",
              "      <td id=\"T_967ac_row7_col5\" class=\"data row7 col5\" >0.6893</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_967ac_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "      <td id=\"T_967ac_row8_col0\" class=\"data row8 col0\" >0.7651</td>\n",
              "      <td id=\"T_967ac_row8_col1\" class=\"data row8 col1\" >1.0717</td>\n",
              "      <td id=\"T_967ac_row8_col2\" class=\"data row8 col2\" >1.0352</td>\n",
              "      <td id=\"T_967ac_row8_col3\" class=\"data row8 col3\" >0.5835</td>\n",
              "      <td id=\"T_967ac_row8_col4\" class=\"data row8 col4\" >0.3216</td>\n",
              "      <td id=\"T_967ac_row8_col5\" class=\"data row8 col5\" >0.6527</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_967ac_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "      <td id=\"T_967ac_row9_col0\" class=\"data row9 col0\" >0.7415</td>\n",
              "      <td id=\"T_967ac_row9_col1\" class=\"data row9 col1\" >0.9856</td>\n",
              "      <td id=\"T_967ac_row9_col2\" class=\"data row9 col2\" >0.9928</td>\n",
              "      <td id=\"T_967ac_row9_col3\" class=\"data row9 col3\" >0.6015</td>\n",
              "      <td id=\"T_967ac_row9_col4\" class=\"data row9 col4\" >0.3201</td>\n",
              "      <td id=\"T_967ac_row9_col5\" class=\"data row9 col5\" >0.6711</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_967ac_level0_row10\" class=\"row_heading level0 row10\" >Mean</th>\n",
              "      <td id=\"T_967ac_row10_col0\" class=\"data row10 col0\" >0.7457</td>\n",
              "      <td id=\"T_967ac_row10_col1\" class=\"data row10 col1\" >0.9907</td>\n",
              "      <td id=\"T_967ac_row10_col2\" class=\"data row10 col2\" >0.9952</td>\n",
              "      <td id=\"T_967ac_row10_col3\" class=\"data row10 col3\" >0.5806</td>\n",
              "      <td id=\"T_967ac_row10_col4\" class=\"data row10 col4\" >0.3208</td>\n",
              "      <td id=\"T_967ac_row10_col5\" class=\"data row10 col5\" >0.6706</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_967ac_level0_row11\" class=\"row_heading level0 row11\" >Std</th>\n",
              "      <td id=\"T_967ac_row11_col0\" class=\"data row11 col0\" >0.0094</td>\n",
              "      <td id=\"T_967ac_row11_col1\" class=\"data row11 col1\" >0.0322</td>\n",
              "      <td id=\"T_967ac_row11_col2\" class=\"data row11 col2\" >0.0160</td>\n",
              "      <td id=\"T_967ac_row11_col3\" class=\"data row11 col3\" >0.0135</td>\n",
              "      <td id=\"T_967ac_row11_col4\" class=\"data row11 col4\" >0.0026</td>\n",
              "      <td id=\"T_967ac_row11_col5\" class=\"data row11 col5\" >0.0140</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Processing:   0%|          | 0/7 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "e0305df78e8b4558afd582d8bf0bdd11"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"
                }
              }
            }
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Fitting 10 folds for each of 10 candidates, totalling 100 fits\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).\n"
          ]
        }
      ],
      "source": [
        "model_cat = tune_model(catboost,  fold=10, optimize = 'MAE')"
      ],
      "id": "b555c80f"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 475,
          "referenced_widgets": [
            "a8713d5cb5a0426c9b8401f30d8ccd44",
            "a9648745dcd5475b9c212812667c9205",
            "2d66cb5b382b461dade18dce38617210",
            "bdad38437143400ebc0fcc574c485d93",
            "a42090588f824fd0be5267300deadc72",
            "ad9d5d131b1d411da1f449fc1248f6ff",
            "687a0fa4c08b4619a8fef9ddc804a33c",
            "fd6714430e0344bda49e8c906d324b83",
            "b5ce0f59af5c486db30aeabd9a19ca0c",
            "95bf5130bd244a308b68a4d47cc75896",
            "2667a56326c14731b2d83e58f4dc6853"
          ]
        },
        "id": "395ae325",
        "outputId": "68b5cfda-f25a-4cd8-ec94-0dd069d16b87"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x79fcf61c6740>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_8eaec_row10_col0, #T_8eaec_row10_col1, #T_8eaec_row10_col2, #T_8eaec_row10_col3, #T_8eaec_row10_col4, #T_8eaec_row10_col5 {\n",
              "  background: yellow;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_8eaec\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_8eaec_level0_col0\" class=\"col_heading level0 col0\" >MAE</th>\n",
              "      <th id=\"T_8eaec_level0_col1\" class=\"col_heading level0 col1\" >MSE</th>\n",
              "      <th id=\"T_8eaec_level0_col2\" class=\"col_heading level0 col2\" >RMSE</th>\n",
              "      <th id=\"T_8eaec_level0_col3\" class=\"col_heading level0 col3\" >R2</th>\n",
              "      <th id=\"T_8eaec_level0_col4\" class=\"col_heading level0 col4\" >RMSLE</th>\n",
              "      <th id=\"T_8eaec_level0_col5\" class=\"col_heading level0 col5\" >MAPE</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th class=\"index_name level0\" >Fold</th>\n",
              "      <th class=\"blank col0\" >&nbsp;</th>\n",
              "      <th class=\"blank col1\" >&nbsp;</th>\n",
              "      <th class=\"blank col2\" >&nbsp;</th>\n",
              "      <th class=\"blank col3\" >&nbsp;</th>\n",
              "      <th class=\"blank col4\" >&nbsp;</th>\n",
              "      <th class=\"blank col5\" >&nbsp;</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_8eaec_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_8eaec_row0_col0\" class=\"data row0 col0\" >0.4861</td>\n",
              "      <td id=\"T_8eaec_row0_col1\" class=\"data row0 col1\" >0.4299</td>\n",
              "      <td id=\"T_8eaec_row0_col2\" class=\"data row0 col2\" >0.6556</td>\n",
              "      <td id=\"T_8eaec_row0_col3\" class=\"data row0 col3\" >0.8094</td>\n",
              "      <td id=\"T_8eaec_row0_col4\" class=\"data row0 col4\" >0.2274</td>\n",
              "      <td id=\"T_8eaec_row0_col5\" class=\"data row0 col5\" >0.4192</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8eaec_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_8eaec_row1_col0\" class=\"data row1 col0\" >0.4773</td>\n",
              "      <td id=\"T_8eaec_row1_col1\" class=\"data row1 col1\" >0.4210</td>\n",
              "      <td id=\"T_8eaec_row1_col2\" class=\"data row1 col2\" >0.6488</td>\n",
              "      <td id=\"T_8eaec_row1_col3\" class=\"data row1 col3\" >0.8219</td>\n",
              "      <td id=\"T_8eaec_row1_col4\" class=\"data row1 col4\" >0.2242</td>\n",
              "      <td id=\"T_8eaec_row1_col5\" class=\"data row1 col5\" >0.4099</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8eaec_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_8eaec_row2_col0\" class=\"data row2 col0\" >0.4840</td>\n",
              "      <td id=\"T_8eaec_row2_col1\" class=\"data row2 col1\" >0.4308</td>\n",
              "      <td id=\"T_8eaec_row2_col2\" class=\"data row2 col2\" >0.6563</td>\n",
              "      <td id=\"T_8eaec_row2_col3\" class=\"data row2 col3\" >0.8156</td>\n",
              "      <td id=\"T_8eaec_row2_col4\" class=\"data row2 col4\" >0.2252</td>\n",
              "      <td id=\"T_8eaec_row2_col5\" class=\"data row2 col5\" >0.4011</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8eaec_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_8eaec_row3_col0\" class=\"data row3 col0\" >0.4914</td>\n",
              "      <td id=\"T_8eaec_row3_col1\" class=\"data row3 col1\" >0.4506</td>\n",
              "      <td id=\"T_8eaec_row3_col2\" class=\"data row3 col2\" >0.6713</td>\n",
              "      <td id=\"T_8eaec_row3_col3\" class=\"data row3 col3\" >0.7945</td>\n",
              "      <td id=\"T_8eaec_row3_col4\" class=\"data row3 col4\" >0.2278</td>\n",
              "      <td id=\"T_8eaec_row3_col5\" class=\"data row3 col5\" >0.4091</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8eaec_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_8eaec_row4_col0\" class=\"data row4 col0\" >0.4919</td>\n",
              "      <td id=\"T_8eaec_row4_col1\" class=\"data row4 col1\" >0.4500</td>\n",
              "      <td id=\"T_8eaec_row4_col2\" class=\"data row4 col2\" >0.6708</td>\n",
              "      <td id=\"T_8eaec_row4_col3\" class=\"data row4 col3\" >0.8111</td>\n",
              "      <td id=\"T_8eaec_row4_col4\" class=\"data row4 col4\" >0.2278</td>\n",
              "      <td id=\"T_8eaec_row4_col5\" class=\"data row4 col5\" >0.4186</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8eaec_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_8eaec_row5_col0\" class=\"data row5 col0\" >0.4628</td>\n",
              "      <td id=\"T_8eaec_row5_col1\" class=\"data row5 col1\" >0.3926</td>\n",
              "      <td id=\"T_8eaec_row5_col2\" class=\"data row5 col2\" >0.6266</td>\n",
              "      <td id=\"T_8eaec_row5_col3\" class=\"data row5 col3\" >0.8334</td>\n",
              "      <td id=\"T_8eaec_row5_col4\" class=\"data row5 col4\" >0.2155</td>\n",
              "      <td id=\"T_8eaec_row5_col5\" class=\"data row5 col5\" >0.3830</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8eaec_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_8eaec_row6_col0\" class=\"data row6 col0\" >0.4763</td>\n",
              "      <td id=\"T_8eaec_row6_col1\" class=\"data row6 col1\" >0.4132</td>\n",
              "      <td id=\"T_8eaec_row6_col2\" class=\"data row6 col2\" >0.6428</td>\n",
              "      <td id=\"T_8eaec_row6_col3\" class=\"data row6 col3\" >0.8187</td>\n",
              "      <td id=\"T_8eaec_row6_col4\" class=\"data row6 col4\" >0.2208</td>\n",
              "      <td id=\"T_8eaec_row6_col5\" class=\"data row6 col5\" >0.3971</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8eaec_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_8eaec_row7_col0\" class=\"data row7 col0\" >0.4891</td>\n",
              "      <td id=\"T_8eaec_row7_col1\" class=\"data row7 col1\" >0.4334</td>\n",
              "      <td id=\"T_8eaec_row7_col2\" class=\"data row7 col2\" >0.6583</td>\n",
              "      <td id=\"T_8eaec_row7_col3\" class=\"data row7 col3\" >0.8222</td>\n",
              "      <td id=\"T_8eaec_row7_col4\" class=\"data row7 col4\" >0.2240</td>\n",
              "      <td id=\"T_8eaec_row7_col5\" class=\"data row7 col5\" >0.4118</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8eaec_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "      <td id=\"T_8eaec_row8_col0\" class=\"data row8 col0\" >0.4835</td>\n",
              "      <td id=\"T_8eaec_row8_col1\" class=\"data row8 col1\" >0.4378</td>\n",
              "      <td id=\"T_8eaec_row8_col2\" class=\"data row8 col2\" >0.6617</td>\n",
              "      <td id=\"T_8eaec_row8_col3\" class=\"data row8 col3\" >0.8299</td>\n",
              "      <td id=\"T_8eaec_row8_col4\" class=\"data row8 col4\" >0.2206</td>\n",
              "      <td id=\"T_8eaec_row8_col5\" class=\"data row8 col5\" >0.3948</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8eaec_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "      <td id=\"T_8eaec_row9_col0\" class=\"data row9 col0\" >0.4837</td>\n",
              "      <td id=\"T_8eaec_row9_col1\" class=\"data row9 col1\" >0.4255</td>\n",
              "      <td id=\"T_8eaec_row9_col2\" class=\"data row9 col2\" >0.6523</td>\n",
              "      <td id=\"T_8eaec_row9_col3\" class=\"data row9 col3\" >0.8280</td>\n",
              "      <td id=\"T_8eaec_row9_col4\" class=\"data row9 col4\" >0.2254</td>\n",
              "      <td id=\"T_8eaec_row9_col5\" class=\"data row9 col5\" >0.4136</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8eaec_level0_row10\" class=\"row_heading level0 row10\" >Mean</th>\n",
              "      <td id=\"T_8eaec_row10_col0\" class=\"data row10 col0\" >0.4826</td>\n",
              "      <td id=\"T_8eaec_row10_col1\" class=\"data row10 col1\" >0.4285</td>\n",
              "      <td id=\"T_8eaec_row10_col2\" class=\"data row10 col2\" >0.6544</td>\n",
              "      <td id=\"T_8eaec_row10_col3\" class=\"data row10 col3\" >0.8184</td>\n",
              "      <td id=\"T_8eaec_row10_col4\" class=\"data row10 col4\" >0.2239</td>\n",
              "      <td id=\"T_8eaec_row10_col5\" class=\"data row10 col5\" >0.4058</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8eaec_level0_row11\" class=\"row_heading level0 row11\" >Std</th>\n",
              "      <td id=\"T_8eaec_row11_col0\" class=\"data row11 col0\" >0.0083</td>\n",
              "      <td id=\"T_8eaec_row11_col1\" class=\"data row11 col1\" >0.0163</td>\n",
              "      <td id=\"T_8eaec_row11_col2\" class=\"data row11 col2\" >0.0125</td>\n",
              "      <td id=\"T_8eaec_row11_col3\" class=\"data row11 col3\" >0.0109</td>\n",
              "      <td id=\"T_8eaec_row11_col4\" class=\"data row11 col4\" >0.0037</td>\n",
              "      <td id=\"T_8eaec_row11_col5\" class=\"data row11 col5\" >0.0110</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Processing:   0%|          | 0/7 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "a8713d5cb5a0426c9b8401f30d8ccd44"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"
                }
              }
            }
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Fitting 10 folds for each of 10 candidates, totalling 100 fits\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        }
      ],
      "source": [
        "model_xg = tune_model(xgboost,  fold=10, optimize = 'MAE')"
      ],
      "id": "395ae325"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 475,
          "referenced_widgets": [
            "52b273fa1f2e4eb5a7c8c4bb8c045dcb",
            "9072f3e406e949eab2aaf8f25fa522cd",
            "37a24b4ac9e2410ab242e24192f7e197",
            "7974202f141f43528e8c905a0914cdd9",
            "64c565de32f940e1a0446755dc618510",
            "d9a29ec85e3745e69d0b2395cf4fa2ab",
            "f99265a5d203418d9413682284ee8bd1",
            "e9e097f114d24bddb141580ba455c360",
            "8dfd3131101746168d0aee042b1acfba",
            "4ede7d9509914419a82bff4ddeb9b886",
            "2ba42e7c88f94667b42ee4489891c453"
          ]
        },
        "id": "2b0a531f",
        "outputId": "0c658c63-b148-48a2-99cb-9616eb66d7c2"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x79fcf666bfa0>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_4d44b_row10_col0, #T_4d44b_row10_col1, #T_4d44b_row10_col2, #T_4d44b_row10_col3, #T_4d44b_row10_col4, #T_4d44b_row10_col5 {\n",
              "  background: yellow;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_4d44b\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_4d44b_level0_col0\" class=\"col_heading level0 col0\" >MAE</th>\n",
              "      <th id=\"T_4d44b_level0_col1\" class=\"col_heading level0 col1\" >MSE</th>\n",
              "      <th id=\"T_4d44b_level0_col2\" class=\"col_heading level0 col2\" >RMSE</th>\n",
              "      <th id=\"T_4d44b_level0_col3\" class=\"col_heading level0 col3\" >R2</th>\n",
              "      <th id=\"T_4d44b_level0_col4\" class=\"col_heading level0 col4\" >RMSLE</th>\n",
              "      <th id=\"T_4d44b_level0_col5\" class=\"col_heading level0 col5\" >MAPE</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th class=\"index_name level0\" >Fold</th>\n",
              "      <th class=\"blank col0\" >&nbsp;</th>\n",
              "      <th class=\"blank col1\" >&nbsp;</th>\n",
              "      <th class=\"blank col2\" >&nbsp;</th>\n",
              "      <th class=\"blank col3\" >&nbsp;</th>\n",
              "      <th class=\"blank col4\" >&nbsp;</th>\n",
              "      <th class=\"blank col5\" >&nbsp;</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_4d44b_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_4d44b_row0_col0\" class=\"data row0 col0\" >0.4488</td>\n",
              "      <td id=\"T_4d44b_row0_col1\" class=\"data row0 col1\" >0.4309</td>\n",
              "      <td id=\"T_4d44b_row0_col2\" class=\"data row0 col2\" >0.6564</td>\n",
              "      <td id=\"T_4d44b_row0_col3\" class=\"data row0 col3\" >0.8089</td>\n",
              "      <td id=\"T_4d44b_row0_col4\" class=\"data row0 col4\" >0.2218</td>\n",
              "      <td id=\"T_4d44b_row0_col5\" class=\"data row0 col5\" >0.3852</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_4d44b_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_4d44b_row1_col0\" class=\"data row1 col0\" >0.4273</td>\n",
              "      <td id=\"T_4d44b_row1_col1\" class=\"data row1 col1\" >0.3916</td>\n",
              "      <td id=\"T_4d44b_row1_col2\" class=\"data row1 col2\" >0.6258</td>\n",
              "      <td id=\"T_4d44b_row1_col3\" class=\"data row1 col3\" >0.8343</td>\n",
              "      <td id=\"T_4d44b_row1_col4\" class=\"data row1 col4\" >0.2089</td>\n",
              "      <td id=\"T_4d44b_row1_col5\" class=\"data row1 col5\" >0.3505</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_4d44b_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_4d44b_row2_col0\" class=\"data row2 col0\" >0.4389</td>\n",
              "      <td id=\"T_4d44b_row2_col1\" class=\"data row2 col1\" >0.3899</td>\n",
              "      <td id=\"T_4d44b_row2_col2\" class=\"data row2 col2\" >0.6244</td>\n",
              "      <td id=\"T_4d44b_row2_col3\" class=\"data row2 col3\" >0.8331</td>\n",
              "      <td id=\"T_4d44b_row2_col4\" class=\"data row2 col4\" >0.2122</td>\n",
              "      <td id=\"T_4d44b_row2_col5\" class=\"data row2 col5\" >0.3557</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_4d44b_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_4d44b_row3_col0\" class=\"data row3 col0\" >0.4517</td>\n",
              "      <td id=\"T_4d44b_row3_col1\" class=\"data row3 col1\" >0.4102</td>\n",
              "      <td id=\"T_4d44b_row3_col2\" class=\"data row3 col2\" >0.6405</td>\n",
              "      <td id=\"T_4d44b_row3_col3\" class=\"data row3 col3\" >0.8129</td>\n",
              "      <td id=\"T_4d44b_row3_col4\" class=\"data row3 col4\" >0.2154</td>\n",
              "      <td id=\"T_4d44b_row3_col5\" class=\"data row3 col5\" >0.3626</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_4d44b_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_4d44b_row4_col0\" class=\"data row4 col0\" >0.4508</td>\n",
              "      <td id=\"T_4d44b_row4_col1\" class=\"data row4 col1\" >0.4225</td>\n",
              "      <td id=\"T_4d44b_row4_col2\" class=\"data row4 col2\" >0.6500</td>\n",
              "      <td id=\"T_4d44b_row4_col3\" class=\"data row4 col3\" >0.8226</td>\n",
              "      <td id=\"T_4d44b_row4_col4\" class=\"data row4 col4\" >0.2218</td>\n",
              "      <td id=\"T_4d44b_row4_col5\" class=\"data row4 col5\" >0.3881</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_4d44b_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_4d44b_row5_col0\" class=\"data row5 col0\" >0.4372</td>\n",
              "      <td id=\"T_4d44b_row5_col1\" class=\"data row5 col1\" >0.3945</td>\n",
              "      <td id=\"T_4d44b_row5_col2\" class=\"data row5 col2\" >0.6281</td>\n",
              "      <td id=\"T_4d44b_row5_col3\" class=\"data row5 col3\" >0.8325</td>\n",
              "      <td id=\"T_4d44b_row5_col4\" class=\"data row5 col4\" >0.2126</td>\n",
              "      <td id=\"T_4d44b_row5_col5\" class=\"data row5 col5\" >0.3575</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_4d44b_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_4d44b_row6_col0\" class=\"data row6 col0\" >0.4265</td>\n",
              "      <td id=\"T_4d44b_row6_col1\" class=\"data row6 col1\" >0.3679</td>\n",
              "      <td id=\"T_4d44b_row6_col2\" class=\"data row6 col2\" >0.6065</td>\n",
              "      <td id=\"T_4d44b_row6_col3\" class=\"data row6 col3\" >0.8385</td>\n",
              "      <td id=\"T_4d44b_row6_col4\" class=\"data row6 col4\" >0.2074</td>\n",
              "      <td id=\"T_4d44b_row6_col5\" class=\"data row6 col5\" >0.3580</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_4d44b_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_4d44b_row7_col0\" class=\"data row7 col0\" >0.4474</td>\n",
              "      <td id=\"T_4d44b_row7_col1\" class=\"data row7 col1\" >0.4578</td>\n",
              "      <td id=\"T_4d44b_row7_col2\" class=\"data row7 col2\" >0.6766</td>\n",
              "      <td id=\"T_4d44b_row7_col3\" class=\"data row7 col3\" >0.8122</td>\n",
              "      <td id=\"T_4d44b_row7_col4\" class=\"data row7 col4\" >0.2193</td>\n",
              "      <td id=\"T_4d44b_row7_col5\" class=\"data row7 col5\" >0.3810</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_4d44b_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "      <td id=\"T_4d44b_row8_col0\" class=\"data row8 col0\" >0.4541</td>\n",
              "      <td id=\"T_4d44b_row8_col1\" class=\"data row8 col1\" >0.4370</td>\n",
              "      <td id=\"T_4d44b_row8_col2\" class=\"data row8 col2\" >0.6611</td>\n",
              "      <td id=\"T_4d44b_row8_col3\" class=\"data row8 col3\" >0.8301</td>\n",
              "      <td id=\"T_4d44b_row8_col4\" class=\"data row8 col4\" >0.2094</td>\n",
              "      <td id=\"T_4d44b_row8_col5\" class=\"data row8 col5\" >0.3544</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_4d44b_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "      <td id=\"T_4d44b_row9_col0\" class=\"data row9 col0\" >0.4542</td>\n",
              "      <td id=\"T_4d44b_row9_col1\" class=\"data row9 col1\" >0.4293</td>\n",
              "      <td id=\"T_4d44b_row9_col2\" class=\"data row9 col2\" >0.6552</td>\n",
              "      <td id=\"T_4d44b_row9_col3\" class=\"data row9 col3\" >0.8264</td>\n",
              "      <td id=\"T_4d44b_row9_col4\" class=\"data row9 col4\" >0.2190</td>\n",
              "      <td id=\"T_4d44b_row9_col5\" class=\"data row9 col5\" >0.3828</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_4d44b_level0_row10\" class=\"row_heading level0 row10\" >Mean</th>\n",
              "      <td id=\"T_4d44b_row10_col0\" class=\"data row10 col0\" >0.4437</td>\n",
              "      <td id=\"T_4d44b_row10_col1\" class=\"data row10 col1\" >0.4132</td>\n",
              "      <td id=\"T_4d44b_row10_col2\" class=\"data row10 col2\" >0.6425</td>\n",
              "      <td id=\"T_4d44b_row10_col3\" class=\"data row10 col3\" >0.8252</td>\n",
              "      <td id=\"T_4d44b_row10_col4\" class=\"data row10 col4\" >0.2148</td>\n",
              "      <td id=\"T_4d44b_row10_col5\" class=\"data row10 col5\" >0.3676</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_4d44b_level0_row11\" class=\"row_heading level0 row11\" >Std</th>\n",
              "      <td id=\"T_4d44b_row11_col0\" class=\"data row11 col0\" >0.0100</td>\n",
              "      <td id=\"T_4d44b_row11_col1\" class=\"data row11 col1\" >0.0258</td>\n",
              "      <td id=\"T_4d44b_row11_col2\" class=\"data row11 col2\" >0.0201</td>\n",
              "      <td id=\"T_4d44b_row11_col3\" class=\"data row11 col3\" >0.0100</td>\n",
              "      <td id=\"T_4d44b_row11_col4\" class=\"data row11 col4\" >0.0052</td>\n",
              "      <td id=\"T_4d44b_row11_col5\" class=\"data row11 col5\" >0.0140</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Processing:   0%|          | 0/7 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "52b273fa1f2e4eb5a7c8c4bb8c045dcb"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"
                }
              }
            }
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Fitting 10 folds for each of 10 candidates, totalling 100 fits\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        }
      ],
      "source": [
        "model_knn = tune_model(knn,  fold=10, optimize = 'MAE')"
      ],
      "id": "2b0a531f"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "bd62ede8"
      },
      "outputs": [],
      "source": [
        "tuned_models = [model_xg, model_cat, model_knn, model_et, model_rf]"
      ],
      "id": "bd62ede8"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "caf69235",
        "outputId": "ec557719-568d-4bef-82c5-bba29e905bfc"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x79fcf6366800>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "</style>\n",
              "<table id=\"T_7add9\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_7add9_level0_col0\" class=\"col_heading level0 col0\" >Model</th>\n",
              "      <th id=\"T_7add9_level0_col1\" class=\"col_heading level0 col1\" >MAE</th>\n",
              "      <th id=\"T_7add9_level0_col2\" class=\"col_heading level0 col2\" >MSE</th>\n",
              "      <th id=\"T_7add9_level0_col3\" class=\"col_heading level0 col3\" >RMSE</th>\n",
              "      <th id=\"T_7add9_level0_col4\" class=\"col_heading level0 col4\" >R2</th>\n",
              "      <th id=\"T_7add9_level0_col5\" class=\"col_heading level0 col5\" >RMSLE</th>\n",
              "      <th id=\"T_7add9_level0_col6\" class=\"col_heading level0 col6\" >MAPE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_7add9_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_7add9_row0_col0\" class=\"data row0 col0\" >Extreme Gradient Boosting</td>\n",
              "      <td id=\"T_7add9_row0_col1\" class=\"data row0 col1\" >0.4719</td>\n",
              "      <td id=\"T_7add9_row0_col2\" class=\"data row0 col2\" >0.4073</td>\n",
              "      <td id=\"T_7add9_row0_col3\" class=\"data row0 col3\" >0.6382</td>\n",
              "      <td id=\"T_7add9_row0_col4\" class=\"data row0 col4\" >0.8229</td>\n",
              "      <td id=\"T_7add9_row0_col5\" class=\"data row0 col5\" >0.2210</td>\n",
              "      <td id=\"T_7add9_row0_col6\" class=\"data row0 col6\" >0.4026</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "       ID         월         일    측정 시간대  섭씨 온도(°⁣C)  절대 온도(K)  이슬점 온도(°C)  \\\n",
              "15903 NaN  1.297777 -0.641638  1.340711         NaN -0.911059   -0.686442   \n",
              "30414 NaN -1.593541 -1.436790  0.445705         NaN -1.183978   -1.429299   \n",
              "32470 NaN  1.586909 -0.982417 -1.344308         NaN -2.257700   -2.206928   \n",
              "6378  NaN  0.430382  1.630225  0.445705         NaN  0.970647    0.358300   \n",
              "8812  NaN -0.147882  1.289446 -1.344308         NaN  0.343412    0.685473   \n",
              "...    ..       ...       ...       ...         ...       ...         ...   \n",
              "36483 NaN -1.015277  0.948666  1.340711         NaN -0.347265   -1.084740   \n",
              "23721 NaN -1.593541  1.062260 -1.344308         NaN -0.769811   -0.234405   \n",
              "30505 NaN -0.726145  0.948666  0.445705         NaN -0.583077   -0.849238   \n",
              "28719 NaN -0.147882  1.175853 -1.344308         NaN  0.613937    1.058482   \n",
              "24045 NaN -1.304409  0.607887  1.340711         NaN  0.356579    0.432586   \n",
              "\n",
              "       상대 습도 (%)  대기압(mbar)  포화 증기압(mbar)  실제 증기압(mbar)  증기압 부족량(mbar)  \\\n",
              "15903   1.216522  -0.910316     -0.878844           NaN      -0.757114   \n",
              "30414   0.147466  -0.580547     -0.996483           NaN      -0.566402   \n",
              "32470   1.023843   1.968081     -1.308535           NaN      -0.766746   \n",
              "6378   -1.721516   1.117027      0.972419           NaN       1.367694   \n",
              "8812    0.315283   0.175316      0.117990           NaN      -0.267811   \n",
              "...          ...        ...           ...           ...            ...   \n",
              "36483  -1.267789  -0.334637     -0.508592           NaN       0.034632   \n",
              "23721   1.291107   1.241682     -0.698052           NaN      -0.762894   \n",
              "30505  -0.219244  -0.749398     -0.686907           NaN      -0.366057   \n",
              "28719   0.464454  -0.224714      0.369365           NaN      -0.271664   \n",
              "24045   0.023158  -0.985109      0.030070           NaN      -0.163786   \n",
              "\n",
              "       수증기 함량 (g/kg)  공기 밀도 (g/m**3)  풍향 (deg)  풍속 (m/s)_x  풍속 (m/s)_y  \\\n",
              "15903      -0.745008        0.671659 -0.115931         NaN        1.55   \n",
              "30414      -1.212049        1.023561 -0.382577         NaN        2.73   \n",
              "32470      -1.581161        2.651016 -0.169260         NaN        0.57   \n",
              "6378        0.151408       -0.676247 -1.620762         NaN        2.67   \n",
              "8812        0.550652       -0.329151 -0.528343         NaN        0.53   \n",
              "...              ...             ...       ...         ...         ...   \n",
              "36483      -1.016193        0.273207  0.832144         NaN        1.97   \n",
              "23721      -0.421093        0.951967  0.556017         NaN        1.14   \n",
              "30505      -0.861769        0.400712  0.237227         NaN        4.00   \n",
              "28719       1.055356       -0.667646  0.509799         NaN        1.10   \n",
              "24045       0.279467       -0.551778  0.404325         NaN        6.37   \n",
              "\n",
              "       prediction_label  \n",
              "15903          1.341572  \n",
              "30414          2.909111  \n",
              "32470          1.023541  \n",
              "6378           2.154532  \n",
              "8812           0.934761  \n",
              "...                 ...  \n",
              "36483          1.996184  \n",
              "23721          1.398713  \n",
              "30505          2.247017  \n",
              "28719          1.763384  \n",
              "24045          6.168665  \n",
              "\n",
              "[9769 rows x 18 columns]"
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-a35fe7a2-3d16-4b5c-b122-bb349bbe61ed\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>월</th>\n",
              "      <th>일</th>\n",
              "      <th>측정 시간대</th>\n",
              "      <th>섭씨 온도(°⁣C)</th>\n",
              "      <th>절대 온도(K)</th>\n",
              "      <th>이슬점 온도(°C)</th>\n",
              "      <th>상대 습도 (%)</th>\n",
              "      <th>대기압(mbar)</th>\n",
              "      <th>포화 증기압(mbar)</th>\n",
              "      <th>실제 증기압(mbar)</th>\n",
              "      <th>증기압 부족량(mbar)</th>\n",
              "      <th>수증기 함량 (g/kg)</th>\n",
              "      <th>공기 밀도 (g/m**3)</th>\n",
              "      <th>풍향 (deg)</th>\n",
              "      <th>풍속 (m/s)_x</th>\n",
              "      <th>풍속 (m/s)_y</th>\n",
              "      <th>prediction_label</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>15903</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.297777</td>\n",
              "      <td>-0.641638</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.911059</td>\n",
              "      <td>-0.686442</td>\n",
              "      <td>1.216522</td>\n",
              "      <td>-0.910316</td>\n",
              "      <td>-0.878844</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.757114</td>\n",
              "      <td>-0.745008</td>\n",
              "      <td>0.671659</td>\n",
              "      <td>-0.115931</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.55</td>\n",
              "      <td>1.341572</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30414</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.593541</td>\n",
              "      <td>-1.436790</td>\n",
              "      <td>0.445705</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.183978</td>\n",
              "      <td>-1.429299</td>\n",
              "      <td>0.147466</td>\n",
              "      <td>-0.580547</td>\n",
              "      <td>-0.996483</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.566402</td>\n",
              "      <td>-1.212049</td>\n",
              "      <td>1.023561</td>\n",
              "      <td>-0.382577</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.73</td>\n",
              "      <td>2.909111</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32470</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.586909</td>\n",
              "      <td>-0.982417</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-2.257700</td>\n",
              "      <td>-2.206928</td>\n",
              "      <td>1.023843</td>\n",
              "      <td>1.968081</td>\n",
              "      <td>-1.308535</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.766746</td>\n",
              "      <td>-1.581161</td>\n",
              "      <td>2.651016</td>\n",
              "      <td>-0.169260</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.57</td>\n",
              "      <td>1.023541</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6378</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.430382</td>\n",
              "      <td>1.630225</td>\n",
              "      <td>0.445705</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.970647</td>\n",
              "      <td>0.358300</td>\n",
              "      <td>-1.721516</td>\n",
              "      <td>1.117027</td>\n",
              "      <td>0.972419</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.367694</td>\n",
              "      <td>0.151408</td>\n",
              "      <td>-0.676247</td>\n",
              "      <td>-1.620762</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.67</td>\n",
              "      <td>2.154532</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8812</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.147882</td>\n",
              "      <td>1.289446</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.343412</td>\n",
              "      <td>0.685473</td>\n",
              "      <td>0.315283</td>\n",
              "      <td>0.175316</td>\n",
              "      <td>0.117990</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.267811</td>\n",
              "      <td>0.550652</td>\n",
              "      <td>-0.329151</td>\n",
              "      <td>-0.528343</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.53</td>\n",
              "      <td>0.934761</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36483</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.015277</td>\n",
              "      <td>0.948666</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.347265</td>\n",
              "      <td>-1.084740</td>\n",
              "      <td>-1.267789</td>\n",
              "      <td>-0.334637</td>\n",
              "      <td>-0.508592</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.034632</td>\n",
              "      <td>-1.016193</td>\n",
              "      <td>0.273207</td>\n",
              "      <td>0.832144</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.97</td>\n",
              "      <td>1.996184</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23721</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.593541</td>\n",
              "      <td>1.062260</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.769811</td>\n",
              "      <td>-0.234405</td>\n",
              "      <td>1.291107</td>\n",
              "      <td>1.241682</td>\n",
              "      <td>-0.698052</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.762894</td>\n",
              "      <td>-0.421093</td>\n",
              "      <td>0.951967</td>\n",
              "      <td>0.556017</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.14</td>\n",
              "      <td>1.398713</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30505</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.726145</td>\n",
              "      <td>0.948666</td>\n",
              "      <td>0.445705</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.583077</td>\n",
              "      <td>-0.849238</td>\n",
              "      <td>-0.219244</td>\n",
              "      <td>-0.749398</td>\n",
              "      <td>-0.686907</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.366057</td>\n",
              "      <td>-0.861769</td>\n",
              "      <td>0.400712</td>\n",
              "      <td>0.237227</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.00</td>\n",
              "      <td>2.247017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28719</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.147882</td>\n",
              "      <td>1.175853</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.613937</td>\n",
              "      <td>1.058482</td>\n",
              "      <td>0.464454</td>\n",
              "      <td>-0.224714</td>\n",
              "      <td>0.369365</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.271664</td>\n",
              "      <td>1.055356</td>\n",
              "      <td>-0.667646</td>\n",
              "      <td>0.509799</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.10</td>\n",
              "      <td>1.763384</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24045</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.304409</td>\n",
              "      <td>0.607887</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.356579</td>\n",
              "      <td>0.432586</td>\n",
              "      <td>0.023158</td>\n",
              "      <td>-0.985109</td>\n",
              "      <td>0.030070</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.163786</td>\n",
              "      <td>0.279467</td>\n",
              "      <td>-0.551778</td>\n",
              "      <td>0.404325</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.37</td>\n",
              "      <td>6.168665</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>9769 rows × 18 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a35fe7a2-3d16-4b5c-b122-bb349bbe61ed')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-77e0ec1f-b8b5-4acc-ad0e-8bb7dcc6023b\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-77e0ec1f-b8b5-4acc-ad0e-8bb7dcc6023b')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-77e0ec1f-b8b5-4acc-ad0e-8bb7dcc6023b button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a35fe7a2-3d16-4b5c-b122-bb349bbe61ed button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a35fe7a2-3d16-4b5c-b122-bb349bbe61ed');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x79fcf6364190>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "</style>\n",
              "<table id=\"T_0eb20\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_0eb20_level0_col0\" class=\"col_heading level0 col0\" >Model</th>\n",
              "      <th id=\"T_0eb20_level0_col1\" class=\"col_heading level0 col1\" >MAE</th>\n",
              "      <th id=\"T_0eb20_level0_col2\" class=\"col_heading level0 col2\" >MSE</th>\n",
              "      <th id=\"T_0eb20_level0_col3\" class=\"col_heading level0 col3\" >RMSE</th>\n",
              "      <th id=\"T_0eb20_level0_col4\" class=\"col_heading level0 col4\" >R2</th>\n",
              "      <th id=\"T_0eb20_level0_col5\" class=\"col_heading level0 col5\" >RMSLE</th>\n",
              "      <th id=\"T_0eb20_level0_col6\" class=\"col_heading level0 col6\" >MAPE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_0eb20_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_0eb20_row0_col0\" class=\"data row0 col0\" >CatBoost Regressor</td>\n",
              "      <td id=\"T_0eb20_row0_col1\" class=\"data row0 col1\" >0.5223</td>\n",
              "      <td id=\"T_0eb20_row0_col2\" class=\"data row0 col2\" >0.4846</td>\n",
              "      <td id=\"T_0eb20_row0_col3\" class=\"data row0 col3\" >0.6961</td>\n",
              "      <td id=\"T_0eb20_row0_col4\" class=\"data row0 col4\" >0.7893</td>\n",
              "      <td id=\"T_0eb20_row0_col5\" class=\"data row0 col5\" >0.2386</td>\n",
              "      <td id=\"T_0eb20_row0_col6\" class=\"data row0 col6\" >0.4516</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "       ID         월         일    측정 시간대  섭씨 온도(°⁣C)  절대 온도(K)  이슬점 온도(°C)  \\\n",
              "15903 NaN  1.297777 -0.641638  1.340711         NaN -0.911059   -0.686442   \n",
              "30414 NaN -1.593541 -1.436790  0.445705         NaN -1.183978   -1.429299   \n",
              "32470 NaN  1.586909 -0.982417 -1.344308         NaN -2.257700   -2.206928   \n",
              "6378  NaN  0.430382  1.630225  0.445705         NaN  0.970647    0.358300   \n",
              "8812  NaN -0.147882  1.289446 -1.344308         NaN  0.343412    0.685473   \n",
              "...    ..       ...       ...       ...         ...       ...         ...   \n",
              "36483 NaN -1.015277  0.948666  1.340711         NaN -0.347265   -1.084740   \n",
              "23721 NaN -1.593541  1.062260 -1.344308         NaN -0.769811   -0.234405   \n",
              "30505 NaN -0.726145  0.948666  0.445705         NaN -0.583077   -0.849238   \n",
              "28719 NaN -0.147882  1.175853 -1.344308         NaN  0.613937    1.058482   \n",
              "24045 NaN -1.304409  0.607887  1.340711         NaN  0.356579    0.432586   \n",
              "\n",
              "       상대 습도 (%)  대기압(mbar)  포화 증기압(mbar)  실제 증기압(mbar)  증기압 부족량(mbar)  \\\n",
              "15903   1.216522  -0.910316     -0.878844           NaN      -0.757114   \n",
              "30414   0.147466  -0.580547     -0.996483           NaN      -0.566402   \n",
              "32470   1.023843   1.968081     -1.308535           NaN      -0.766746   \n",
              "6378   -1.721516   1.117027      0.972419           NaN       1.367694   \n",
              "8812    0.315283   0.175316      0.117990           NaN      -0.267811   \n",
              "...          ...        ...           ...           ...            ...   \n",
              "36483  -1.267789  -0.334637     -0.508592           NaN       0.034632   \n",
              "23721   1.291107   1.241682     -0.698052           NaN      -0.762894   \n",
              "30505  -0.219244  -0.749398     -0.686907           NaN      -0.366057   \n",
              "28719   0.464454  -0.224714      0.369365           NaN      -0.271664   \n",
              "24045   0.023158  -0.985109      0.030070           NaN      -0.163786   \n",
              "\n",
              "       수증기 함량 (g/kg)  공기 밀도 (g/m**3)  풍향 (deg)  풍속 (m/s)_x  풍속 (m/s)_y  \\\n",
              "15903      -0.745008        0.671659 -0.115931         NaN        1.55   \n",
              "30414      -1.212049        1.023561 -0.382577         NaN        2.73   \n",
              "32470      -1.581161        2.651016 -0.169260         NaN        0.57   \n",
              "6378        0.151408       -0.676247 -1.620762         NaN        2.67   \n",
              "8812        0.550652       -0.329151 -0.528343         NaN        0.53   \n",
              "...              ...             ...       ...         ...         ...   \n",
              "36483      -1.016193        0.273207  0.832144         NaN        1.97   \n",
              "23721      -0.421093        0.951967  0.556017         NaN        1.14   \n",
              "30505      -0.861769        0.400712  0.237227         NaN        4.00   \n",
              "28719       1.055356       -0.667646  0.509799         NaN        1.10   \n",
              "24045       0.279467       -0.551778  0.404325         NaN        6.37   \n",
              "\n",
              "       prediction_label  \n",
              "15903          1.329056  \n",
              "30414          2.383562  \n",
              "32470          1.079659  \n",
              "6378           1.906141  \n",
              "8812           0.442748  \n",
              "...                 ...  \n",
              "36483          1.490440  \n",
              "23721          1.442047  \n",
              "30505          2.487644  \n",
              "28719          1.350288  \n",
              "24045          6.450447  \n",
              "\n",
              "[9769 rows x 18 columns]"
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-099b1d58-ccf0-497d-8d65-e7ccb9df1f73\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>월</th>\n",
              "      <th>일</th>\n",
              "      <th>측정 시간대</th>\n",
              "      <th>섭씨 온도(°⁣C)</th>\n",
              "      <th>절대 온도(K)</th>\n",
              "      <th>이슬점 온도(°C)</th>\n",
              "      <th>상대 습도 (%)</th>\n",
              "      <th>대기압(mbar)</th>\n",
              "      <th>포화 증기압(mbar)</th>\n",
              "      <th>실제 증기압(mbar)</th>\n",
              "      <th>증기압 부족량(mbar)</th>\n",
              "      <th>수증기 함량 (g/kg)</th>\n",
              "      <th>공기 밀도 (g/m**3)</th>\n",
              "      <th>풍향 (deg)</th>\n",
              "      <th>풍속 (m/s)_x</th>\n",
              "      <th>풍속 (m/s)_y</th>\n",
              "      <th>prediction_label</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>15903</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.297777</td>\n",
              "      <td>-0.641638</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.911059</td>\n",
              "      <td>-0.686442</td>\n",
              "      <td>1.216522</td>\n",
              "      <td>-0.910316</td>\n",
              "      <td>-0.878844</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.757114</td>\n",
              "      <td>-0.745008</td>\n",
              "      <td>0.671659</td>\n",
              "      <td>-0.115931</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.55</td>\n",
              "      <td>1.329056</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30414</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.593541</td>\n",
              "      <td>-1.436790</td>\n",
              "      <td>0.445705</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.183978</td>\n",
              "      <td>-1.429299</td>\n",
              "      <td>0.147466</td>\n",
              "      <td>-0.580547</td>\n",
              "      <td>-0.996483</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.566402</td>\n",
              "      <td>-1.212049</td>\n",
              "      <td>1.023561</td>\n",
              "      <td>-0.382577</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.73</td>\n",
              "      <td>2.383562</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32470</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.586909</td>\n",
              "      <td>-0.982417</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-2.257700</td>\n",
              "      <td>-2.206928</td>\n",
              "      <td>1.023843</td>\n",
              "      <td>1.968081</td>\n",
              "      <td>-1.308535</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.766746</td>\n",
              "      <td>-1.581161</td>\n",
              "      <td>2.651016</td>\n",
              "      <td>-0.169260</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.57</td>\n",
              "      <td>1.079659</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6378</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.430382</td>\n",
              "      <td>1.630225</td>\n",
              "      <td>0.445705</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.970647</td>\n",
              "      <td>0.358300</td>\n",
              "      <td>-1.721516</td>\n",
              "      <td>1.117027</td>\n",
              "      <td>0.972419</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.367694</td>\n",
              "      <td>0.151408</td>\n",
              "      <td>-0.676247</td>\n",
              "      <td>-1.620762</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.67</td>\n",
              "      <td>1.906141</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8812</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.147882</td>\n",
              "      <td>1.289446</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.343412</td>\n",
              "      <td>0.685473</td>\n",
              "      <td>0.315283</td>\n",
              "      <td>0.175316</td>\n",
              "      <td>0.117990</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.267811</td>\n",
              "      <td>0.550652</td>\n",
              "      <td>-0.329151</td>\n",
              "      <td>-0.528343</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.53</td>\n",
              "      <td>0.442748</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36483</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.015277</td>\n",
              "      <td>0.948666</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.347265</td>\n",
              "      <td>-1.084740</td>\n",
              "      <td>-1.267789</td>\n",
              "      <td>-0.334637</td>\n",
              "      <td>-0.508592</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.034632</td>\n",
              "      <td>-1.016193</td>\n",
              "      <td>0.273207</td>\n",
              "      <td>0.832144</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.97</td>\n",
              "      <td>1.490440</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23721</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.593541</td>\n",
              "      <td>1.062260</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.769811</td>\n",
              "      <td>-0.234405</td>\n",
              "      <td>1.291107</td>\n",
              "      <td>1.241682</td>\n",
              "      <td>-0.698052</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.762894</td>\n",
              "      <td>-0.421093</td>\n",
              "      <td>0.951967</td>\n",
              "      <td>0.556017</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.14</td>\n",
              "      <td>1.442047</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30505</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.726145</td>\n",
              "      <td>0.948666</td>\n",
              "      <td>0.445705</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.583077</td>\n",
              "      <td>-0.849238</td>\n",
              "      <td>-0.219244</td>\n",
              "      <td>-0.749398</td>\n",
              "      <td>-0.686907</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.366057</td>\n",
              "      <td>-0.861769</td>\n",
              "      <td>0.400712</td>\n",
              "      <td>0.237227</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.00</td>\n",
              "      <td>2.487644</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28719</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.147882</td>\n",
              "      <td>1.175853</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.613937</td>\n",
              "      <td>1.058482</td>\n",
              "      <td>0.464454</td>\n",
              "      <td>-0.224714</td>\n",
              "      <td>0.369365</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.271664</td>\n",
              "      <td>1.055356</td>\n",
              "      <td>-0.667646</td>\n",
              "      <td>0.509799</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.10</td>\n",
              "      <td>1.350288</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24045</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.304409</td>\n",
              "      <td>0.607887</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.356579</td>\n",
              "      <td>0.432586</td>\n",
              "      <td>0.023158</td>\n",
              "      <td>-0.985109</td>\n",
              "      <td>0.030070</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.163786</td>\n",
              "      <td>0.279467</td>\n",
              "      <td>-0.551778</td>\n",
              "      <td>0.404325</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.37</td>\n",
              "      <td>6.450447</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>9769 rows × 18 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-099b1d58-ccf0-497d-8d65-e7ccb9df1f73')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-2e3dad91-1743-45ca-aacd-f578af1d97bc\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2e3dad91-1743-45ca-aacd-f578af1d97bc')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-2e3dad91-1743-45ca-aacd-f578af1d97bc button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-099b1d58-ccf0-497d-8d65-e7ccb9df1f73 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-099b1d58-ccf0-497d-8d65-e7ccb9df1f73');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x79fcfec505e0>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "</style>\n",
              "<table id=\"T_b84d8\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_b84d8_level0_col0\" class=\"col_heading level0 col0\" >Model</th>\n",
              "      <th id=\"T_b84d8_level0_col1\" class=\"col_heading level0 col1\" >MAE</th>\n",
              "      <th id=\"T_b84d8_level0_col2\" class=\"col_heading level0 col2\" >MSE</th>\n",
              "      <th id=\"T_b84d8_level0_col3\" class=\"col_heading level0 col3\" >RMSE</th>\n",
              "      <th id=\"T_b84d8_level0_col4\" class=\"col_heading level0 col4\" >R2</th>\n",
              "      <th id=\"T_b84d8_level0_col5\" class=\"col_heading level0 col5\" >RMSLE</th>\n",
              "      <th id=\"T_b84d8_level0_col6\" class=\"col_heading level0 col6\" >MAPE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_b84d8_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_b84d8_row0_col0\" class=\"data row0 col0\" >K Neighbors Regressor</td>\n",
              "      <td id=\"T_b84d8_row0_col1\" class=\"data row0 col1\" >0.4249</td>\n",
              "      <td id=\"T_b84d8_row0_col2\" class=\"data row0 col2\" >0.3647</td>\n",
              "      <td id=\"T_b84d8_row0_col3\" class=\"data row0 col3\" >0.6039</td>\n",
              "      <td id=\"T_b84d8_row0_col4\" class=\"data row0 col4\" >0.8414</td>\n",
              "      <td id=\"T_b84d8_row0_col5\" class=\"data row0 col5\" >0.2063</td>\n",
              "      <td id=\"T_b84d8_row0_col6\" class=\"data row0 col6\" >0.3546</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "       ID         월         일    측정 시간대  섭씨 온도(°⁣C)  절대 온도(K)  이슬점 온도(°C)  \\\n",
              "15903 NaN  1.297777 -0.641638  1.340711         NaN -0.911059   -0.686442   \n",
              "30414 NaN -1.593541 -1.436790  0.445705         NaN -1.183978   -1.429299   \n",
              "32470 NaN  1.586909 -0.982417 -1.344308         NaN -2.257700   -2.206928   \n",
              "6378  NaN  0.430382  1.630225  0.445705         NaN  0.970647    0.358300   \n",
              "8812  NaN -0.147882  1.289446 -1.344308         NaN  0.343412    0.685473   \n",
              "...    ..       ...       ...       ...         ...       ...         ...   \n",
              "36483 NaN -1.015277  0.948666  1.340711         NaN -0.347265   -1.084740   \n",
              "23721 NaN -1.593541  1.062260 -1.344308         NaN -0.769811   -0.234405   \n",
              "30505 NaN -0.726145  0.948666  0.445705         NaN -0.583077   -0.849238   \n",
              "28719 NaN -0.147882  1.175853 -1.344308         NaN  0.613937    1.058482   \n",
              "24045 NaN -1.304409  0.607887  1.340711         NaN  0.356579    0.432586   \n",
              "\n",
              "       상대 습도 (%)  대기압(mbar)  포화 증기압(mbar)  실제 증기압(mbar)  증기압 부족량(mbar)  \\\n",
              "15903   1.216522  -0.910316     -0.878844           NaN      -0.757114   \n",
              "30414   0.147466  -0.580547     -0.996483           NaN      -0.566402   \n",
              "32470   1.023843   1.968081     -1.308535           NaN      -0.766746   \n",
              "6378   -1.721516   1.117027      0.972419           NaN       1.367694   \n",
              "8812    0.315283   0.175316      0.117990           NaN      -0.267811   \n",
              "...          ...        ...           ...           ...            ...   \n",
              "36483  -1.267789  -0.334637     -0.508592           NaN       0.034632   \n",
              "23721   1.291107   1.241682     -0.698052           NaN      -0.762894   \n",
              "30505  -0.219244  -0.749398     -0.686907           NaN      -0.366057   \n",
              "28719   0.464454  -0.224714      0.369365           NaN      -0.271664   \n",
              "24045   0.023158  -0.985109      0.030070           NaN      -0.163786   \n",
              "\n",
              "       수증기 함량 (g/kg)  공기 밀도 (g/m**3)  풍향 (deg)  풍속 (m/s)_x  풍속 (m/s)_y  \\\n",
              "15903      -0.745008        0.671659 -0.115931         NaN        1.55   \n",
              "30414      -1.212049        1.023561 -0.382577         NaN        2.73   \n",
              "32470      -1.581161        2.651016 -0.169260         NaN        0.57   \n",
              "6378        0.151408       -0.676247 -1.620762         NaN        2.67   \n",
              "8812        0.550652       -0.329151 -0.528343         NaN        0.53   \n",
              "...              ...             ...       ...         ...         ...   \n",
              "36483      -1.016193        0.273207  0.832144         NaN        1.97   \n",
              "23721      -0.421093        0.951967  0.556017         NaN        1.14   \n",
              "30505      -0.861769        0.400712  0.237227         NaN        4.00   \n",
              "28719       1.055356       -0.667646  0.509799         NaN        1.10   \n",
              "24045       0.279467       -0.551778  0.404325         NaN        6.37   \n",
              "\n",
              "       prediction_label  \n",
              "15903             1.470  \n",
              "30414             2.465  \n",
              "32470             0.900  \n",
              "6378              1.515  \n",
              "8812              0.690  \n",
              "...                 ...  \n",
              "36483             2.230  \n",
              "23721             1.310  \n",
              "30505             4.990  \n",
              "28719             1.665  \n",
              "24045             6.655  \n",
              "\n",
              "[9769 rows x 18 columns]"
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-8055409c-1492-443d-b754-88a325364d43\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>월</th>\n",
              "      <th>일</th>\n",
              "      <th>측정 시간대</th>\n",
              "      <th>섭씨 온도(°⁣C)</th>\n",
              "      <th>절대 온도(K)</th>\n",
              "      <th>이슬점 온도(°C)</th>\n",
              "      <th>상대 습도 (%)</th>\n",
              "      <th>대기압(mbar)</th>\n",
              "      <th>포화 증기압(mbar)</th>\n",
              "      <th>실제 증기압(mbar)</th>\n",
              "      <th>증기압 부족량(mbar)</th>\n",
              "      <th>수증기 함량 (g/kg)</th>\n",
              "      <th>공기 밀도 (g/m**3)</th>\n",
              "      <th>풍향 (deg)</th>\n",
              "      <th>풍속 (m/s)_x</th>\n",
              "      <th>풍속 (m/s)_y</th>\n",
              "      <th>prediction_label</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>15903</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.297777</td>\n",
              "      <td>-0.641638</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.911059</td>\n",
              "      <td>-0.686442</td>\n",
              "      <td>1.216522</td>\n",
              "      <td>-0.910316</td>\n",
              "      <td>-0.878844</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.757114</td>\n",
              "      <td>-0.745008</td>\n",
              "      <td>0.671659</td>\n",
              "      <td>-0.115931</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.55</td>\n",
              "      <td>1.470</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30414</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.593541</td>\n",
              "      <td>-1.436790</td>\n",
              "      <td>0.445705</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.183978</td>\n",
              "      <td>-1.429299</td>\n",
              "      <td>0.147466</td>\n",
              "      <td>-0.580547</td>\n",
              "      <td>-0.996483</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.566402</td>\n",
              "      <td>-1.212049</td>\n",
              "      <td>1.023561</td>\n",
              "      <td>-0.382577</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.73</td>\n",
              "      <td>2.465</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32470</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.586909</td>\n",
              "      <td>-0.982417</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-2.257700</td>\n",
              "      <td>-2.206928</td>\n",
              "      <td>1.023843</td>\n",
              "      <td>1.968081</td>\n",
              "      <td>-1.308535</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.766746</td>\n",
              "      <td>-1.581161</td>\n",
              "      <td>2.651016</td>\n",
              "      <td>-0.169260</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.57</td>\n",
              "      <td>0.900</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6378</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.430382</td>\n",
              "      <td>1.630225</td>\n",
              "      <td>0.445705</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.970647</td>\n",
              "      <td>0.358300</td>\n",
              "      <td>-1.721516</td>\n",
              "      <td>1.117027</td>\n",
              "      <td>0.972419</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.367694</td>\n",
              "      <td>0.151408</td>\n",
              "      <td>-0.676247</td>\n",
              "      <td>-1.620762</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.67</td>\n",
              "      <td>1.515</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8812</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.147882</td>\n",
              "      <td>1.289446</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.343412</td>\n",
              "      <td>0.685473</td>\n",
              "      <td>0.315283</td>\n",
              "      <td>0.175316</td>\n",
              "      <td>0.117990</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.267811</td>\n",
              "      <td>0.550652</td>\n",
              "      <td>-0.329151</td>\n",
              "      <td>-0.528343</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.53</td>\n",
              "      <td>0.690</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36483</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.015277</td>\n",
              "      <td>0.948666</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.347265</td>\n",
              "      <td>-1.084740</td>\n",
              "      <td>-1.267789</td>\n",
              "      <td>-0.334637</td>\n",
              "      <td>-0.508592</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.034632</td>\n",
              "      <td>-1.016193</td>\n",
              "      <td>0.273207</td>\n",
              "      <td>0.832144</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.97</td>\n",
              "      <td>2.230</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23721</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.593541</td>\n",
              "      <td>1.062260</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.769811</td>\n",
              "      <td>-0.234405</td>\n",
              "      <td>1.291107</td>\n",
              "      <td>1.241682</td>\n",
              "      <td>-0.698052</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.762894</td>\n",
              "      <td>-0.421093</td>\n",
              "      <td>0.951967</td>\n",
              "      <td>0.556017</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.14</td>\n",
              "      <td>1.310</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30505</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.726145</td>\n",
              "      <td>0.948666</td>\n",
              "      <td>0.445705</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.583077</td>\n",
              "      <td>-0.849238</td>\n",
              "      <td>-0.219244</td>\n",
              "      <td>-0.749398</td>\n",
              "      <td>-0.686907</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.366057</td>\n",
              "      <td>-0.861769</td>\n",
              "      <td>0.400712</td>\n",
              "      <td>0.237227</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28719</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.147882</td>\n",
              "      <td>1.175853</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.613937</td>\n",
              "      <td>1.058482</td>\n",
              "      <td>0.464454</td>\n",
              "      <td>-0.224714</td>\n",
              "      <td>0.369365</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.271664</td>\n",
              "      <td>1.055356</td>\n",
              "      <td>-0.667646</td>\n",
              "      <td>0.509799</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.10</td>\n",
              "      <td>1.665</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24045</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.304409</td>\n",
              "      <td>0.607887</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.356579</td>\n",
              "      <td>0.432586</td>\n",
              "      <td>0.023158</td>\n",
              "      <td>-0.985109</td>\n",
              "      <td>0.030070</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.163786</td>\n",
              "      <td>0.279467</td>\n",
              "      <td>-0.551778</td>\n",
              "      <td>0.404325</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.37</td>\n",
              "      <td>6.655</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>9769 rows × 18 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8055409c-1492-443d-b754-88a325364d43')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-ff0a9ebc-7b83-4020-9a64-90efbfd90bb0\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ff0a9ebc-7b83-4020-9a64-90efbfd90bb0')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-ff0a9ebc-7b83-4020-9a64-90efbfd90bb0 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8055409c-1492-443d-b754-88a325364d43 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8055409c-1492-443d-b754-88a325364d43');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x79fd18b87790>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "</style>\n",
              "<table id=\"T_0cb44\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_0cb44_level0_col0\" class=\"col_heading level0 col0\" >Model</th>\n",
              "      <th id=\"T_0cb44_level0_col1\" class=\"col_heading level0 col1\" >MAE</th>\n",
              "      <th id=\"T_0cb44_level0_col2\" class=\"col_heading level0 col2\" >MSE</th>\n",
              "      <th id=\"T_0cb44_level0_col3\" class=\"col_heading level0 col3\" >RMSE</th>\n",
              "      <th id=\"T_0cb44_level0_col4\" class=\"col_heading level0 col4\" >R2</th>\n",
              "      <th id=\"T_0cb44_level0_col5\" class=\"col_heading level0 col5\" >RMSLE</th>\n",
              "      <th id=\"T_0cb44_level0_col6\" class=\"col_heading level0 col6\" >MAPE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_0cb44_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_0cb44_row0_col0\" class=\"data row0 col0\" >Extra Trees Regressor</td>\n",
              "      <td id=\"T_0cb44_row0_col1\" class=\"data row0 col1\" >0.3820</td>\n",
              "      <td id=\"T_0cb44_row0_col2\" class=\"data row0 col2\" >0.2748</td>\n",
              "      <td id=\"T_0cb44_row0_col3\" class=\"data row0 col3\" >0.5242</td>\n",
              "      <td id=\"T_0cb44_row0_col4\" class=\"data row0 col4\" >0.8805</td>\n",
              "      <td id=\"T_0cb44_row0_col5\" class=\"data row0 col5\" >0.1840</td>\n",
              "      <td id=\"T_0cb44_row0_col6\" class=\"data row0 col6\" >0.3366</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "       ID         월         일    측정 시간대  섭씨 온도(°⁣C)  절대 온도(K)  이슬점 온도(°C)  \\\n",
              "15903 NaN  1.297777 -0.641638  1.340711         NaN -0.911059   -0.686442   \n",
              "30414 NaN -1.593541 -1.436790  0.445705         NaN -1.183978   -1.429299   \n",
              "32470 NaN  1.586909 -0.982417 -1.344308         NaN -2.257700   -2.206928   \n",
              "6378  NaN  0.430382  1.630225  0.445705         NaN  0.970647    0.358300   \n",
              "8812  NaN -0.147882  1.289446 -1.344308         NaN  0.343412    0.685473   \n",
              "...    ..       ...       ...       ...         ...       ...         ...   \n",
              "36483 NaN -1.015277  0.948666  1.340711         NaN -0.347265   -1.084740   \n",
              "23721 NaN -1.593541  1.062260 -1.344308         NaN -0.769811   -0.234405   \n",
              "30505 NaN -0.726145  0.948666  0.445705         NaN -0.583077   -0.849238   \n",
              "28719 NaN -0.147882  1.175853 -1.344308         NaN  0.613937    1.058482   \n",
              "24045 NaN -1.304409  0.607887  1.340711         NaN  0.356579    0.432586   \n",
              "\n",
              "       상대 습도 (%)  대기압(mbar)  포화 증기압(mbar)  실제 증기압(mbar)  증기압 부족량(mbar)  \\\n",
              "15903   1.216522  -0.910316     -0.878844           NaN      -0.757114   \n",
              "30414   0.147466  -0.580547     -0.996483           NaN      -0.566402   \n",
              "32470   1.023843   1.968081     -1.308535           NaN      -0.766746   \n",
              "6378   -1.721516   1.117027      0.972419           NaN       1.367694   \n",
              "8812    0.315283   0.175316      0.117990           NaN      -0.267811   \n",
              "...          ...        ...           ...           ...            ...   \n",
              "36483  -1.267789  -0.334637     -0.508592           NaN       0.034632   \n",
              "23721   1.291107   1.241682     -0.698052           NaN      -0.762894   \n",
              "30505  -0.219244  -0.749398     -0.686907           NaN      -0.366057   \n",
              "28719   0.464454  -0.224714      0.369365           NaN      -0.271664   \n",
              "24045   0.023158  -0.985109      0.030070           NaN      -0.163786   \n",
              "\n",
              "       수증기 함량 (g/kg)  공기 밀도 (g/m**3)  풍향 (deg)  풍속 (m/s)_x  풍속 (m/s)_y  \\\n",
              "15903      -0.745008        0.671659 -0.115931         NaN        1.55   \n",
              "30414      -1.212049        1.023561 -0.382577         NaN        2.73   \n",
              "32470      -1.581161        2.651016 -0.169260         NaN        0.57   \n",
              "6378        0.151408       -0.676247 -1.620762         NaN        2.67   \n",
              "8812        0.550652       -0.329151 -0.528343         NaN        0.53   \n",
              "...              ...             ...       ...         ...         ...   \n",
              "36483      -1.016193        0.273207  0.832144         NaN        1.97   \n",
              "23721      -0.421093        0.951967  0.556017         NaN        1.14   \n",
              "30505      -0.861769        0.400712  0.237227         NaN        4.00   \n",
              "28719       1.055356       -0.667646  0.509799         NaN        1.10   \n",
              "24045       0.279467       -0.551778  0.404325         NaN        6.37   \n",
              "\n",
              "       prediction_label  \n",
              "15903            1.3364  \n",
              "30414            2.5194  \n",
              "32470            0.9479  \n",
              "6378             2.0550  \n",
              "8812             0.6541  \n",
              "...                 ...  \n",
              "36483            1.9795  \n",
              "23721            0.9397  \n",
              "30505            2.5717  \n",
              "28719            1.7342  \n",
              "24045            6.5804  \n",
              "\n",
              "[9769 rows x 18 columns]"
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-cabe9e88-d23b-4604-be2c-7b6ddc6561e1\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>월</th>\n",
              "      <th>일</th>\n",
              "      <th>측정 시간대</th>\n",
              "      <th>섭씨 온도(°⁣C)</th>\n",
              "      <th>절대 온도(K)</th>\n",
              "      <th>이슬점 온도(°C)</th>\n",
              "      <th>상대 습도 (%)</th>\n",
              "      <th>대기압(mbar)</th>\n",
              "      <th>포화 증기압(mbar)</th>\n",
              "      <th>실제 증기압(mbar)</th>\n",
              "      <th>증기압 부족량(mbar)</th>\n",
              "      <th>수증기 함량 (g/kg)</th>\n",
              "      <th>공기 밀도 (g/m**3)</th>\n",
              "      <th>풍향 (deg)</th>\n",
              "      <th>풍속 (m/s)_x</th>\n",
              "      <th>풍속 (m/s)_y</th>\n",
              "      <th>prediction_label</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>15903</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.297777</td>\n",
              "      <td>-0.641638</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.911059</td>\n",
              "      <td>-0.686442</td>\n",
              "      <td>1.216522</td>\n",
              "      <td>-0.910316</td>\n",
              "      <td>-0.878844</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.757114</td>\n",
              "      <td>-0.745008</td>\n",
              "      <td>0.671659</td>\n",
              "      <td>-0.115931</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.55</td>\n",
              "      <td>1.3364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30414</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.593541</td>\n",
              "      <td>-1.436790</td>\n",
              "      <td>0.445705</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.183978</td>\n",
              "      <td>-1.429299</td>\n",
              "      <td>0.147466</td>\n",
              "      <td>-0.580547</td>\n",
              "      <td>-0.996483</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.566402</td>\n",
              "      <td>-1.212049</td>\n",
              "      <td>1.023561</td>\n",
              "      <td>-0.382577</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.73</td>\n",
              "      <td>2.5194</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32470</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.586909</td>\n",
              "      <td>-0.982417</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-2.257700</td>\n",
              "      <td>-2.206928</td>\n",
              "      <td>1.023843</td>\n",
              "      <td>1.968081</td>\n",
              "      <td>-1.308535</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.766746</td>\n",
              "      <td>-1.581161</td>\n",
              "      <td>2.651016</td>\n",
              "      <td>-0.169260</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.57</td>\n",
              "      <td>0.9479</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6378</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.430382</td>\n",
              "      <td>1.630225</td>\n",
              "      <td>0.445705</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.970647</td>\n",
              "      <td>0.358300</td>\n",
              "      <td>-1.721516</td>\n",
              "      <td>1.117027</td>\n",
              "      <td>0.972419</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.367694</td>\n",
              "      <td>0.151408</td>\n",
              "      <td>-0.676247</td>\n",
              "      <td>-1.620762</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.67</td>\n",
              "      <td>2.0550</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8812</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.147882</td>\n",
              "      <td>1.289446</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.343412</td>\n",
              "      <td>0.685473</td>\n",
              "      <td>0.315283</td>\n",
              "      <td>0.175316</td>\n",
              "      <td>0.117990</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.267811</td>\n",
              "      <td>0.550652</td>\n",
              "      <td>-0.329151</td>\n",
              "      <td>-0.528343</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.53</td>\n",
              "      <td>0.6541</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36483</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.015277</td>\n",
              "      <td>0.948666</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.347265</td>\n",
              "      <td>-1.084740</td>\n",
              "      <td>-1.267789</td>\n",
              "      <td>-0.334637</td>\n",
              "      <td>-0.508592</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.034632</td>\n",
              "      <td>-1.016193</td>\n",
              "      <td>0.273207</td>\n",
              "      <td>0.832144</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.97</td>\n",
              "      <td>1.9795</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23721</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.593541</td>\n",
              "      <td>1.062260</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.769811</td>\n",
              "      <td>-0.234405</td>\n",
              "      <td>1.291107</td>\n",
              "      <td>1.241682</td>\n",
              "      <td>-0.698052</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.762894</td>\n",
              "      <td>-0.421093</td>\n",
              "      <td>0.951967</td>\n",
              "      <td>0.556017</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.14</td>\n",
              "      <td>0.9397</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30505</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.726145</td>\n",
              "      <td>0.948666</td>\n",
              "      <td>0.445705</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.583077</td>\n",
              "      <td>-0.849238</td>\n",
              "      <td>-0.219244</td>\n",
              "      <td>-0.749398</td>\n",
              "      <td>-0.686907</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.366057</td>\n",
              "      <td>-0.861769</td>\n",
              "      <td>0.400712</td>\n",
              "      <td>0.237227</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.00</td>\n",
              "      <td>2.5717</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28719</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.147882</td>\n",
              "      <td>1.175853</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.613937</td>\n",
              "      <td>1.058482</td>\n",
              "      <td>0.464454</td>\n",
              "      <td>-0.224714</td>\n",
              "      <td>0.369365</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.271664</td>\n",
              "      <td>1.055356</td>\n",
              "      <td>-0.667646</td>\n",
              "      <td>0.509799</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.10</td>\n",
              "      <td>1.7342</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24045</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.304409</td>\n",
              "      <td>0.607887</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.356579</td>\n",
              "      <td>0.432586</td>\n",
              "      <td>0.023158</td>\n",
              "      <td>-0.985109</td>\n",
              "      <td>0.030070</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.163786</td>\n",
              "      <td>0.279467</td>\n",
              "      <td>-0.551778</td>\n",
              "      <td>0.404325</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.37</td>\n",
              "      <td>6.5804</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>9769 rows × 18 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cabe9e88-d23b-4604-be2c-7b6ddc6561e1')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-44dfc0d4-c485-448f-9c89-b5086bd9291d\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-44dfc0d4-c485-448f-9c89-b5086bd9291d')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-44dfc0d4-c485-448f-9c89-b5086bd9291d button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-cabe9e88-d23b-4604-be2c-7b6ddc6561e1 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-cabe9e88-d23b-4604-be2c-7b6ddc6561e1');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x79fcfeab6b00>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "</style>\n",
              "<table id=\"T_2d2d5\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_2d2d5_level0_col0\" class=\"col_heading level0 col0\" >Model</th>\n",
              "      <th id=\"T_2d2d5_level0_col1\" class=\"col_heading level0 col1\" >MAE</th>\n",
              "      <th id=\"T_2d2d5_level0_col2\" class=\"col_heading level0 col2\" >MSE</th>\n",
              "      <th id=\"T_2d2d5_level0_col3\" class=\"col_heading level0 col3\" >RMSE</th>\n",
              "      <th id=\"T_2d2d5_level0_col4\" class=\"col_heading level0 col4\" >R2</th>\n",
              "      <th id=\"T_2d2d5_level0_col5\" class=\"col_heading level0 col5\" >RMSLE</th>\n",
              "      <th id=\"T_2d2d5_level0_col6\" class=\"col_heading level0 col6\" >MAPE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_2d2d5_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_2d2d5_row0_col0\" class=\"data row0 col0\" >Random Forest Regressor</td>\n",
              "      <td id=\"T_2d2d5_row0_col1\" class=\"data row0 col1\" >0.4409</td>\n",
              "      <td id=\"T_2d2d5_row0_col2\" class=\"data row0 col2\" >0.3733</td>\n",
              "      <td id=\"T_2d2d5_row0_col3\" class=\"data row0 col3\" >0.6110</td>\n",
              "      <td id=\"T_2d2d5_row0_col4\" class=\"data row0 col4\" >0.8377</td>\n",
              "      <td id=\"T_2d2d5_row0_col5\" class=\"data row0 col5\" >0.2128</td>\n",
              "      <td id=\"T_2d2d5_row0_col6\" class=\"data row0 col6\" >0.4052</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "       ID         월         일    측정 시간대  섭씨 온도(°⁣C)  절대 온도(K)  이슬점 온도(°C)  \\\n",
              "15903 NaN  1.297777 -0.641638  1.340711         NaN -0.911059   -0.686442   \n",
              "30414 NaN -1.593541 -1.436790  0.445705         NaN -1.183978   -1.429299   \n",
              "32470 NaN  1.586909 -0.982417 -1.344308         NaN -2.257700   -2.206928   \n",
              "6378  NaN  0.430382  1.630225  0.445705         NaN  0.970647    0.358300   \n",
              "8812  NaN -0.147882  1.289446 -1.344308         NaN  0.343412    0.685473   \n",
              "...    ..       ...       ...       ...         ...       ...         ...   \n",
              "36483 NaN -1.015277  0.948666  1.340711         NaN -0.347265   -1.084740   \n",
              "23721 NaN -1.593541  1.062260 -1.344308         NaN -0.769811   -0.234405   \n",
              "30505 NaN -0.726145  0.948666  0.445705         NaN -0.583077   -0.849238   \n",
              "28719 NaN -0.147882  1.175853 -1.344308         NaN  0.613937    1.058482   \n",
              "24045 NaN -1.304409  0.607887  1.340711         NaN  0.356579    0.432586   \n",
              "\n",
              "       상대 습도 (%)  대기압(mbar)  포화 증기압(mbar)  실제 증기압(mbar)  증기압 부족량(mbar)  \\\n",
              "15903   1.216522  -0.910316     -0.878844           NaN      -0.757114   \n",
              "30414   0.147466  -0.580547     -0.996483           NaN      -0.566402   \n",
              "32470   1.023843   1.968081     -1.308535           NaN      -0.766746   \n",
              "6378   -1.721516   1.117027      0.972419           NaN       1.367694   \n",
              "8812    0.315283   0.175316      0.117990           NaN      -0.267811   \n",
              "...          ...        ...           ...           ...            ...   \n",
              "36483  -1.267789  -0.334637     -0.508592           NaN       0.034632   \n",
              "23721   1.291107   1.241682     -0.698052           NaN      -0.762894   \n",
              "30505  -0.219244  -0.749398     -0.686907           NaN      -0.366057   \n",
              "28719   0.464454  -0.224714      0.369365           NaN      -0.271664   \n",
              "24045   0.023158  -0.985109      0.030070           NaN      -0.163786   \n",
              "\n",
              "       수증기 함량 (g/kg)  공기 밀도 (g/m**3)  풍향 (deg)  풍속 (m/s)_x  풍속 (m/s)_y  \\\n",
              "15903      -0.745008        0.671659 -0.115931         NaN        1.55   \n",
              "30414      -1.212049        1.023561 -0.382577         NaN        2.73   \n",
              "32470      -1.581161        2.651016 -0.169260         NaN        0.57   \n",
              "6378        0.151408       -0.676247 -1.620762         NaN        2.67   \n",
              "8812        0.550652       -0.329151 -0.528343         NaN        0.53   \n",
              "...              ...             ...       ...         ...         ...   \n",
              "36483      -1.016193        0.273207  0.832144         NaN        1.97   \n",
              "23721      -0.421093        0.951967  0.556017         NaN        1.14   \n",
              "30505      -0.861769        0.400712  0.237227         NaN        4.00   \n",
              "28719       1.055356       -0.667646  0.509799         NaN        1.10   \n",
              "24045       0.279467       -0.551778  0.404325         NaN        6.37   \n",
              "\n",
              "       prediction_label  \n",
              "15903            1.3785  \n",
              "30414            2.4077  \n",
              "32470            0.8926  \n",
              "6378             2.0332  \n",
              "8812             0.7145  \n",
              "...                 ...  \n",
              "36483            2.0787  \n",
              "23721            0.9941  \n",
              "30505            2.1460  \n",
              "28719            1.5416  \n",
              "24045            6.1292  \n",
              "\n",
              "[9769 rows x 18 columns]"
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-e047123b-309a-4fed-b44f-09cd3d689b7b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>월</th>\n",
              "      <th>일</th>\n",
              "      <th>측정 시간대</th>\n",
              "      <th>섭씨 온도(°⁣C)</th>\n",
              "      <th>절대 온도(K)</th>\n",
              "      <th>이슬점 온도(°C)</th>\n",
              "      <th>상대 습도 (%)</th>\n",
              "      <th>대기압(mbar)</th>\n",
              "      <th>포화 증기압(mbar)</th>\n",
              "      <th>실제 증기압(mbar)</th>\n",
              "      <th>증기압 부족량(mbar)</th>\n",
              "      <th>수증기 함량 (g/kg)</th>\n",
              "      <th>공기 밀도 (g/m**3)</th>\n",
              "      <th>풍향 (deg)</th>\n",
              "      <th>풍속 (m/s)_x</th>\n",
              "      <th>풍속 (m/s)_y</th>\n",
              "      <th>prediction_label</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>15903</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.297777</td>\n",
              "      <td>-0.641638</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.911059</td>\n",
              "      <td>-0.686442</td>\n",
              "      <td>1.216522</td>\n",
              "      <td>-0.910316</td>\n",
              "      <td>-0.878844</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.757114</td>\n",
              "      <td>-0.745008</td>\n",
              "      <td>0.671659</td>\n",
              "      <td>-0.115931</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.55</td>\n",
              "      <td>1.3785</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30414</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.593541</td>\n",
              "      <td>-1.436790</td>\n",
              "      <td>0.445705</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.183978</td>\n",
              "      <td>-1.429299</td>\n",
              "      <td>0.147466</td>\n",
              "      <td>-0.580547</td>\n",
              "      <td>-0.996483</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.566402</td>\n",
              "      <td>-1.212049</td>\n",
              "      <td>1.023561</td>\n",
              "      <td>-0.382577</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.73</td>\n",
              "      <td>2.4077</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32470</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.586909</td>\n",
              "      <td>-0.982417</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-2.257700</td>\n",
              "      <td>-2.206928</td>\n",
              "      <td>1.023843</td>\n",
              "      <td>1.968081</td>\n",
              "      <td>-1.308535</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.766746</td>\n",
              "      <td>-1.581161</td>\n",
              "      <td>2.651016</td>\n",
              "      <td>-0.169260</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.57</td>\n",
              "      <td>0.8926</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6378</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.430382</td>\n",
              "      <td>1.630225</td>\n",
              "      <td>0.445705</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.970647</td>\n",
              "      <td>0.358300</td>\n",
              "      <td>-1.721516</td>\n",
              "      <td>1.117027</td>\n",
              "      <td>0.972419</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.367694</td>\n",
              "      <td>0.151408</td>\n",
              "      <td>-0.676247</td>\n",
              "      <td>-1.620762</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.67</td>\n",
              "      <td>2.0332</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8812</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.147882</td>\n",
              "      <td>1.289446</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.343412</td>\n",
              "      <td>0.685473</td>\n",
              "      <td>0.315283</td>\n",
              "      <td>0.175316</td>\n",
              "      <td>0.117990</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.267811</td>\n",
              "      <td>0.550652</td>\n",
              "      <td>-0.329151</td>\n",
              "      <td>-0.528343</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.53</td>\n",
              "      <td>0.7145</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36483</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.015277</td>\n",
              "      <td>0.948666</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.347265</td>\n",
              "      <td>-1.084740</td>\n",
              "      <td>-1.267789</td>\n",
              "      <td>-0.334637</td>\n",
              "      <td>-0.508592</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.034632</td>\n",
              "      <td>-1.016193</td>\n",
              "      <td>0.273207</td>\n",
              "      <td>0.832144</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.97</td>\n",
              "      <td>2.0787</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23721</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.593541</td>\n",
              "      <td>1.062260</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.769811</td>\n",
              "      <td>-0.234405</td>\n",
              "      <td>1.291107</td>\n",
              "      <td>1.241682</td>\n",
              "      <td>-0.698052</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.762894</td>\n",
              "      <td>-0.421093</td>\n",
              "      <td>0.951967</td>\n",
              "      <td>0.556017</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.14</td>\n",
              "      <td>0.9941</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30505</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.726145</td>\n",
              "      <td>0.948666</td>\n",
              "      <td>0.445705</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.583077</td>\n",
              "      <td>-0.849238</td>\n",
              "      <td>-0.219244</td>\n",
              "      <td>-0.749398</td>\n",
              "      <td>-0.686907</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.366057</td>\n",
              "      <td>-0.861769</td>\n",
              "      <td>0.400712</td>\n",
              "      <td>0.237227</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.00</td>\n",
              "      <td>2.1460</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28719</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.147882</td>\n",
              "      <td>1.175853</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.613937</td>\n",
              "      <td>1.058482</td>\n",
              "      <td>0.464454</td>\n",
              "      <td>-0.224714</td>\n",
              "      <td>0.369365</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.271664</td>\n",
              "      <td>1.055356</td>\n",
              "      <td>-0.667646</td>\n",
              "      <td>0.509799</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.10</td>\n",
              "      <td>1.5416</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24045</th>\n",
              "      <td>NaN</td>\n",
              "      <td>-1.304409</td>\n",
              "      <td>0.607887</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.356579</td>\n",
              "      <td>0.432586</td>\n",
              "      <td>0.023158</td>\n",
              "      <td>-0.985109</td>\n",
              "      <td>0.030070</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.163786</td>\n",
              "      <td>0.279467</td>\n",
              "      <td>-0.551778</td>\n",
              "      <td>0.404325</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.37</td>\n",
              "      <td>6.1292</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>9769 rows × 18 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e047123b-309a-4fed-b44f-09cd3d689b7b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-3de2d68d-a5ed-4774-aa57-a9145ddc9b96\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3de2d68d-a5ed-4774-aa57-a9145ddc9b96')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-3de2d68d-a5ed-4774-aa57-a9145ddc9b96 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e047123b-309a-4fed-b44f-09cd3d689b7b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e047123b-309a-4fed-b44f-09cd3d689b7b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {}
        }
      ],
      "source": [
        "for model in tuned_models:\n",
        "    display(predict_model(model))\n"
      ],
      "id": "caf69235"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true
        },
        "id": "zpuG_z7mPkPr"
      },
      "outputs": [],
      "source": [
        "blended = blend_models(estimator_list = tuned_models,\n",
        "                       fold = 10,\n",
        "                       method = 'auto',\n",
        "                       optimize='MAE',\n",
        "                       )"
      ],
      "id": "zpuG_z7mPkPr"
    },
    {
      "cell_type": "code",
      "source": [
        "# 각 모델의 성능 평가\n",
        "for model in tuned_models:\n",
        "    print(model)\n",
        "    evaluate_model(model)  # 성능 평가 결과를 시각적으로 출력"
      ],
      "metadata": {
        "id": "4pPdyjBAreqh"
      },
      "id": "4pPdyjBAreqh",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true
        },
        "id": "seW_9VuUQCTl"
      },
      "outputs": [],
      "source": [
        "final_model = finalize_model(blended) # 모델 선택"
      ],
      "id": "seW_9VuUQCTl"
    },
    {
      "cell_type": "code",
      "source": [
        "final_model = finalize_model(model_et) # 모델 선택"
      ],
      "metadata": {
        "id": "sF41sKFFtyVk"
      },
      "id": "sF41sKFFtyVk",
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "train_x.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 268
        },
        "id": "6UrA7d4T4qFw",
        "outputId": "ce1780ef-9474-4d49-8716-9fd7279195ff"
      },
      "id": "6UrA7d4T4qFw",
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   ID         월         일    측정 시간대  섭씨 온도(°⁣C)  절대 온도(K)  이슬점 온도(°C)  \\\n",
              "0 NaN  0.141250 -1.550383  1.340711         NaN  0.455931    0.693376   \n",
              "1 NaN  0.430382  0.607887 -0.449301         NaN  0.823415    1.056902   \n",
              "2 NaN  1.297777 -1.663976  1.340711         NaN -0.015692   -0.008387   \n",
              "4 NaN  0.719514  1.175853  0.445705         NaN  0.824612    1.142251   \n",
              "5 NaN  1.008646  0.380701  1.340711         NaN -0.326916   -0.232825   \n",
              "\n",
              "   상대 습도 (%)  대기압(mbar)  포화 증기압(mbar)  실제 증기압(mbar)  증기압 부족량(mbar)  \\\n",
              "0   0.016942   0.231977      0.240582           NaN      -0.082878   \n",
              "1  -0.157090   0.117521      0.655413           NaN       0.175258   \n",
              "2  -0.101151  -0.149921     -0.239880           NaN      -0.217725   \n",
              "4  -0.113582   0.650138      0.718566           NaN       0.175258   \n",
              "5   0.333930  -0.417362     -0.498685           NaN      -0.456598   \n",
              "\n",
              "   수증기 함량 (g/kg)  공기 밀도 (g/m**3)  풍향 (deg)  풍속 (m/s)  \n",
              "0       0.558184       -0.417949 -0.248661       NaN  \n",
              "1       1.040291       -0.781995  0.004949       NaN  \n",
              "2      -0.191340       -0.034423 -0.360060       NaN  \n",
              "4       1.145751       -0.687631 -1.863469       NaN  \n",
              "5      -0.390962        0.206925  0.953024       NaN  "
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-9f545fd6-f597-4ad1-bb34-bd6577d8e32e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>월</th>\n",
              "      <th>일</th>\n",
              "      <th>측정 시간대</th>\n",
              "      <th>섭씨 온도(°⁣C)</th>\n",
              "      <th>절대 온도(K)</th>\n",
              "      <th>이슬점 온도(°C)</th>\n",
              "      <th>상대 습도 (%)</th>\n",
              "      <th>대기압(mbar)</th>\n",
              "      <th>포화 증기압(mbar)</th>\n",
              "      <th>실제 증기압(mbar)</th>\n",
              "      <th>증기압 부족량(mbar)</th>\n",
              "      <th>수증기 함량 (g/kg)</th>\n",
              "      <th>공기 밀도 (g/m**3)</th>\n",
              "      <th>풍향 (deg)</th>\n",
              "      <th>풍속 (m/s)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.141250</td>\n",
              "      <td>-1.550383</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.455931</td>\n",
              "      <td>0.693376</td>\n",
              "      <td>0.016942</td>\n",
              "      <td>0.231977</td>\n",
              "      <td>0.240582</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.082878</td>\n",
              "      <td>0.558184</td>\n",
              "      <td>-0.417949</td>\n",
              "      <td>-0.248661</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.430382</td>\n",
              "      <td>0.607887</td>\n",
              "      <td>-0.449301</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.823415</td>\n",
              "      <td>1.056902</td>\n",
              "      <td>-0.157090</td>\n",
              "      <td>0.117521</td>\n",
              "      <td>0.655413</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.175258</td>\n",
              "      <td>1.040291</td>\n",
              "      <td>-0.781995</td>\n",
              "      <td>0.004949</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.297777</td>\n",
              "      <td>-1.663976</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.015692</td>\n",
              "      <td>-0.008387</td>\n",
              "      <td>-0.101151</td>\n",
              "      <td>-0.149921</td>\n",
              "      <td>-0.239880</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.217725</td>\n",
              "      <td>-0.191340</td>\n",
              "      <td>-0.034423</td>\n",
              "      <td>-0.360060</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.719514</td>\n",
              "      <td>1.175853</td>\n",
              "      <td>0.445705</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.824612</td>\n",
              "      <td>1.142251</td>\n",
              "      <td>-0.113582</td>\n",
              "      <td>0.650138</td>\n",
              "      <td>0.718566</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.175258</td>\n",
              "      <td>1.145751</td>\n",
              "      <td>-0.687631</td>\n",
              "      <td>-1.863469</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>NaN</td>\n",
              "      <td>1.008646</td>\n",
              "      <td>0.380701</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.326916</td>\n",
              "      <td>-0.232825</td>\n",
              "      <td>0.333930</td>\n",
              "      <td>-0.417362</td>\n",
              "      <td>-0.498685</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.456598</td>\n",
              "      <td>-0.390962</td>\n",
              "      <td>0.206925</td>\n",
              "      <td>0.953024</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f545fd6-f597-4ad1-bb34-bd6577d8e32e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-27bfe584-f738-4b72-b29f-fda32e132b10\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-27bfe584-f738-4b72-b29f-fda32e132b10')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-27bfe584-f738-4b72-b29f-fda32e132b10 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9f545fd6-f597-4ad1-bb34-bd6577d8e32e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9f545fd6-f597-4ad1-bb34-bd6577d8e32e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 26,
      "metadata": {
        "id": "2fd7cd0c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 268
        },
        "outputId": "490e8c38-d87b-42c0-86cf-9387c743a33b"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          월         일    측정 시간대  절대 온도(K)  이슬점 온도(°C)  상대 습도 (%)  대기압(mbar)  \\\n",
              "0 -1.015277  0.948666 -1.344308 -0.633352   -0.895074  -0.206814  -0.629276   \n",
              "1  0.719514  0.948666  1.340711  0.339821    0.775564   0.371222   0.787258   \n",
              "2 -0.437013  1.403039  1.340711  1.239975    1.501036  -0.163306  -0.589613   \n",
              "3 -1.593541  0.153514  1.340711 -1.619691   -1.568387   0.800087   0.905114   \n",
              "4  1.008646  0.721480  0.445705 -0.334098   -0.172764   0.470669  -0.343702   \n",
              "\n",
              "   포화 증기압(mbar)  증기압 부족량(mbar)  수증기 함량 (g/kg)  공기 밀도 (g/m**3)  풍향 (deg)  \\\n",
              "0     -0.710435      -0.379542      -0.891900        0.473318  0.891399   \n",
              "1      0.168760      -0.279370       0.644813       -0.212019  0.580904   \n",
              "2      1.142066       0.381382       1.748384       -1.303398 -1.969535   \n",
              "3     -1.126505      -0.710881      -1.298677        1.761014  0.990947   \n",
              "4     -0.498685      -0.498978      -0.338231        0.224887  1.018204   \n",
              "\n",
              "   prediction_label  \n",
              "0            1.5624  \n",
              "1            1.0651  \n",
              "2            2.0916  \n",
              "3            1.0651  \n",
              "4            1.1478  "
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-f426fa9d-3ad5-4fc0-a188-2d260bfb05e2\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>월</th>\n",
              "      <th>일</th>\n",
              "      <th>측정 시간대</th>\n",
              "      <th>절대 온도(K)</th>\n",
              "      <th>이슬점 온도(°C)</th>\n",
              "      <th>상대 습도 (%)</th>\n",
              "      <th>대기압(mbar)</th>\n",
              "      <th>포화 증기압(mbar)</th>\n",
              "      <th>증기압 부족량(mbar)</th>\n",
              "      <th>수증기 함량 (g/kg)</th>\n",
              "      <th>공기 밀도 (g/m**3)</th>\n",
              "      <th>풍향 (deg)</th>\n",
              "      <th>prediction_label</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-1.015277</td>\n",
              "      <td>0.948666</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>-0.633352</td>\n",
              "      <td>-0.895074</td>\n",
              "      <td>-0.206814</td>\n",
              "      <td>-0.629276</td>\n",
              "      <td>-0.710435</td>\n",
              "      <td>-0.379542</td>\n",
              "      <td>-0.891900</td>\n",
              "      <td>0.473318</td>\n",
              "      <td>0.891399</td>\n",
              "      <td>1.5624</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.719514</td>\n",
              "      <td>0.948666</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>0.339821</td>\n",
              "      <td>0.775564</td>\n",
              "      <td>0.371222</td>\n",
              "      <td>0.787258</td>\n",
              "      <td>0.168760</td>\n",
              "      <td>-0.279370</td>\n",
              "      <td>0.644813</td>\n",
              "      <td>-0.212019</td>\n",
              "      <td>0.580904</td>\n",
              "      <td>1.0651</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-0.437013</td>\n",
              "      <td>1.403039</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>1.239975</td>\n",
              "      <td>1.501036</td>\n",
              "      <td>-0.163306</td>\n",
              "      <td>-0.589613</td>\n",
              "      <td>1.142066</td>\n",
              "      <td>0.381382</td>\n",
              "      <td>1.748384</td>\n",
              "      <td>-1.303398</td>\n",
              "      <td>-1.969535</td>\n",
              "      <td>2.0916</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-1.593541</td>\n",
              "      <td>0.153514</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>-1.619691</td>\n",
              "      <td>-1.568387</td>\n",
              "      <td>0.800087</td>\n",
              "      <td>0.905114</td>\n",
              "      <td>-1.126505</td>\n",
              "      <td>-0.710881</td>\n",
              "      <td>-1.298677</td>\n",
              "      <td>1.761014</td>\n",
              "      <td>0.990947</td>\n",
              "      <td>1.0651</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1.008646</td>\n",
              "      <td>0.721480</td>\n",
              "      <td>0.445705</td>\n",
              "      <td>-0.334098</td>\n",
              "      <td>-0.172764</td>\n",
              "      <td>0.470669</td>\n",
              "      <td>-0.343702</td>\n",
              "      <td>-0.498685</td>\n",
              "      <td>-0.498978</td>\n",
              "      <td>-0.338231</td>\n",
              "      <td>0.224887</td>\n",
              "      <td>1.018204</td>\n",
              "      <td>1.1478</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f426fa9d-3ad5-4fc0-a188-2d260bfb05e2')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-39576a77-4351-467a-89da-efa2eee4e141\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-39576a77-4351-467a-89da-efa2eee4e141')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-39576a77-4351-467a-89da-efa2eee4e141 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f426fa9d-3ad5-4fc0-a188-2d260bfb05e2 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f426fa9d-3ad5-4fc0-a188-2d260bfb05e2');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ],
      "source": [
        "prediction = predict_model(final_model, data = test_x)\n",
        "prediction.head()"
      ],
      "id": "2fd7cd0c"
    },
    {
      "cell_type": "code",
      "execution_count": 27,
      "metadata": {
        "id": "71dece8a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "80c08dd6-1c2b-40f8-b85c-0b7b0dc4cce9"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Transformation Pipeline and Model Successfully Saved\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(Pipeline(memory=FastMemory(location=/tmp/joblib),\n",
              "          steps=[('numerical_imputer',\n",
              "                  TransformerWrapper(include=['월', '일', '측정 시간대', '절대 온도(K)',\n",
              "                                              '이슬점 온도(°C)', '상대 습도 (%)',\n",
              "                                              '대기압(mbar)', '포화 증기압(mbar)',\n",
              "                                              '증기압 부족량(mbar)', '수증기 함량 (g/kg)',\n",
              "                                              '공기 밀도 (g/m**3)', '풍향 (deg)'],\n",
              "                                     transformer=SimpleImputer())),\n",
              "                 ('categorical_imputer',\n",
              "                  TransformerWrapper(include=[],\n",
              "                                     transformer=SimpleImputer(strategy='most_frequent'))),\n",
              "                 ('clean_column_names',\n",
              "                  TransformerWrapper(transformer=CleanColumnNames())),\n",
              "                 ('actual_estimator',\n",
              "                  ExtraTreesRegressor(n_jobs=-1, random_state=42))]),\n",
              " 'Pycaret_baseline.pkl')"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ],
      "source": [
        "save_model(final_model,'Pycaret_baseline')"
      ],
      "id": "71dece8a"
    },
    {
      "cell_type": "code",
      "execution_count": 28,
      "metadata": {
        "id": "9b541b20",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 286
        },
        "outputId": "f3c85394-fefb-491f-ffdf-ff8af5c4e57e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Transformation Pipeline and Model Successfully Loaded\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          월         일    측정 시간대  절대 온도(K)  이슬점 온도(°C)  상대 습도 (%)  대기압(mbar)  \\\n",
              "0 -1.015277  0.948666 -1.344308 -0.633352   -0.895074  -0.206814  -0.629276   \n",
              "1  0.719514  0.948666  1.340711  0.339821    0.775564   0.371222   0.787258   \n",
              "2 -0.437013  1.403039  1.340711  1.239975    1.501036  -0.163306  -0.589613   \n",
              "3 -1.593541  0.153514  1.340711 -1.619691   -1.568387   0.800087   0.905114   \n",
              "4  1.008646  0.721480  0.445705 -0.334098   -0.172764   0.470669  -0.343702   \n",
              "\n",
              "   포화 증기압(mbar)  증기압 부족량(mbar)  수증기 함량 (g/kg)  공기 밀도 (g/m**3)  풍향 (deg)  \\\n",
              "0     -0.710435      -0.379542      -0.891900        0.473318  0.891399   \n",
              "1      0.168760      -0.279370       0.644813       -0.212019  0.580904   \n",
              "2      1.142066       0.381382       1.748384       -1.303398 -1.969535   \n",
              "3     -1.126505      -0.710881      -1.298677        1.761014  0.990947   \n",
              "4     -0.498685      -0.498978      -0.338231        0.224887  1.018204   \n",
              "\n",
              "   prediction_label  \n",
              "0            1.5624  \n",
              "1            1.0651  \n",
              "2            2.0916  \n",
              "3            1.0651  \n",
              "4            1.1478  "
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-7aa69fd4-69c2-4570-a395-6715be21d491\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>월</th>\n",
              "      <th>일</th>\n",
              "      <th>측정 시간대</th>\n",
              "      <th>절대 온도(K)</th>\n",
              "      <th>이슬점 온도(°C)</th>\n",
              "      <th>상대 습도 (%)</th>\n",
              "      <th>대기압(mbar)</th>\n",
              "      <th>포화 증기압(mbar)</th>\n",
              "      <th>증기압 부족량(mbar)</th>\n",
              "      <th>수증기 함량 (g/kg)</th>\n",
              "      <th>공기 밀도 (g/m**3)</th>\n",
              "      <th>풍향 (deg)</th>\n",
              "      <th>prediction_label</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-1.015277</td>\n",
              "      <td>0.948666</td>\n",
              "      <td>-1.344308</td>\n",
              "      <td>-0.633352</td>\n",
              "      <td>-0.895074</td>\n",
              "      <td>-0.206814</td>\n",
              "      <td>-0.629276</td>\n",
              "      <td>-0.710435</td>\n",
              "      <td>-0.379542</td>\n",
              "      <td>-0.891900</td>\n",
              "      <td>0.473318</td>\n",
              "      <td>0.891399</td>\n",
              "      <td>1.5624</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.719514</td>\n",
              "      <td>0.948666</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>0.339821</td>\n",
              "      <td>0.775564</td>\n",
              "      <td>0.371222</td>\n",
              "      <td>0.787258</td>\n",
              "      <td>0.168760</td>\n",
              "      <td>-0.279370</td>\n",
              "      <td>0.644813</td>\n",
              "      <td>-0.212019</td>\n",
              "      <td>0.580904</td>\n",
              "      <td>1.0651</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-0.437013</td>\n",
              "      <td>1.403039</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>1.239975</td>\n",
              "      <td>1.501036</td>\n",
              "      <td>-0.163306</td>\n",
              "      <td>-0.589613</td>\n",
              "      <td>1.142066</td>\n",
              "      <td>0.381382</td>\n",
              "      <td>1.748384</td>\n",
              "      <td>-1.303398</td>\n",
              "      <td>-1.969535</td>\n",
              "      <td>2.0916</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-1.593541</td>\n",
              "      <td>0.153514</td>\n",
              "      <td>1.340711</td>\n",
              "      <td>-1.619691</td>\n",
              "      <td>-1.568387</td>\n",
              "      <td>0.800087</td>\n",
              "      <td>0.905114</td>\n",
              "      <td>-1.126505</td>\n",
              "      <td>-0.710881</td>\n",
              "      <td>-1.298677</td>\n",
              "      <td>1.761014</td>\n",
              "      <td>0.990947</td>\n",
              "      <td>1.0651</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1.008646</td>\n",
              "      <td>0.721480</td>\n",
              "      <td>0.445705</td>\n",
              "      <td>-0.334098</td>\n",
              "      <td>-0.172764</td>\n",
              "      <td>0.470669</td>\n",
              "      <td>-0.343702</td>\n",
              "      <td>-0.498685</td>\n",
              "      <td>-0.498978</td>\n",
              "      <td>-0.338231</td>\n",
              "      <td>0.224887</td>\n",
              "      <td>1.018204</td>\n",
              "      <td>1.1478</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7aa69fd4-69c2-4570-a395-6715be21d491')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-915f57ca-f35c-4f5e-af52-d6fb1a47873e\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-915f57ca-f35c-4f5e-af52-d6fb1a47873e')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-915f57ca-f35c-4f5e-af52-d6fb1a47873e button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7aa69fd4-69c2-4570-a395-6715be21d491 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7aa69fd4-69c2-4570-a395-6715be21d491');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ],
      "source": [
        "saved_final_model = load_model('Pycaret_baseline')\n",
        "\n",
        "new_prediction = predict_model(saved_final_model, data=test_x)\n",
        "new_prediction.head()"
      ],
      "id": "9b541b20"
    },
    {
      "cell_type": "code",
      "execution_count": 29,
      "metadata": {
        "id": "d2da5944",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "04186fb5-179e-4618-c9d1-d791574ac301"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           ID  풍속 (m/s)\n",
              "0  TEST_00000    1.5624\n",
              "1  TEST_00001    1.0651\n",
              "2  TEST_00002    2.0916\n",
              "3  TEST_00003    1.0651\n",
              "4  TEST_00004    1.1478"
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-64cbbe13-8b39-4105-abab-e5c10fcbef36\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>풍속 (m/s)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>TEST_00000</td>\n",
              "      <td>1.5624</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>TEST_00001</td>\n",
              "      <td>1.0651</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>TEST_00002</td>\n",
              "      <td>2.0916</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>TEST_00003</td>\n",
              "      <td>1.0651</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>TEST_00004</td>\n",
              "      <td>1.1478</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-64cbbe13-8b39-4105-abab-e5c10fcbef36')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-7013664a-e911-4212-899e-271da592757c\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7013664a-e911-4212-899e-271da592757c')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-7013664a-e911-4212-899e-271da592757c button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-64cbbe13-8b39-4105-abab-e5c10fcbef36 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-64cbbe13-8b39-4105-abab-e5c10fcbef36');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ],
      "source": [
        "submission = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/데이콘 풍속 예측/sample_submission.csv')\n",
        "submission['풍속 (m/s)'] = new_prediction['prediction_label']\n",
        "submission.head()"
      ],
      "id": "d2da5944"
    },
    {
      "cell_type": "code",
      "execution_count": 30,
      "metadata": {
        "id": "b14385ac"
      },
      "outputs": [],
      "source": [
        "submission.to_csv('/content/drive/MyDrive/Colab Notebooks/데이콘 풍속 예측/sample_submission.csv', index=  False)"
      ],
      "id": "b14385ac"
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "7aef9c45"
      },
      "outputs": [],
      "source": [],
      "id": "7aef9c45"
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "07b448aba7f6485287fc4f0b40643fc9": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "ProgressStyleModel",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "231ca733a96b465a8d12b5c35a1a844c": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "HBoxModel",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_2fe45233b32844a78f0aabb7b1833eee",
              "IPY_MODEL_4b494aa374cd40408102ff42b0a144c1",
              "IPY_MODEL_2c395d9d0fac4b72b93fd0226c64c508"
            ],
            "layout": "IPY_MODEL_fda8822785af4bf1a125f5bb4445f34e"
          }
        },
        "2c395d9d0fac4b72b93fd0226c64c508": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "HTMLModel",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_711430e2b76c4cf3b98a0ac77320b094",
            "placeholder": "​",
            "style": "IPY_MODEL_9f7832bb2a2041edb2c87bea900ae71a",
            "value": " 4/4 [00:02&lt;00:00,  2.00it/s]"
          }
        },
        "2fe45233b32844a78f0aabb7b1833eee": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "HTMLModel",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_61b75f16848241ea8a13529e99272891",
            "placeholder": "​",
            "style": "IPY_MODEL_5989171303d64e298896e89df9412ea5",
            "value": "Processing: 100%"
          }
        },
        "4b494aa374cd40408102ff42b0a144c1": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "FloatProgressModel",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_f0fa206cf7654b32b13f5d1e14833879",
            "max": 4,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_07b448aba7f6485287fc4f0b40643fc9",
            "value": 4
          }
        },
        "5989171303d64e298896e89df9412ea5": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "61b75f16848241ea8a13529e99272891": {
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "model_name": "LayoutModel",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "711430e2b76c4cf3b98a0ac77320b094": {
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "model_name": "LayoutModel",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "9f7832bb2a2041edb2c87bea900ae71a": {
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "f0fa206cf7654b32b13f5d1e14833879": {
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "model_name": "LayoutModel",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "fda8822785af4bf1a125f5bb4445f34e": {
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "model_name": "LayoutModel",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": "hidden",
            "width": null
          }
        },
        "e699587d54694876b0b1a9bb258523e3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_a03ee1f57eff4cc8ac5c17789d53bb5f",
              "IPY_MODEL_4e12340e72cf4ff4821183ae324dea8d",
              "IPY_MODEL_82cc71ba8e9a489c9c867dd893f059b0"
            ],
            "layout": "IPY_MODEL_382cd41441654694bac66df9e7c4305d"
          }
        },
        "a03ee1f57eff4cc8ac5c17789d53bb5f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_c22aec517096444a9fb4b9b2918b48f4",
            "placeholder": "​",
            "style": "IPY_MODEL_b1e702dcefd94157863b36b0994dd8e6",
            "value": "Processing: 100%"
          }
        },
        "4e12340e72cf4ff4821183ae324dea8d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_828132d33b4d48f09bb8a549a8ae2c63",
            "max": 7,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_6288c6a434d648a48ab15d04d53ebd52",
            "value": 7
          }
        },
        "82cc71ba8e9a489c9c867dd893f059b0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_e27c6969f3c74543a16feb3f05339958",
            "placeholder": "​",
            "style": "IPY_MODEL_db3cafb7c93e48a3b275ea38a27afdfb",
            "value": " 7/7 [1:02:56&lt;00:00, 405.40s/it]"
          }
        },
        "382cd41441654694bac66df9e7c4305d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": "hidden",
            "width": null
          }
        },
        "c22aec517096444a9fb4b9b2918b48f4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "b1e702dcefd94157863b36b0994dd8e6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "828132d33b4d48f09bb8a549a8ae2c63": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "6288c6a434d648a48ab15d04d53ebd52": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "e27c6969f3c74543a16feb3f05339958": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "db3cafb7c93e48a3b275ea38a27afdfb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "e0305df78e8b4558afd582d8bf0bdd11": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_731290bd1fbc44938aeda72421b9a1ea",
              "IPY_MODEL_d6ae5bf56e4b44f985b2c0f24e66b8e7",
              "IPY_MODEL_1fcd1130da6e4e2595211735d34db883"
            ],
            "layout": "IPY_MODEL_5ae3f39fad4646a3a560360e9070982f"
          }
        },
        "731290bd1fbc44938aeda72421b9a1ea": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_4995375716df4ea9a368eee6699eb609",
            "placeholder": "​",
            "style": "IPY_MODEL_1e055f7c6db0460ea57a8c48ee077e31",
            "value": "Processing: 100%"
          }
        },
        "d6ae5bf56e4b44f985b2c0f24e66b8e7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_00a41145e60f4e139be175eeed16fec6",
            "max": 7,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_f7f05496148d407b82d75101ca1cc305",
            "value": 7
          }
        },
        "1fcd1130da6e4e2595211735d34db883": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_779d9800128942919455b239f8644807",
            "placeholder": "​",
            "style": "IPY_MODEL_c3c40ebcbb104c85bd884f61ce87b0f7",
            "value": " 7/7 [03:02&lt;00:00, 19.96s/it]"
          }
        },
        "5ae3f39fad4646a3a560360e9070982f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": "hidden",
            "width": null
          }
        },
        "4995375716df4ea9a368eee6699eb609": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "1e055f7c6db0460ea57a8c48ee077e31": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "00a41145e60f4e139be175eeed16fec6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "f7f05496148d407b82d75101ca1cc305": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "779d9800128942919455b239f8644807": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "c3c40ebcbb104c85bd884f61ce87b0f7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "a8713d5cb5a0426c9b8401f30d8ccd44": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_a9648745dcd5475b9c212812667c9205",
              "IPY_MODEL_2d66cb5b382b461dade18dce38617210",
              "IPY_MODEL_bdad38437143400ebc0fcc574c485d93"
            ],
            "layout": "IPY_MODEL_a42090588f824fd0be5267300deadc72"
          }
        },
        "a9648745dcd5475b9c212812667c9205": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_ad9d5d131b1d411da1f449fc1248f6ff",
            "placeholder": "​",
            "style": "IPY_MODEL_687a0fa4c08b4619a8fef9ddc804a33c",
            "value": "Processing: 100%"
          }
        },
        "2d66cb5b382b461dade18dce38617210": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_fd6714430e0344bda49e8c906d324b83",
            "max": 7,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_b5ce0f59af5c486db30aeabd9a19ca0c",
            "value": 7
          }
        },
        "bdad38437143400ebc0fcc574c485d93": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_95bf5130bd244a308b68a4d47cc75896",
            "placeholder": "​",
            "style": "IPY_MODEL_2667a56326c14731b2d83e58f4dc6853",
            "value": " 7/7 [05:48&lt;00:00, 38.14s/it]"
          }
        },
        "a42090588f824fd0be5267300deadc72": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": "hidden",
            "width": null
          }
        },
        "ad9d5d131b1d411da1f449fc1248f6ff": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "687a0fa4c08b4619a8fef9ddc804a33c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "fd6714430e0344bda49e8c906d324b83": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "b5ce0f59af5c486db30aeabd9a19ca0c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "95bf5130bd244a308b68a4d47cc75896": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "2667a56326c14731b2d83e58f4dc6853": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "52b273fa1f2e4eb5a7c8c4bb8c045dcb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_9072f3e406e949eab2aaf8f25fa522cd",
              "IPY_MODEL_37a24b4ac9e2410ab242e24192f7e197",
              "IPY_MODEL_7974202f141f43528e8c905a0914cdd9"
            ],
            "layout": "IPY_MODEL_64c565de32f940e1a0446755dc618510"
          }
        },
        "9072f3e406e949eab2aaf8f25fa522cd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_d9a29ec85e3745e69d0b2395cf4fa2ab",
            "placeholder": "​",
            "style": "IPY_MODEL_f99265a5d203418d9413682284ee8bd1",
            "value": "Processing: 100%"
          }
        },
        "37a24b4ac9e2410ab242e24192f7e197": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_e9e097f114d24bddb141580ba455c360",
            "max": 7,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_8dfd3131101746168d0aee042b1acfba",
            "value": 7
          }
        },
        "7974202f141f43528e8c905a0914cdd9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_4ede7d9509914419a82bff4ddeb9b886",
            "placeholder": "​",
            "style": "IPY_MODEL_2ba42e7c88f94667b42ee4489891c453",
            "value": " 7/7 [00:57&lt;00:00,  6.42s/it]"
          }
        },
        "64c565de32f940e1a0446755dc618510": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": "hidden",
            "width": null
          }
        },
        "d9a29ec85e3745e69d0b2395cf4fa2ab": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "f99265a5d203418d9413682284ee8bd1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "e9e097f114d24bddb141580ba455c360": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "8dfd3131101746168d0aee042b1acfba": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "4ede7d9509914419a82bff4ddeb9b886": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "2ba42e7c88f94667b42ee4489891c453": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "75a1bf50528e41a892541fa7f9dc8b5b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_15e305a66c104527baf8edaf683c548a",
              "IPY_MODEL_5b1ae3655db44712b6c4881d69c99168",
              "IPY_MODEL_a5f8ecffd10c438698cc04976ce79800"
            ],
            "layout": "IPY_MODEL_dd6dbce2edfe4c57aca7383ab403b39c"
          }
        },
        "15e305a66c104527baf8edaf683c548a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_61abc82d1811435eaa70f3a50d61af12",
            "placeholder": "​",
            "style": "IPY_MODEL_3c21baf487124100a0c5998bc4e53f75",
            "value": "Processing: 100%"
          }
        },
        "5b1ae3655db44712b6c4881d69c99168": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_e0d95c7b2c594da582c1f0d594d7b495",
            "max": 85,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_4fc006fe92594cf399c25bf3fc160a6b",
            "value": 85
          }
        },
        "a5f8ecffd10c438698cc04976ce79800": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_af10de3d0b6d48e79ada66e0193fe400",
            "placeholder": "​",
            "style": "IPY_MODEL_25ae1963edb94184829959de42e0052f",
            "value": " 85/85 [10:42&lt;00:00,  6.88s/it]"
          }
        },
        "dd6dbce2edfe4c57aca7383ab403b39c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": "hidden",
            "width": null
          }
        },
        "61abc82d1811435eaa70f3a50d61af12": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "3c21baf487124100a0c5998bc4e53f75": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "e0d95c7b2c594da582c1f0d594d7b495": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "4fc006fe92594cf399c25bf3fc160a6b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "af10de3d0b6d48e79ada66e0193fe400": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "25ae1963edb94184829959de42e0052f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "3ca1056db21d4942b85d9e13db6d7d48": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_4a0ae40fa3fd4cdc810f2b4de775c70f",
              "IPY_MODEL_f88bf08636b1408e96ace49bda92ef2b",
              "IPY_MODEL_7af8c074cf114856b739ce5020d85c4c"
            ],
            "layout": "IPY_MODEL_9a92306b447e49bc8ad25917efe849f7"
          }
        },
        "4a0ae40fa3fd4cdc810f2b4de775c70f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_0fd3bba731584a47b28b532de57c2d3b",
            "placeholder": "​",
            "style": "IPY_MODEL_a784ad0e55e04d779f331a065b54d0b6",
            "value": "Processing: 100%"
          }
        },
        "f88bf08636b1408e96ace49bda92ef2b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_d1fdec35fbaa445a9b3e8a4f04af3abb",
            "max": 89,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_451a7075369a45809f60f89aa4a0ae53",
            "value": 89
          }
        },
        "7af8c074cf114856b739ce5020d85c4c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_2fa201d2947b464b91f2863fb0573c21",
            "placeholder": "​",
            "style": "IPY_MODEL_6840c5548f7f41cea49a8489f18bac66",
            "value": " 89/89 [05:28&lt;00:00,  7.62s/it]"
          }
        },
        "9a92306b447e49bc8ad25917efe849f7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": "hidden",
            "width": null
          }
        },
        "0fd3bba731584a47b28b532de57c2d3b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "a784ad0e55e04d779f331a065b54d0b6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "d1fdec35fbaa445a9b3e8a4f04af3abb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "451a7075369a45809f60f89aa4a0ae53": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "2fa201d2947b464b91f2863fb0573c21": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "6840c5548f7f41cea49a8489f18bac66": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "ee4e4aa5b19549c786ffaa7f8178be8d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_06b47e9d1aa04a1ea5b802f8b5b12c0e",
              "IPY_MODEL_c687cd7cacd14e8ab2bbfdd4d5832c0f",
              "IPY_MODEL_606703913af94fe681bafafb4de9196c"
            ],
            "layout": "IPY_MODEL_56acb2fcd92e4a4bb26acafa9da96b8a"
          }
        },
        "06b47e9d1aa04a1ea5b802f8b5b12c0e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_cb2d3c96b8ed432e96900b0318d15811",
            "placeholder": "​",
            "style": "IPY_MODEL_7d72ee90b77c4c018a53523cf160dd28",
            "value": "Processing: 100%"
          }
        },
        "c687cd7cacd14e8ab2bbfdd4d5832c0f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_137f665c3c834fe88bed107d682b0b75",
            "max": 4,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_62729b9c7ebb48beb634305adef7b3ac",
            "value": 4
          }
        },
        "606703913af94fe681bafafb4de9196c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_c2ed24be46f54a1483e643eb4eb93925",
            "placeholder": "​",
            "style": "IPY_MODEL_2f66aa343d0148eb95abb1faec14b509",
            "value": " 4/4 [00:21&lt;00:00,  5.15s/it]"
          }
        },
        "56acb2fcd92e4a4bb26acafa9da96b8a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": "hidden",
            "width": null
          }
        },
        "cb2d3c96b8ed432e96900b0318d15811": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "7d72ee90b77c4c018a53523cf160dd28": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "137f665c3c834fe88bed107d682b0b75": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "62729b9c7ebb48beb634305adef7b3ac": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "c2ed24be46f54a1483e643eb4eb93925": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "2f66aa343d0148eb95abb1faec14b509": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "48e9ab60a3914fd885ba4fa50adf46b5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_e6ee5f4694244cd5bdcb6160ed2cf1aa",
              "IPY_MODEL_3b4e1365d7e944e8bfbf388b0ccd17a8",
              "IPY_MODEL_7de4bc05224b446f9008a2a5e1ecd192"
            ],
            "layout": "IPY_MODEL_3eedacb8bf7f4c4581c0ee32f2c2123d"
          }
        },
        "e6ee5f4694244cd5bdcb6160ed2cf1aa": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_5b62be90c302466faca151f1133c0f88",
            "placeholder": "​",
            "style": "IPY_MODEL_6c73c44aeb874814b96d7b5c73d6d4f7",
            "value": "Processing: 100%"
          }
        },
        "3b4e1365d7e944e8bfbf388b0ccd17a8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_0ff2ad70acf54db2b2f5e5c33760a56c",
            "max": 4,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_abac19c66e7941909ebab7bc2d0685ca",
            "value": 4
          }
        },
        "7de4bc05224b446f9008a2a5e1ecd192": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_45a3e49dfc23406c86decfdd80ffeef9",
            "placeholder": "​",
            "style": "IPY_MODEL_557364173b884676b043097d2d829c1b",
            "value": " 4/4 [00:12&lt;00:00,  3.05s/it]"
          }
        },
        "3eedacb8bf7f4c4581c0ee32f2c2123d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": "hidden",
            "width": null
          }
        },
        "5b62be90c302466faca151f1133c0f88": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "6c73c44aeb874814b96d7b5c73d6d4f7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "0ff2ad70acf54db2b2f5e5c33760a56c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "abac19c66e7941909ebab7bc2d0685ca": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "45a3e49dfc23406c86decfdd80ffeef9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "557364173b884676b043097d2d829c1b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "daae3e75e5d34f0a8cd59331da4cafbd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_367c1cbc933444e3a5ff3cdf44bc7064",
              "IPY_MODEL_c8bbf123d7344ae8ad16ee40bf40d809",
              "IPY_MODEL_1f6da7d69ba94748b08443ad1d900ca9"
            ],
            "layout": "IPY_MODEL_390b3dc339c84ad0956424f6ffc7cec8"
          }
        },
        "367c1cbc933444e3a5ff3cdf44bc7064": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_787dc82eadf54dee8f79ff626fa0e9a0",
            "placeholder": "​",
            "style": "IPY_MODEL_ee0f195bc565486eba534198c060e2c4",
            "value": "Processing: 100%"
          }
        },
        "c8bbf123d7344ae8ad16ee40bf40d809": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_a6b922f2c42648d2b92b7be923281694",
            "max": 4,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_cdddb19c53164ee986aa30d7935a8112",
            "value": 4
          }
        },
        "1f6da7d69ba94748b08443ad1d900ca9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_8b2250fae7ae425da5b4a1368b005655",
            "placeholder": "​",
            "style": "IPY_MODEL_48a264c235e04a999bce7f4a9e8d8e29",
            "value": " 4/4 [00:03&lt;00:00,  1.32it/s]"
          }
        },
        "390b3dc339c84ad0956424f6ffc7cec8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": "hidden",
            "width": null
          }
        },
        "787dc82eadf54dee8f79ff626fa0e9a0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "ee0f195bc565486eba534198c060e2c4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "a6b922f2c42648d2b92b7be923281694": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "cdddb19c53164ee986aa30d7935a8112": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "8b2250fae7ae425da5b4a1368b005655": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "48a264c235e04a999bce7f4a9e8d8e29": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "3e4f07d042754abfb7aae29d3d6998c7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_bde6fb89ac754428a03ac1a33ca13b05",
              "IPY_MODEL_fe81bfa6eda34bcd91caa094a576ad41",
              "IPY_MODEL_200120d41768433c918683f4e374f4f5"
            ],
            "layout": "IPY_MODEL_03316dd0151d4155a793f7d6eabe5b77"
          }
        },
        "bde6fb89ac754428a03ac1a33ca13b05": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_b7c7cb2b4c544667985cdff0dec64234",
            "placeholder": "​",
            "style": "IPY_MODEL_315f56c5e9da4de2ad47e669370c3ca9",
            "value": "Processing: 100%"
          }
        },
        "fe81bfa6eda34bcd91caa094a576ad41": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_168b14a04007421899e4c00d29dcb7e7",
            "max": 4,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_339a654b08bb4c3c9a118beb227f0467",
            "value": 4
          }
        },
        "200120d41768433c918683f4e374f4f5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_276eed74dde74d20903ff9306e95ef47",
            "placeholder": "​",
            "style": "IPY_MODEL_bcaa8ef6f4b4420d92dea54f41a2d09f",
            "value": " 4/4 [00:03&lt;00:00,  1.28it/s]"
          }
        },
        "03316dd0151d4155a793f7d6eabe5b77": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": "hidden",
            "width": null
          }
        },
        "b7c7cb2b4c544667985cdff0dec64234": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "315f56c5e9da4de2ad47e669370c3ca9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "168b14a04007421899e4c00d29dcb7e7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "339a654b08bb4c3c9a118beb227f0467": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "276eed74dde74d20903ff9306e95ef47": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "bcaa8ef6f4b4420d92dea54f41a2d09f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "80eefb858ae54efe8545ca2734808d41": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_7ecb467b46af4e31b81e604aac176684",
              "IPY_MODEL_2cfa4086bb3442209f13d619346a2be7",
              "IPY_MODEL_9c7a2d71515346d48431c92736de2df5"
            ],
            "layout": "IPY_MODEL_cb611e1831624bbead9c049ef3fae4ad"
          }
        },
        "7ecb467b46af4e31b81e604aac176684": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_2c0d14846bfa4d6caea2c134f423e4e3",
            "placeholder": "​",
            "style": "IPY_MODEL_fba80795eb3147069267e9c5ae6197bf",
            "value": "Processing: 100%"
          }
        },
        "2cfa4086bb3442209f13d619346a2be7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_2058e64d0ac942f5ad0996677ebc6e0d",
            "max": 4,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_f136465c910a4fb8836ef662c405fc14",
            "value": 4
          }
        },
        "9c7a2d71515346d48431c92736de2df5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_7731dc05db7c40cab83d26b4604123a0",
            "placeholder": "​",
            "style": "IPY_MODEL_08f3388ccd3f4c1896274dad0d188c22",
            "value": " 4/4 [00:04&lt;00:00,  1.08s/it]"
          }
        },
        "cb611e1831624bbead9c049ef3fae4ad": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": "hidden",
            "width": null
          }
        },
        "2c0d14846bfa4d6caea2c134f423e4e3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "fba80795eb3147069267e9c5ae6197bf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "2058e64d0ac942f5ad0996677ebc6e0d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "f136465c910a4fb8836ef662c405fc14": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "7731dc05db7c40cab83d26b4604123a0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "08f3388ccd3f4c1896274dad0d188c22": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "2c58c16726894c1a9c6f12e0618feee7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_95ed48e64bdd47738ba4d87587260b75",
              "IPY_MODEL_474bf159e2014a5397cc2801c9db3db5",
              "IPY_MODEL_2a999769eb364011aa5598103226cc26"
            ],
            "layout": "IPY_MODEL_8355cdb980954dcdb89497584691df30"
          }
        },
        "95ed48e64bdd47738ba4d87587260b75": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_21cc5bcd193d439d822b1e1d0271cc52",
            "placeholder": "​",
            "style": "IPY_MODEL_581dac9890554d4c97f2c9860ca42c20",
            "value": "Processing: 100%"
          }
        },
        "474bf159e2014a5397cc2801c9db3db5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_6f775ac2f4dd4ff59dc230785f9b9ba4",
            "max": 7,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_4ddf20259bae4b12a987d5199e63b054",
            "value": 7
          }
        },
        "2a999769eb364011aa5598103226cc26": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_f14de129e7e046849a428a83deca8762",
            "placeholder": "​",
            "style": "IPY_MODEL_8902a9cae9944d3986f3accfcce99615",
            "value": " 7/7 [26:06&lt;00:00, 168.14s/it]"
          }
        },
        "8355cdb980954dcdb89497584691df30": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": "hidden",
            "width": null
          }
        },
        "21cc5bcd193d439d822b1e1d0271cc52": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "581dac9890554d4c97f2c9860ca42c20": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "6f775ac2f4dd4ff59dc230785f9b9ba4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "4ddf20259bae4b12a987d5199e63b054": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "f14de129e7e046849a428a83deca8762": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "8902a9cae9944d3986f3accfcce99615": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        }
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}